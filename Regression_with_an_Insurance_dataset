{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":84896,"databundleVersionId":10305135,"sourceType":"competition"}],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example,running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:05.146714Z","iopub.execute_input":"2024-12-08T07:01:05.147067Z","iopub.status.idle":"2024-12-08T07:01:05.153509Z","shell.execute_reply.started":"2024-12-08T07:01:05.147040Z","shell.execute_reply":"2024-12-08T07:01:05.152717Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e12/sample_submission.csv\n/kaggle/input/playground-series-s4e12/train.csv\n/kaggle/input/playground-series-s4e12/test.csv\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e12/train.csv\")\ntrain_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:05.157171Z","iopub.execute_input":"2024-12-08T07:01:05.157426Z","iopub.status.idle":"2024-12-08T07:01:10.311235Z","shell.execute_reply.started":"2024-12-08T07:01:05.157402Z","shell.execute_reply":"2024-12-08T07:01:10.310350Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   id   Age  Gender  Annual Income Marital Status  Number of Dependents  \\\n0   0  19.0  Female        10049.0        Married                   1.0   \n1   1  39.0  Female        31678.0       Divorced                   3.0   \n2   2  23.0    Male        25602.0       Divorced                   3.0   \n3   3  21.0    Male       141855.0        Married                   2.0   \n4   4  21.0    Male        39651.0         Single                   1.0   \n\n  Education Level     Occupation  Health Score  Location  ... Previous Claims  \\\n0      Bachelor's  Self-Employed     22.598761     Urban  ...             2.0   \n1        Master's            NaN     15.569731     Rural  ...             1.0   \n2     High School  Self-Employed     47.177549  Suburban  ...             1.0   \n3      Bachelor's            NaN     10.938144     Rural  ...             1.0   \n4      Bachelor's  Self-Employed     20.376094     Rural  ...             0.0   \n\n   Vehicle Age  Credit Score  Insurance Duration           Policy Start Date  \\\n0         17.0         372.0                 5.0  2023-12-23 15:21:39.134960   \n1         12.0         694.0                 2.0  2023-06-12 15:21:39.111551   \n2         14.0           NaN                 3.0  2023-09-30 15:21:39.221386   \n3          0.0         367.0                 1.0  2024-06-12 15:21:39.226954   \n4          8.0         598.0                 4.0  2021-12-01 15:21:39.252145   \n\n  Customer Feedback Smoking Status Exercise Frequency Property Type  \\\n0              Poor             No             Weekly         House   \n1           Average            Yes            Monthly         House   \n2              Good            Yes             Weekly         House   \n3              Poor            Yes              Daily     Apartment   \n4              Poor            Yes             Weekly         House   \n\n  Premium Amount  \n0         2869.0  \n1         1483.0  \n2          567.0  \n3          765.0  \n4         2022.0  \n\n[5 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Location</th>\n      <th>...</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Policy Start Date</th>\n      <th>Customer Feedback</th>\n      <th>Smoking Status</th>\n      <th>Exercise Frequency</th>\n      <th>Property Type</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>Female</td>\n      <td>10049.0</td>\n      <td>Married</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>22.598761</td>\n      <td>Urban</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>372.0</td>\n      <td>5.0</td>\n      <td>2023-12-23 15:21:39.134960</td>\n      <td>Poor</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2869.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>Female</td>\n      <td>31678.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>15.569731</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>694.0</td>\n      <td>2.0</td>\n      <td>2023-06-12 15:21:39.111551</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Monthly</td>\n      <td>House</td>\n      <td>1483.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>Male</td>\n      <td>25602.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>High School</td>\n      <td>Self-Employed</td>\n      <td>47.177549</td>\n      <td>Suburban</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>2023-09-30 15:21:39.221386</td>\n      <td>Good</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>567.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>141855.0</td>\n      <td>Married</td>\n      <td>2.0</td>\n      <td>Bachelor's</td>\n      <td>NaN</td>\n      <td>10.938144</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>367.0</td>\n      <td>1.0</td>\n      <td>2024-06-12 15:21:39.226954</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>Apartment</td>\n      <td>765.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>39651.0</td>\n      <td>Single</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>20.376094</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>598.0</td>\n      <td>4.0</td>\n      <td>2021-12-01 15:21:39.252145</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2022.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 21 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"print(train_df.describe())\nprint(train_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:10.312493Z","iopub.execute_input":"2024-12-08T07:01:10.312776Z","iopub.status.idle":"2024-12-08T07:01:11.446675Z","shell.execute_reply.started":"2024-12-08T07:01:10.312750Z","shell.execute_reply":"2024-12-08T07:01:11.445817Z"}},"outputs":[{"name":"stdout","text":"                 id           Age  Annual Income  Number of Dependents  \\\ncount  1.200000e+06  1.181295e+06   1.155051e+06          1.090328e+06   \nmean   5.999995e+05  4.114556e+01   3.274522e+04          2.009934e+00   \nstd    3.464103e+05  1.353995e+01   3.217951e+04          1.417338e+00   \nmin    0.000000e+00  1.800000e+01   1.000000e+00          0.000000e+00   \n25%    2.999998e+05  3.000000e+01   8.001000e+03          1.000000e+00   \n50%    5.999995e+05  4.100000e+01   2.391100e+04          2.000000e+00   \n75%    8.999992e+05  5.300000e+01   4.463400e+04          3.000000e+00   \nmax    1.199999e+06  6.400000e+01   1.499970e+05          4.000000e+00   \n\n       Health Score  Previous Claims   Vehicle Age  Credit Score  \\\ncount  1.125924e+06    835971.000000  1.199994e+06  1.062118e+06   \nmean   2.561391e+01         1.002689  9.569889e+00  5.929244e+02   \nstd    1.220346e+01         0.982840  5.776189e+00  1.499819e+02   \nmin    2.012237e+00         0.000000  0.000000e+00  3.000000e+02   \n25%    1.591896e+01         0.000000  5.000000e+00  4.680000e+02   \n50%    2.457865e+01         1.000000  1.000000e+01  5.950000e+02   \n75%    3.452721e+01         2.000000  1.500000e+01  7.210000e+02   \nmax    5.897591e+01         9.000000  1.900000e+01  8.490000e+02   \n\n       Insurance Duration  Premium Amount  \ncount        1.199999e+06    1.200000e+06  \nmean         5.018219e+00    1.102545e+03  \nstd          2.594331e+00    8.649989e+02  \nmin          1.000000e+00    2.000000e+01  \n25%          3.000000e+00    5.140000e+02  \n50%          5.000000e+00    8.720000e+02  \n75%          7.000000e+00    1.509000e+03  \nmax          9.000000e+00    4.999000e+03  \n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1200000 entries, 0 to 1199999\nData columns (total 21 columns):\n #   Column                Non-Null Count    Dtype  \n---  ------                --------------    -----  \n 0   id                    1200000 non-null  int64  \n 1   Age                   1181295 non-null  float64\n 2   Gender                1200000 non-null  object \n 3   Annual Income         1155051 non-null  float64\n 4   Marital Status        1181471 non-null  object \n 5   Number of Dependents  1090328 non-null  float64\n 6   Education Level       1200000 non-null  object \n 7   Occupation            841925 non-null   object \n 8   Health Score          1125924 non-null  float64\n 9   Location              1200000 non-null  object \n 10  Policy Type           1200000 non-null  object \n 11  Previous Claims       835971 non-null   float64\n 12  Vehicle Age           1199994 non-null  float64\n 13  Credit Score          1062118 non-null  float64\n 14  Insurance Duration    1199999 non-null  float64\n 15  Policy Start Date     1200000 non-null  object \n 16  Customer Feedback     1122176 non-null  object \n 17  Smoking Status        1200000 non-null  object \n 18  Exercise Frequency    1200000 non-null  object \n 19  Property Type         1200000 non-null  object \n 20  Premium Amount        1200000 non-null  float64\ndtypes: float64(9), int64(1), object(11)\nmemory usage: 192.3+ MB\nNone\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"null_data = pd.DataFrame()\nnull_data['null_count'] = train_df.isnull().sum()\nnull_data['null_ratio'] = round(null_data['null_count'] / len(train_df), 4)\nnull_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:11.447782Z","iopub.execute_input":"2024-12-08T07:01:11.448052Z","iopub.status.idle":"2024-12-08T07:01:11.991875Z","shell.execute_reply.started":"2024-12-08T07:01:11.448026Z","shell.execute_reply":"2024-12-08T07:01:11.991095Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"                      null_count  null_ratio\nid                             0      0.0000\nAge                        18705      0.0156\nGender                         0      0.0000\nAnnual Income              44949      0.0375\nMarital Status             18529      0.0154\nNumber of Dependents      109672      0.0914\nEducation Level                0      0.0000\nOccupation                358075      0.2984\nHealth Score               74076      0.0617\nLocation                       0      0.0000\nPolicy Type                    0      0.0000\nPrevious Claims           364029      0.3034\nVehicle Age                    6      0.0000\nCredit Score              137882      0.1149\nInsurance Duration             1      0.0000\nPolicy Start Date              0      0.0000\nCustomer Feedback          77824      0.0649\nSmoking Status                 0      0.0000\nExercise Frequency             0      0.0000\nProperty Type                  0      0.0000\nPremium Amount                 0      0.0000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>18705</td>\n      <td>0.0156</td>\n    </tr>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Annual Income</th>\n      <td>44949</td>\n      <td>0.0375</td>\n    </tr>\n    <tr>\n      <th>Marital Status</th>\n      <td>18529</td>\n      <td>0.0154</td>\n    </tr>\n    <tr>\n      <th>Number of Dependents</th>\n      <td>109672</td>\n      <td>0.0914</td>\n    </tr>\n    <tr>\n      <th>Education Level</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Occupation</th>\n      <td>358075</td>\n      <td>0.2984</td>\n    </tr>\n    <tr>\n      <th>Health Score</th>\n      <td>74076</td>\n      <td>0.0617</td>\n    </tr>\n    <tr>\n      <th>Location</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Policy Type</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Previous Claims</th>\n      <td>364029</td>\n      <td>0.3034</td>\n    </tr>\n    <tr>\n      <th>Vehicle Age</th>\n      <td>6</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Credit Score</th>\n      <td>137882</td>\n      <td>0.1149</td>\n    </tr>\n    <tr>\n      <th>Insurance Duration</th>\n      <td>1</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Policy Start Date</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Customer Feedback</th>\n      <td>77824</td>\n      <td>0.0649</td>\n    </tr>\n    <tr>\n      <th>Smoking Status</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Exercise Frequency</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Property Type</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Premium Amount</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"train_df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:11.994681Z","iopub.execute_input":"2024-12-08T07:01:11.995461Z","iopub.status.idle":"2024-12-08T07:01:12.000968Z","shell.execute_reply.started":"2024-12-08T07:01:11.995429Z","shell.execute_reply":"2024-12-08T07:01:12.000062Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"Index(['id', 'Age', 'Gender', 'Annual Income', 'Marital Status',\n       'Number of Dependents', 'Education Level', 'Occupation', 'Health Score',\n       'Location', 'Policy Type', 'Previous Claims', 'Vehicle Age',\n       'Credit Score', 'Insurance Duration', 'Policy Start Date',\n       'Customer Feedback', 'Smoking Status', 'Exercise Frequency',\n       'Property Type', 'Premium Amount'],\n      dtype='object')"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"# train_df = train_df.dropna()\nprint(train_df[\"Number of Dependents\"].describe().astype(int))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:12.002470Z","iopub.execute_input":"2024-12-08T07:01:12.003105Z","iopub.status.idle":"2024-12-08T07:01:12.069754Z","shell.execute_reply.started":"2024-12-08T07:01:12.003064Z","shell.execute_reply":"2024-12-08T07:01:12.068808Z"}},"outputs":[{"name":"stdout","text":"count    1090328\nmean           2\nstd            1\nmin            0\n25%            1\n50%            2\n75%            3\nmax            4\nName: Number of Dependents, dtype: int64\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"train_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:12.070969Z","iopub.execute_input":"2024-12-08T07:01:12.071337Z","iopub.status.idle":"2024-12-08T07:01:12.077258Z","shell.execute_reply.started":"2024-12-08T07:01:12.071300Z","shell.execute_reply":"2024-12-08T07:01:12.076390Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"(1200000, 21)"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"categorical_cols = train_df.select_dtypes(include=['object', 'category']).columns\ncategorical_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:12.078295Z","iopub.execute_input":"2024-12-08T07:01:12.078579Z","iopub.status.idle":"2024-12-08T07:01:12.230293Z","shell.execute_reply.started":"2024-12-08T07:01:12.078515Z","shell.execute_reply":"2024-12-08T07:01:12.229373Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"Index(['Gender', 'Marital Status', 'Education Level', 'Occupation', 'Location',\n       'Policy Type', 'Policy Start Date', 'Customer Feedback',\n       'Smoking Status', 'Exercise Frequency', 'Property Type'],\n      dtype='object')"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"categorical_null_data = pd.DataFrame()\ncategorical_null_data['null_count'] = train_df[categorical_cols].isnull().sum()\ncategorical_null_data['null_ratio'] = round(categorical_null_data['null_count'] / len(train_df), 4)\ncategorical_null_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:12.231446Z","iopub.execute_input":"2024-12-08T07:01:12.231801Z","iopub.status.idle":"2024-12-08T07:01:12.930479Z","shell.execute_reply.started":"2024-12-08T07:01:12.231775Z","shell.execute_reply":"2024-12-08T07:01:12.929610Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"                    null_count  null_ratio\nGender                       0      0.0000\nMarital Status           18529      0.0154\nEducation Level              0      0.0000\nOccupation              358075      0.2984\nLocation                     0      0.0000\nPolicy Type                  0      0.0000\nPolicy Start Date            0      0.0000\nCustomer Feedback        77824      0.0649\nSmoking Status               0      0.0000\nExercise Frequency           0      0.0000\nProperty Type                0      0.0000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Marital Status</th>\n      <td>18529</td>\n      <td>0.0154</td>\n    </tr>\n    <tr>\n      <th>Education Level</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Occupation</th>\n      <td>358075</td>\n      <td>0.2984</td>\n    </tr>\n    <tr>\n      <th>Location</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Policy Type</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Policy Start Date</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Customer Feedback</th>\n      <td>77824</td>\n      <td>0.0649</td>\n    </tr>\n    <tr>\n      <th>Smoking Status</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Exercise Frequency</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>Property Type</th>\n      <td>0</td>\n      <td>0.0000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"for c in categorical_cols:\n    print(f'Category: {c}, Count: {len(train_df[c].unique())} Unique values: {train_df[c].unique()}')\n\nfor c in categorical_cols:\n    print(f'Category: {c}')\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:12.931748Z","iopub.execute_input":"2024-12-08T07:01:12.932038Z","iopub.status.idle":"2024-12-08T07:01:14.416816Z","shell.execute_reply.started":"2024-12-08T07:01:12.932011Z","shell.execute_reply":"2024-12-08T07:01:14.415800Z"}},"outputs":[{"name":"stdout","text":"Category: Gender, Count: 2 Unique values: ['Female' 'Male']\nCategory: Marital Status, Count: 4 Unique values: ['Married' 'Divorced' 'Single' nan]\nCategory: Education Level, Count: 4 Unique values: [\"Bachelor's\" \"Master's\" 'High School' 'PhD']\nCategory: Occupation, Count: 4 Unique values: ['Self-Employed' nan 'Employed' 'Unemployed']\nCategory: Location, Count: 3 Unique values: ['Urban' 'Rural' 'Suburban']\nCategory: Policy Type, Count: 3 Unique values: ['Premium' 'Comprehensive' 'Basic']\nCategory: Policy Start Date, Count: 167381 Unique values: ['2023-12-23 15:21:39.134960' '2023-06-12 15:21:39.111551'\n '2023-09-30 15:21:39.221386' ... '2021-04-28 15:21:39.129190'\n '2019-11-14 15:21:39.201446' '2020-10-19 15:21:39.118178']\nCategory: Customer Feedback, Count: 4 Unique values: ['Poor' 'Average' 'Good' nan]\nCategory: Smoking Status, Count: 2 Unique values: ['No' 'Yes']\nCategory: Exercise Frequency, Count: 4 Unique values: ['Weekly' 'Monthly' 'Daily' 'Rarely']\nCategory: Property Type, Count: 3 Unique values: ['House' 'Apartment' 'Condo']\nCategory: Gender\nCategory: Marital Status\nCategory: Education Level\nCategory: Occupation\nCategory: Location\nCategory: Policy Type\nCategory: Policy Start Date\nCategory: Customer Feedback\nCategory: Smoking Status\nCategory: Exercise Frequency\nCategory: Property Type\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"# Category: Gender ////\n# Category: Marital Status ////\n# Category: Education Level /\n# Category: Occupation ////\n# Category: Location //\n# Category: Policy Type ///\n# Category: Policy Start Date ///\n# Category: Customer Feedback /\n# Category: Smoking Status /\n# Category: Exercise Frequency /\n# Category: Property Type //\n\nimport pandas as pd\n\ndf = train_df.copy()\n\nbinary_mappings = {\n    'Smoking Status': {'No': 0, 'Yes': 1}\n}\nfor col, mapping in binary_mappings.items():\n    if col in df.columns:\n        df[col] = df[col].map(mapping)\n\nonehot_encode_cols = ['Gender', 'Location', 'Policy Type', 'Property Type']\ndf = pd.get_dummies(df, columns=onehot_encode_cols, drop_first=False)\n\nordinal_mappings = {\n    'Exercise Frequency': {'Rarely': 0, 'Monthly': 1, 'Weekly': 2, 'Daily': 3},\n    'Customer Feedback': {'Poor': 0, 'Average': 1, 'Good': 2},\n    'Education Level': {'High School': 0, \"Bachelor's\": 1, \"Master's\": 2, 'PhD': 3},\n    'Policy Type': {'Premium': 2, 'Comprehensive': 1, 'Basic': 0}\n}\nfor col, mapping in ordinal_mappings.items():\n    if col in df.columns:\n        df[col] = df[col].map(mapping)\n\nif 'Policy Start Date' in df.columns:\n    df['Policy Start Date'] = pd.to_datetime(df['Policy Start Date']).astype(int) / 10**9  \n\ncategorical_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\nfor col in categorical_cols:\n    df[col] = df[col].fillna('Unknown')\n\nlabel_encode_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\nfor col in label_encode_cols:\n    df[col] = df[col].astype('category').cat.codes\n\nprint(df.head())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:14.418927Z","iopub.execute_input":"2024-12-08T07:01:14.419321Z","iopub.status.idle":"2024-12-08T07:01:16.623211Z","shell.execute_reply.started":"2024-12-08T07:01:14.419288Z","shell.execute_reply":"2024-12-08T07:01:16.622296Z"}},"outputs":[{"name":"stdout","text":"   id   Age  Annual Income  Marital Status  Number of Dependents  \\\n0   0  19.0        10049.0               1                   1.0   \n1   1  39.0        31678.0               0                   3.0   \n2   2  23.0        25602.0               0                   3.0   \n3   3  21.0       141855.0               1                   2.0   \n4   4  21.0        39651.0               2                   1.0   \n\n   Education Level  Occupation  Health Score  Previous Claims  Vehicle Age  \\\n0                1           1     22.598761              2.0         17.0   \n1                2           3     15.569731              1.0         12.0   \n2                0           1     47.177549              1.0         14.0   \n3                1           3     10.938144              1.0          0.0   \n4                1           1     20.376094              0.0          8.0   \n\n   ...  Gender_Male  Location_Rural  Location_Suburban  Location_Urban  \\\n0  ...        False           False              False            True   \n1  ...        False            True              False           False   \n2  ...         True           False               True           False   \n3  ...         True            True              False           False   \n4  ...         True            True              False           False   \n\n   Policy Type_Basic  Policy Type_Comprehensive  Policy Type_Premium  \\\n0              False                      False                 True   \n1              False                       True                False   \n2              False                      False                 True   \n3               True                      False                False   \n4              False                      False                 True   \n\n   Property Type_Apartment  Property Type_Condo  Property Type_House  \n0                    False                False                 True  \n1                    False                False                 True  \n2                    False                False                 True  \n3                     True                False                False  \n4                    False                False                 True  \n\n[5 rows x 28 columns]\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"df = pd.DataFrame(df)\ndf.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:16.624331Z","iopub.execute_input":"2024-12-08T07:01:16.624630Z","iopub.status.idle":"2024-12-08T07:01:16.630177Z","shell.execute_reply.started":"2024-12-08T07:01:16.624604Z","shell.execute_reply":"2024-12-08T07:01:16.629300Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"(1200000, 28)"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nfig, axes = plt.subplots(len(categorical_cols) + 1, 1, figsize=(10, 5 * (len(categorical_cols) + 1)))\nfig.tight_layout(pad=6.0)\n\nfor i, col in enumerate(categorical_cols):\n    sns.boxplot(x=train_df[col], y=train_df['Premium Amount'], ax=axes[i])\n    axes[i].set_title(f'Boxplot of {col} vs Premium Amount')\n    axes[i].set_xticklabels(axes[i].get_xticklabels(), rotation=45)\n\ncorr_matrix = train_df.select_dtypes(include=['number']).corr()\nsns.heatmap(corr_matrix, annot=True, cmap='coolwarm', ax=axes[len(categorical_cols)])\naxes[len(categorical_cols)].set_title('Correlation Matrix Heatmap')\n\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:16.631296Z","iopub.execute_input":"2024-12-08T07:01:16.631603Z","iopub.status.idle":"2024-12-08T07:01:20.305134Z","shell.execute_reply.started":"2024-12-08T07:01:16.631569Z","shell.execute_reply":"2024-12-08T07:01:20.304265Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x2000 with 5 Axes>","image/png":""},"metadata":{}}],"execution_count":17},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# train_df = train_df.drop(columns=categorical_cols)\n# train_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:20.306124Z","iopub.execute_input":"2024-12-08T07:01:20.306613Z","iopub.status.idle":"2024-12-08T07:01:20.310475Z","shell.execute_reply.started":"2024-12-08T07:01:20.306586Z","shell.execute_reply":"2024-12-08T07:01:20.309498Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom scipy.stats import skew, kurtosis\n\ndf = df.fillna(df.mean())\n\ndf['Mean_Income_Duration'] = (df['Annual Income'] + df['Insurance Duration']) / 2\ndf['Income_Skewness'] = skew(df['Annual Income'], nan_policy='omit')\ndf['Health_Skewness'] = skew(df['Health Score'], nan_policy='omit')\ndf['Claims_Skewness'] = skew(df['Previous Claims'], nan_policy='omit')\n\ndf['Income_Kurtosis'] = kurtosis(df['Annual Income'], nan_policy='omit')\ndf['Health_Kurtosis'] = kurtosis(df['Health Score'], nan_policy='omit')\ndf['Claims_Kurtosis'] = kurtosis(df['Previous Claims'], nan_policy='omit')\n\ndf['Income_Per_Dependent'] = df['Annual Income'] / (df['Number of Dependents'] + 1)  \ndf['Claims_Per_Year'] = df['Previous Claims'] / df['Insurance Duration']\n\ndf['Age_to_VehicleAge_Diff'] = df['Age'] - df['Vehicle Age']\ndf['Health_to_Credit_Score_Ratio'] = df['Health Score'] / (df['Credit Score'] + 1)\n\ndf['Total_Assets'] = df['Annual Income'] + df['Credit Score']\ndf['Overall_Risk'] = (df['Vehicle Age'] + df['Previous Claims'] + df['Insurance Duration']) / df['Health Score']\n\ndf['Log_Income'] = np.log1p(df['Annual Income'])\ndf['Log_Credit'] = np.log1p(df['Credit Score'])\n\n\ndf['Income_Quartile'] = pd.qcut(df['Annual Income'], 4, labels=[1, 2, 3, 4])\ndf['Credit_Quartile'] = pd.qcut(df['Credit Score'], 4, labels=[1, 2, 3, 4])\n\ndf['High_Income'] = (df['Annual Income'] > df['Annual Income'].median()).astype(int)\ndf['Old_Vehicle'] = (df['Vehicle Age'] > 10).astype(int)\n\n# Display the enriched dataset\ndf.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:20.311897Z","iopub.execute_input":"2024-12-08T07:01:20.312223Z","iopub.status.idle":"2024-12-08T07:01:21.003200Z","shell.execute_reply.started":"2024-12-08T07:01:20.312183Z","shell.execute_reply":"2024-12-08T07:01:21.002260Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"   id   Age  Annual Income  Marital Status  Number of Dependents  \\\n0   0  19.0        10049.0               1                   1.0   \n1   1  39.0        31678.0               0                   3.0   \n2   2  23.0        25602.0               0                   3.0   \n3   3  21.0       141855.0               1                   2.0   \n4   4  21.0        39651.0               2                   1.0   \n\n   Education Level  Occupation  Health Score  Previous Claims  Vehicle Age  \\\n0                1           1     22.598761              2.0         17.0   \n1                2           3     15.569731              1.0         12.0   \n2                0           1     47.177549              1.0         14.0   \n3                1           3     10.938144              1.0          0.0   \n4                1           1     20.376094              0.0          8.0   \n\n   ...  Age_to_VehicleAge_Diff  Health_to_Credit_Score_Ratio  Total_Assets  \\\n0  ...                     2.0                      0.060586   10421.00000   \n1  ...                    27.0                      0.022402   32372.00000   \n2  ...                     9.0                      0.079434   26194.92435   \n3  ...                    21.0                      0.029723  142222.00000   \n4  ...                    13.0                      0.034017   40249.00000   \n\n   Overall_Risk  Log_Income  Log_Credit  Income_Quartile  Credit_Quartile  \\\n0      1.062005    9.215328    5.921578                2                1   \n1      0.963408   10.363409    6.543912                3                3   \n2      0.381537   10.150465    6.386752                3                2   \n3      0.182846   11.862568    5.908083                4                1   \n4      0.588925   10.587897    6.395262                3                3   \n\n   High_Income  Old_Vehicle  \n0            0            1  \n1            1            1  \n2            1            1  \n3            1            0  \n4            1            0  \n\n[5 rows x 47 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>...</th>\n      <th>Age_to_VehicleAge_Diff</th>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <th>Total_Assets</th>\n      <th>Overall_Risk</th>\n      <th>Log_Income</th>\n      <th>Log_Credit</th>\n      <th>Income_Quartile</th>\n      <th>Credit_Quartile</th>\n      <th>High_Income</th>\n      <th>Old_Vehicle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>10049.0</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>22.598761</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>0.060586</td>\n      <td>10421.00000</td>\n      <td>1.062005</td>\n      <td>9.215328</td>\n      <td>5.921578</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>31678.0</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>2</td>\n      <td>3</td>\n      <td>15.569731</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>...</td>\n      <td>27.0</td>\n      <td>0.022402</td>\n      <td>32372.00000</td>\n      <td>0.963408</td>\n      <td>10.363409</td>\n      <td>6.543912</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>25602.0</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>47.177549</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>...</td>\n      <td>9.0</td>\n      <td>0.079434</td>\n      <td>26194.92435</td>\n      <td>0.381537</td>\n      <td>10.150465</td>\n      <td>6.386752</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>141855.0</td>\n      <td>1</td>\n      <td>2.0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>10.938144</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>21.0</td>\n      <td>0.029723</td>\n      <td>142222.00000</td>\n      <td>0.182846</td>\n      <td>11.862568</td>\n      <td>5.908083</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>39651.0</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>20.376094</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>...</td>\n      <td>13.0</td>\n      <td>0.034017</td>\n      <td>40249.00000</td>\n      <td>0.588925</td>\n      <td>10.587897</td>\n      <td>6.395262</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 47 columns</p>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:21.004404Z","iopub.execute_input":"2024-12-08T07:01:21.004799Z","iopub.status.idle":"2024-12-08T07:01:21.010718Z","shell.execute_reply.started":"2024-12-08T07:01:21.004757Z","shell.execute_reply":"2024-12-08T07:01:21.009744Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"(1200000, 47)"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"null_data = pd.DataFrame()\nnull_data['null_count'] = df.isnull().sum()\nnull_data['null_ratio'] = round(null_data['null_count'] / len(df), 4)\nnull_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:21.011623Z","iopub.execute_input":"2024-12-08T07:01:21.011880Z","iopub.status.idle":"2024-12-08T07:01:21.111817Z","shell.execute_reply.started":"2024-12-08T07:01:21.011856Z","shell.execute_reply":"2024-12-08T07:01:21.110776Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"                              null_count  null_ratio\nid                                     0         0.0\nAge                                    0         0.0\nAnnual Income                          0         0.0\nMarital Status                         0         0.0\nNumber of Dependents                   0         0.0\nEducation Level                        0         0.0\nOccupation                             0         0.0\nHealth Score                           0         0.0\nPrevious Claims                        0         0.0\nVehicle Age                            0         0.0\nCredit Score                           0         0.0\nInsurance Duration                     0         0.0\nPolicy Start Date                      0         0.0\nCustomer Feedback                      0         0.0\nSmoking Status                         0         0.0\nExercise Frequency                     0         0.0\nPremium Amount                         0         0.0\nGender_Female                          0         0.0\nGender_Male                            0         0.0\nLocation_Rural                         0         0.0\nLocation_Suburban                      0         0.0\nLocation_Urban                         0         0.0\nPolicy Type_Basic                      0         0.0\nPolicy Type_Comprehensive              0         0.0\nPolicy Type_Premium                    0         0.0\nProperty Type_Apartment                0         0.0\nProperty Type_Condo                    0         0.0\nProperty Type_House                    0         0.0\nMean_Income_Duration                   0         0.0\nIncome_Skewness                        0         0.0\nHealth_Skewness                        0         0.0\nClaims_Skewness                        0         0.0\nIncome_Kurtosis                        0         0.0\nHealth_Kurtosis                        0         0.0\nClaims_Kurtosis                        0         0.0\nIncome_Per_Dependent                   0         0.0\nClaims_Per_Year                        0         0.0\nAge_to_VehicleAge_Diff                 0         0.0\nHealth_to_Credit_Score_Ratio           0         0.0\nTotal_Assets                           0         0.0\nOverall_Risk                           0         0.0\nLog_Income                             0         0.0\nLog_Credit                             0         0.0\nIncome_Quartile                        0         0.0\nCredit_Quartile                        0         0.0\nHigh_Income                            0         0.0\nOld_Vehicle                            0         0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Annual Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Marital Status</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Number of Dependents</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Education Level</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Occupation</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Previous Claims</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Vehicle Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Insurance Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Policy Start Date</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Customer Feedback</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Smoking Status</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Exercise Frequency</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Premium Amount</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Gender_Female</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Gender_Male</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Location_Rural</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Location_Suburban</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Location_Urban</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Policy Type_Basic</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Policy Type_Comprehensive</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Policy Type_Premium</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Property Type_Apartment</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Property Type_Condo</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Property Type_House</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Mean_Income_Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Per_Dependent</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Per_Year</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age_to_VehicleAge_Diff</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Total_Assets</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Overall_Risk</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Credit</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>High_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Old_Vehicle</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:46.660588Z","iopub.execute_input":"2024-12-08T07:01:46.660938Z","iopub.status.idle":"2024-12-08T07:01:47.251916Z","shell.execute_reply.started":"2024-12-08T07:01:46.660910Z","shell.execute_reply":"2024-12-08T07:01:47.250788Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"              id   Age  Annual Income  Marital Status  Number of Dependents  \\\n0              0  19.0   10049.000000               1              1.000000   \n1              1  39.0   31678.000000               0              3.000000   \n2              2  23.0   25602.000000               0              3.000000   \n3              3  21.0  141855.000000               1              2.000000   \n4              4  21.0   39651.000000               2              1.000000   \n...          ...   ...            ...             ...                   ...   \n1199995  1199995  36.0   27316.000000               1              0.000000   \n1199996  1199996  54.0   35786.000000               0              2.009934   \n1199997  1199997  19.0   51884.000000               0              0.000000   \n1199998  1199998  55.0   32745.217777               2              1.000000   \n1199999  1199999  21.0   32745.217777               0              0.000000   \n\n         Education Level  Occupation  Health Score  Previous Claims  \\\n0                      1           1     22.598761         2.000000   \n1                      2           3     15.569731         1.000000   \n2                      0           1     47.177549         1.000000   \n3                      1           3     10.938144         1.000000   \n4                      1           1     20.376094         0.000000   \n...                  ...         ...           ...              ...   \n1199995                2           2     13.772907         1.002689   \n1199996                2           1     11.483482         1.002689   \n1199997                2           3     14.724469         0.000000   \n1199998                3           3     18.547381         1.000000   \n1199999                3           3     10.125323         0.000000   \n\n         Vehicle Age  ...  Age_to_VehicleAge_Diff  \\\n0               17.0  ...                     2.0   \n1               12.0  ...                    27.0   \n2               14.0  ...                     9.0   \n3                0.0  ...                    21.0   \n4                8.0  ...                    13.0   \n...              ...  ...                     ...   \n1199995          5.0  ...                    31.0   \n1199996         10.0  ...                    44.0   \n1199997         19.0  ...                     0.0   \n1199998          7.0  ...                    48.0   \n1199999         18.0  ...                     3.0   \n\n         Health_to_Credit_Score_Ratio   Total_Assets  Overall_Risk  \\\n0                            0.060586   10421.000000      1.062005   \n1                            0.022402   32372.000000      0.963408   \n2                            0.079434   26194.924350      0.381537   \n3                            0.029723  142222.000000      0.182846   \n4                            0.034017   40249.000000      0.588925   \n...                               ...            ...           ...   \n1199995                      0.036925   27688.000000      0.653652   \n1199996                      0.019203   36383.000000      1.306458   \n1199997                      0.024792   52476.924350      1.697854   \n1199998                      0.045459   33152.217777      0.646992   \n1199999                      0.020130   33247.217777      2.370295   \n\n         Log_Income  Log_Credit  Income_Quartile  Credit_Quartile  \\\n0          9.215328    5.921578                2                1   \n1         10.363409    6.543912                3                3   \n2         10.150465    6.386752                3                2   \n3         11.862568    5.908083                4                1   \n4         10.587897    6.395262                3                3   \n...             ...         ...              ...              ...   \n1199995   10.215264    5.921578                3                1   \n1199996   10.485340    6.393591                3                3   \n1199997   10.856785    6.386752                4                2   \n1199998   10.396543    6.011267                3                1   \n1199999   10.396543    6.220590                3                2   \n\n         High_Income  Old_Vehicle  \n0                  0            1  \n1                  1            1  \n2                  1            1  \n3                  1            0  \n4                  1            0  \n...              ...          ...  \n1199995            1            0  \n1199996            1            0  \n1199997            1            1  \n1199998            1            0  \n1199999            1            1  \n\n[1200000 rows x 47 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>...</th>\n      <th>Age_to_VehicleAge_Diff</th>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <th>Total_Assets</th>\n      <th>Overall_Risk</th>\n      <th>Log_Income</th>\n      <th>Log_Credit</th>\n      <th>Income_Quartile</th>\n      <th>Credit_Quartile</th>\n      <th>High_Income</th>\n      <th>Old_Vehicle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>10049.000000</td>\n      <td>1</td>\n      <td>1.000000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>22.598761</td>\n      <td>2.000000</td>\n      <td>17.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>0.060586</td>\n      <td>10421.000000</td>\n      <td>1.062005</td>\n      <td>9.215328</td>\n      <td>5.921578</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>31678.000000</td>\n      <td>0</td>\n      <td>3.000000</td>\n      <td>2</td>\n      <td>3</td>\n      <td>15.569731</td>\n      <td>1.000000</td>\n      <td>12.0</td>\n      <td>...</td>\n      <td>27.0</td>\n      <td>0.022402</td>\n      <td>32372.000000</td>\n      <td>0.963408</td>\n      <td>10.363409</td>\n      <td>6.543912</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>25602.000000</td>\n      <td>0</td>\n      <td>3.000000</td>\n      <td>0</td>\n      <td>1</td>\n      <td>47.177549</td>\n      <td>1.000000</td>\n      <td>14.0</td>\n      <td>...</td>\n      <td>9.0</td>\n      <td>0.079434</td>\n      <td>26194.924350</td>\n      <td>0.381537</td>\n      <td>10.150465</td>\n      <td>6.386752</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>141855.000000</td>\n      <td>1</td>\n      <td>2.000000</td>\n      <td>1</td>\n      <td>3</td>\n      <td>10.938144</td>\n      <td>1.000000</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>21.0</td>\n      <td>0.029723</td>\n      <td>142222.000000</td>\n      <td>0.182846</td>\n      <td>11.862568</td>\n      <td>5.908083</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>39651.000000</td>\n      <td>2</td>\n      <td>1.000000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>20.376094</td>\n      <td>0.000000</td>\n      <td>8.0</td>\n      <td>...</td>\n      <td>13.0</td>\n      <td>0.034017</td>\n      <td>40249.000000</td>\n      <td>0.588925</td>\n      <td>10.587897</td>\n      <td>6.395262</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1199995</th>\n      <td>1199995</td>\n      <td>36.0</td>\n      <td>27316.000000</td>\n      <td>1</td>\n      <td>0.000000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>13.772907</td>\n      <td>1.002689</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>31.0</td>\n      <td>0.036925</td>\n      <td>27688.000000</td>\n      <td>0.653652</td>\n      <td>10.215264</td>\n      <td>5.921578</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1199996</th>\n      <td>1199996</td>\n      <td>54.0</td>\n      <td>35786.000000</td>\n      <td>0</td>\n      <td>2.009934</td>\n      <td>2</td>\n      <td>1</td>\n      <td>11.483482</td>\n      <td>1.002689</td>\n      <td>10.0</td>\n      <td>...</td>\n      <td>44.0</td>\n      <td>0.019203</td>\n      <td>36383.000000</td>\n      <td>1.306458</td>\n      <td>10.485340</td>\n      <td>6.393591</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1199997</th>\n      <td>1199997</td>\n      <td>19.0</td>\n      <td>51884.000000</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>2</td>\n      <td>3</td>\n      <td>14.724469</td>\n      <td>0.000000</td>\n      <td>19.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.024792</td>\n      <td>52476.924350</td>\n      <td>1.697854</td>\n      <td>10.856785</td>\n      <td>6.386752</td>\n      <td>4</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1199998</th>\n      <td>1199998</td>\n      <td>55.0</td>\n      <td>32745.217777</td>\n      <td>2</td>\n      <td>1.000000</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18.547381</td>\n      <td>1.000000</td>\n      <td>7.0</td>\n      <td>...</td>\n      <td>48.0</td>\n      <td>0.045459</td>\n      <td>33152.217777</td>\n      <td>0.646992</td>\n      <td>10.396543</td>\n      <td>6.011267</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1199999</th>\n      <td>1199999</td>\n      <td>21.0</td>\n      <td>32745.217777</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>3</td>\n      <td>3</td>\n      <td>10.125323</td>\n      <td>0.000000</td>\n      <td>18.0</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>0.020130</td>\n      <td>33247.217777</td>\n      <td>2.370295</td>\n      <td>10.396543</td>\n      <td>6.220590</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>1200000 rows × 47 columns</p>\n</div>"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_log_error\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.optimizers import Adam\n\n# Separate features and target\nX = df.drop(columns=['Premium Amount'])\ny = df['Premium Amount']\n\n# Train-test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Standardize features (important for NN models)\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# Log-transform the target variable to stabilize variance\ny_train = np.log1p(y_train)\ny_test = np.log1p(y_test)\n\n# Build the Neural Network model\nmodel = Sequential([\n    Dense(64, activation='relu', input_shape=(X_train.shape[1],)),\n    Dropout(0.1),\n    Dense(32, activation='relu'),\n    Dropout(0.05),\n    Dense(16, activation='relu'),\n    Dense(1, activation='linear')  # Output layer for regression\n])\n\n# Compile the model\nmodel.compile(optimizer=Adam(learning_rate=0.001), loss='mse', metrics=['mae'])\n\n# Train the model\nhistory = model.fit(X, y, validation_split=0.2, epochs=25, batch_size=32, verbose=1)\n\n# Predict and Evaluate\ny_pred = model.predict(X_test)\ny_pred = np.expm1(y_pred)  # Reverse the log transformation\ny_test = np.expm1(y_test)  # Reverse the log transformation\n\n# Calculate RMSLE\nrmsle = np.sqrt(mean_squared_log_error(y_test, y_pred))\n\nprint(f\"Root Mean Squared Logarithmic Error (RMSLE): {rmsle}\")\n\n# Predict method\ndef predict_premium(X_input):\n    X_input_scaled = scaler.transform(X_input)\n    predictions = model.predict(X_input_scaled)\n    return np.expm1(predictions)  # Reverse the log transformation\n\n# Example usage of predict\nexample_data = X_test[:5]  # Replace with new input data\npredictions = predict_premium(example_data)\nprint(\"Predicted Premium Amounts:\", predictions)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:01:50.790203Z","iopub.execute_input":"2024-12-08T07:01:50.790850Z","iopub.status.idle":"2024-12-08T07:11:46.385072Z","shell.execute_reply.started":"2024-12-08T07:01:50.790817Z","shell.execute_reply":"2024-12-08T07:11:46.384177Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"Epoch 1/15\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1733641317.522228     107 service.cc:145] XLA service 0x7d0584004c80 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1733641317.522288     107 service.cc:153]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1733641317.522292     107 service.cc:153]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m  112/24000\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m32s\u001b[0m 1ms/step - loss: 31.3141 - mae: 5.0368  ","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1733641320.894425     107 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m43s\u001b[0m 2ms/step - loss: 1.8853 - mae: 0.9532 - val_loss: 1.1697 - val_mae: 0.7708\nEpoch 2/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1634 - mae: 0.7755 - val_loss: 1.1544 - val_mae: 0.7629\nEpoch 3/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 2ms/step - loss: 1.1472 - mae: 0.7673 - val_loss: 1.1483 - val_mae: 0.7646\nEpoch 4/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1497 - mae: 0.7673 - val_loss: 1.1510 - val_mae: 0.7605\nEpoch 5/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1457 - mae: 0.7660 - val_loss: 1.1463 - val_mae: 0.7627\nEpoch 6/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1457 - mae: 0.7658 - val_loss: 1.1454 - val_mae: 0.7665\nEpoch 7/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1484 - mae: 0.7664 - val_loss: 1.1483 - val_mae: 0.7742\nEpoch 8/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1410 - mae: 0.7642 - val_loss: 1.1460 - val_mae: 0.7681\nEpoch 9/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1419 - mae: 0.7641 - val_loss: 1.1466 - val_mae: 0.7596\nEpoch 10/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1418 - mae: 0.7645 - val_loss: 1.1511 - val_mae: 0.7663\nEpoch 11/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1441 - mae: 0.7644 - val_loss: 1.1510 - val_mae: 0.7595\nEpoch 12/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1422 - mae: 0.7641 - val_loss: 1.1451 - val_mae: 0.7678\nEpoch 13/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1433 - mae: 0.7648 - val_loss: 1.1437 - val_mae: 0.7670\nEpoch 14/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m37s\u001b[0m 2ms/step - loss: 1.1410 - mae: 0.7639 - val_loss: 1.1466 - val_mae: 0.7589\nEpoch 15/15\n\u001b[1m24000/24000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m38s\u001b[0m 2ms/step - loss: 1.1404 - mae: 0.7630 - val_loss: 1.1486 - val_mae: 0.7594\n\u001b[1m7500/7500\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 1ms/step\nRoot Mean Squared Logarithmic Error (RMSLE): 1.0708245911191965\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step\nPredicted Premium Amounts: [[6.7030281e+05]\n [3.0980737e+10]\n [2.6216702e+07]\n [1.3042716e+05]\n [8.1471295e+11]]\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"X_train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:19:18.610972Z","iopub.execute_input":"2024-12-08T07:19:18.611317Z","iopub.status.idle":"2024-12-08T07:19:18.617333Z","shell.execute_reply.started":"2024-12-08T07:19:18.611289Z","shell.execute_reply":"2024-12-08T07:19:18.616279Z"}},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"(960000, 46)"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"add_compound_data(convert_categorical_to_numeric(test_df), scaler = scaler, fit_scaler=False).shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:22:18.530947Z","iopub.execute_input":"2024-12-08T07:22:18.531306Z","iopub.status.idle":"2024-12-08T07:22:21.959112Z","shell.execute_reply.started":"2024-12-08T07:22:18.531274Z","shell.execute_reply":"2024-12-08T07:22:21.958252Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"(800000, 46)"},"metadata":{}}],"execution_count":41},{"cell_type":"code","source":"test_df = pd.read_csv(\"/kaggle/input/playground-series-s4e12/test.csv\")\n\ntest_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:15:21.267583Z","iopub.execute_input":"2024-12-08T07:15:21.268500Z","iopub.status.idle":"2024-12-08T07:15:24.481546Z","shell.execute_reply.started":"2024-12-08T07:15:21.268464Z","shell.execute_reply":"2024-12-08T07:15:24.480569Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"             id   Age  Gender  Annual Income Marital Status  \\\n0       1200000  28.0  Female         2310.0            NaN   \n1       1200001  31.0  Female       126031.0        Married   \n2       1200002  47.0  Female        17092.0       Divorced   \n3       1200003  28.0  Female        30424.0       Divorced   \n4       1200004  24.0    Male        10863.0       Divorced   \n...         ...   ...     ...            ...            ...   \n799995  1999995  50.0  Female        38782.0        Married   \n799996  1999996   NaN  Female        73462.0         Single   \n799997  1999997  26.0  Female        35178.0         Single   \n799998  1999998  34.0  Female        45661.0         Single   \n799999  1999999  25.0    Male        24843.0       Divorced   \n\n        Number of Dependents Education Level     Occupation  Health Score  \\\n0                        4.0      Bachelor's  Self-Employed      7.657981   \n1                        2.0        Master's  Self-Employed     13.381379   \n2                        0.0             PhD     Unemployed     24.354527   \n3                        3.0             PhD  Self-Employed      5.136225   \n4                        2.0     High School     Unemployed     11.844155   \n...                      ...             ...            ...           ...   \n799995                   1.0      Bachelor's            NaN     14.498639   \n799996                   0.0        Master's            NaN      8.145748   \n799997                   0.0        Master's       Employed      6.636583   \n799998                   3.0        Master's            NaN     15.937248   \n799999                   3.0     High School            NaN     24.893939   \n\n        Location    Policy Type  Previous Claims  Vehicle Age  Credit Score  \\\n0          Rural          Basic              NaN         19.0           NaN   \n1       Suburban        Premium              NaN         14.0         372.0   \n2          Urban  Comprehensive              NaN         16.0         819.0   \n3       Suburban  Comprehensive              1.0          3.0         770.0   \n4       Suburban        Premium              NaN         14.0         755.0   \n...          ...            ...              ...          ...           ...   \n799995     Rural        Premium              NaN          8.0         309.0   \n799996     Rural          Basic              2.0          0.0           NaN   \n799997     Urban  Comprehensive              NaN         10.0           NaN   \n799998     Urban        Premium              2.0         17.0         467.0   \n799999  Suburban  Comprehensive              NaN         15.0           NaN   \n\n        Insurance Duration           Policy Start Date Customer Feedback  \\\n0                      1.0  2023-06-04 15:21:39.245086              Poor   \n1                      8.0  2024-04-22 15:21:39.224915              Good   \n2                      9.0  2023-04-05 15:21:39.134960           Average   \n3                      5.0  2023-10-25 15:21:39.134960              Poor   \n4                      7.0  2021-11-26 15:21:39.259788           Average   \n...                    ...                         ...               ...   \n799995                 2.0  2021-07-09 15:21:39.184157           Average   \n799996                 2.0  2023-03-28 15:21:39.250151              Good   \n799997                 6.0  2019-09-30 15:21:39.132191              Poor   \n799998                 7.0  2022-05-09 15:21:39.253660           Average   \n799999                 8.0  2021-05-18 15:21:39.108562              Good   \n\n       Smoking Status Exercise Frequency Property Type  \n0                 Yes             Weekly         House  \n1                 Yes             Rarely     Apartment  \n2                 Yes            Monthly         Condo  \n3                 Yes              Daily         House  \n4                  No             Weekly         House  \n...               ...                ...           ...  \n799995            Yes              Daily         Condo  \n799996             No              Daily     Apartment  \n799997             No            Monthly     Apartment  \n799998             No             Weekly         Condo  \n799999             No             Rarely         House  \n\n[800000 rows x 20 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Location</th>\n      <th>Policy Type</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Policy Start Date</th>\n      <th>Customer Feedback</th>\n      <th>Smoking Status</th>\n      <th>Exercise Frequency</th>\n      <th>Property Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1200000</td>\n      <td>28.0</td>\n      <td>Female</td>\n      <td>2310.0</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>7.657981</td>\n      <td>Rural</td>\n      <td>Basic</td>\n      <td>NaN</td>\n      <td>19.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>2023-06-04 15:21:39.245086</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1200001</td>\n      <td>31.0</td>\n      <td>Female</td>\n      <td>126031.0</td>\n      <td>Married</td>\n      <td>2.0</td>\n      <td>Master's</td>\n      <td>Self-Employed</td>\n      <td>13.381379</td>\n      <td>Suburban</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>14.0</td>\n      <td>372.0</td>\n      <td>8.0</td>\n      <td>2024-04-22 15:21:39.224915</td>\n      <td>Good</td>\n      <td>Yes</td>\n      <td>Rarely</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1200002</td>\n      <td>47.0</td>\n      <td>Female</td>\n      <td>17092.0</td>\n      <td>Divorced</td>\n      <td>0.0</td>\n      <td>PhD</td>\n      <td>Unemployed</td>\n      <td>24.354527</td>\n      <td>Urban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>16.0</td>\n      <td>819.0</td>\n      <td>9.0</td>\n      <td>2023-04-05 15:21:39.134960</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Monthly</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200003</td>\n      <td>28.0</td>\n      <td>Female</td>\n      <td>30424.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>PhD</td>\n      <td>Self-Employed</td>\n      <td>5.136225</td>\n      <td>Suburban</td>\n      <td>Comprehensive</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>770.0</td>\n      <td>5.0</td>\n      <td>2023-10-25 15:21:39.134960</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1200004</td>\n      <td>24.0</td>\n      <td>Male</td>\n      <td>10863.0</td>\n      <td>Divorced</td>\n      <td>2.0</td>\n      <td>High School</td>\n      <td>Unemployed</td>\n      <td>11.844155</td>\n      <td>Suburban</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>14.0</td>\n      <td>755.0</td>\n      <td>7.0</td>\n      <td>2021-11-26 15:21:39.259788</td>\n      <td>Average</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>1999995</td>\n      <td>50.0</td>\n      <td>Female</td>\n      <td>38782.0</td>\n      <td>Married</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>NaN</td>\n      <td>14.498639</td>\n      <td>Rural</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>8.0</td>\n      <td>309.0</td>\n      <td>2.0</td>\n      <td>2021-07-09 15:21:39.184157</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>1999996</td>\n      <td>NaN</td>\n      <td>Female</td>\n      <td>73462.0</td>\n      <td>Single</td>\n      <td>0.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>8.145748</td>\n      <td>Rural</td>\n      <td>Basic</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>2023-03-28 15:21:39.250151</td>\n      <td>Good</td>\n      <td>No</td>\n      <td>Daily</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>1999997</td>\n      <td>26.0</td>\n      <td>Female</td>\n      <td>35178.0</td>\n      <td>Single</td>\n      <td>0.0</td>\n      <td>Master's</td>\n      <td>Employed</td>\n      <td>6.636583</td>\n      <td>Urban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>10.0</td>\n      <td>NaN</td>\n      <td>6.0</td>\n      <td>2019-09-30 15:21:39.132191</td>\n      <td>Poor</td>\n      <td>No</td>\n      <td>Monthly</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>1999998</td>\n      <td>34.0</td>\n      <td>Female</td>\n      <td>45661.0</td>\n      <td>Single</td>\n      <td>3.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>15.937248</td>\n      <td>Urban</td>\n      <td>Premium</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>467.0</td>\n      <td>7.0</td>\n      <td>2022-05-09 15:21:39.253660</td>\n      <td>Average</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>1999999</td>\n      <td>25.0</td>\n      <td>Male</td>\n      <td>24843.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>High School</td>\n      <td>NaN</td>\n      <td>24.893939</td>\n      <td>Suburban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>15.0</td>\n      <td>NaN</td>\n      <td>8.0</td>\n      <td>2021-05-18 15:21:39.108562</td>\n      <td>Good</td>\n      <td>No</td>\n      <td>Rarely</td>\n      <td>House</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 20 columns</p>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:36:24.075266Z","iopub.execute_input":"2024-12-07T14:36:24.075676Z","iopub.status.idle":"2024-12-07T14:38:27.974909Z","shell.execute_reply.started":"2024-12-07T14:36:24.075642Z","shell.execute_reply":"2024-12-07T14:38:27.973038Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def convert_categorical_to_numeric(df):\n    binary_mappings = {\n        'Smoking Status': {'No': 0, 'Yes': 1}\n    }\n    for col, mapping in binary_mappings.items():\n        if col in df.columns:\n            df[col] = df[col].map(mapping)\n    \n    onehot_encode_cols = ['Gender', 'Location', 'Policy Type', 'Property Type']\n    df = pd.get_dummies(df, columns=onehot_encode_cols, drop_first=False)\n    \n    ordinal_mappings = {\n        'Exercise Frequency': {'Rarely': 0, 'Monthly': 1, 'Weekly': 2, 'Daily': 3},\n        'Customer Feedback': {'Poor': 0, 'Average': 1, 'Good': 2},\n        'Education Level': {'High School': 0, \"Bachelor's\": 1, \"Master's\": 2, 'PhD': 3},\n        'Policy Type': {'Premium': 2, 'Comprehensive': 1, 'Basic': 0}\n    }\n    for col, mapping in ordinal_mappings.items():\n        if col in df.columns:\n            df[col] = df[col].map(mapping)\n    \n    if 'Policy Start Date' in df.columns:\n        df['Policy Start Date'] = pd.to_datetime(df['Policy Start Date']).astype(int) / 10**9  \n    \n    categorical_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n    for col in categorical_cols:\n        df[col] = df[col].fillna('Unknown')\n    \n    label_encode_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n    for col in label_encode_cols:\n        df[col] = df[col].astype('category').cat.codes\n    \n    return df\nconvert_categorical_to_numeric(test_df).shape\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:20:54.285492Z","iopub.execute_input":"2024-12-08T07:20:54.286209Z","iopub.status.idle":"2024-12-08T07:20:55.533669Z","shell.execute_reply.started":"2024-12-08T07:20:54.286177Z","shell.execute_reply":"2024-12-08T07:20:55.532720Z"}},"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"(800000, 27)"},"metadata":{}}],"execution_count":37},{"cell_type":"code","source":"def add_compound_data(df, scaler=None, fit_scaler=False):\n    df = df.fillna(df.mean())\n\n    # Add new features\n    df['Mean_Income_Duration'] = (df['Annual Income'] + df['Insurance Duration']) / 2\n    df['Income_Skewness'] = skew(df['Annual Income'], nan_policy='omit')\n    df['Health_Skewness'] = skew(df['Health Score'], nan_policy='omit')\n    df['Claims_Skewness'] = skew(df['Previous Claims'], nan_policy='omit')\n\n    df['Income_Kurtosis'] = kurtosis(df['Annual Income'], nan_policy='omit')\n    df['Health_Kurtosis'] = kurtosis(df['Health Score'], nan_policy='omit')\n    df['Claims_Kurtosis'] = kurtosis(df['Previous Claims'], nan_policy='omit')\n\n    df['Income_Per_Dependent'] = df['Annual Income'] / (df['Number of Dependents'] + 1)\n    df['Claims_Per_Year'] = df['Previous Claims'] / df['Insurance Duration']\n    df['Age_to_VehicleAge_Diff'] = df['Age'] - df['Vehicle Age']\n    df['Health_to_Credit_Score_Ratio'] = df['Health Score'] / (df['Credit Score'] + 1)\n\n    df['Total_Assets'] = df['Annual Income'] + df['Credit Score']\n    df['Overall_Risk'] = (df['Vehicle Age'] + df['Previous Claims'] + df['Insurance Duration']) / df['Health Score']\n\n    # Avoid issues with log transformation\n    df['Log_Income'] = np.log1p(df['Annual Income'])\n    df['Log_Credit'] = np.log1p(df['Credit Score'])\n\n    df['Income_Quartile'] = pd.qcut(df['Annual Income'], 4, labels=[1, 2, 3, 4]).astype(int)\n    df['Credit_Quartile'] = pd.qcut(df['Credit Score'], 4, labels=[1, 2, 3, 4]).astype(int)\n\n    df['High_Income'] = (df['Annual Income'] > df['Annual Income'].median()).astype(int)\n    df['Old_Vehicle'] = (df['Vehicle Age'] > 10).astype(int)\n\n\n\n    df = scaler.transform(df)\n\n    return df\n\n\ntransformed_test_df = convert_categorical_to_numeric(test_df)\ntransformed_test_df = add_compound_data(transformed_test_df, scaler=scaler, fit_scaler=False)\ntransformed_test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:22:42.084086Z","iopub.execute_input":"2024-12-08T07:22:42.084867Z","iopub.status.idle":"2024-12-08T07:22:45.210756Z","shell.execute_reply.started":"2024-12-08T07:22:42.084833Z","shell.execute_reply":"2024-12-08T07:22:45.209821Z"}},"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"array([[ 1.73202678, -0.97952587, -0.96384337, ..., -0.39789626,\n        -0.99967297,  1.09180175],\n       [ 1.73202967, -0.75612433,  2.95407268, ..., -1.2939707 ,\n         1.00032714,  1.09180175],\n       [ 1.73203255,  0.43535053, -0.49573663, ...,  1.39425263,\n        -0.99967297,  1.09180175],\n       ...,\n       [ 4.04107646, -1.12846023,  0.07699904, ..., -0.39789626,\n         1.00032714, -0.9159172 ],\n       [ 4.04107934, -0.5327228 ,  0.40896786, ..., -1.2939707 ,\n         1.00032714,  1.09180175],\n       [ 4.04108223, -1.20292741, -0.25028301, ..., -0.39789626,\n        -0.99967297,  1.09180175]])"},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"\n# print(test_df.drop(columns=categorical_cols, errors='ignore').dtypes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:40:29.913483Z","iopub.execute_input":"2024-12-07T14:40:29.913936Z","iopub.status.idle":"2024-12-07T14:40:29.955700Z","shell.execute_reply.started":"2024-12-07T14:40:29.913896Z","shell.execute_reply":"2024-12-07T14:40:29.954606Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"transformed_test_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T07:23:06.339168Z","iopub.execute_input":"2024-12-08T07:23:06.339854Z","iopub.status.idle":"2024-12-08T07:23:06.345014Z","shell.execute_reply.started":"2024-12-08T07:23:06.339820Z","shell.execute_reply":"2024-12-08T07:23:06.344108Z"}},"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"(800000, 46)"},"metadata":{}}],"execution_count":44},{"cell_type":"code","source":"test_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:25:28.416549Z","iopub.execute_input":"2024-12-07T14:25:28.416949Z","iopub.status.idle":"2024-12-07T14:25:28.423259Z","shell.execute_reply.started":"2024-12-07T14:25:28.416915Z","shell.execute_reply":"2024-12-07T14:25:28.422301Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"predict_premium(transformed_test_df).shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:42:05.872563Z","iopub.execute_input":"2024-12-07T14:42:05.872967Z","iopub.status.idle":"2024-12-07T14:42:44.564858Z","shell.execute_reply.started":"2024-12-07T14:42:05.872932Z","shell.execute_reply":"2024-12-07T14:42:44.563620Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission = test_df[['id']]\nsubmission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:42:48.817439Z","iopub.execute_input":"2024-12-07T14:42:48.817913Z","iopub.status.idle":"2024-12-07T14:42:48.830893Z","shell.execute_reply.started":"2024-12-07T14:42:48.817877Z","shell.execute_reply":"2024-12-07T14:42:48.829717Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission[\"Premium Amount\"] = predict_premium(transformed_test_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:42:52.115782Z","iopub.execute_input":"2024-12-07T14:42:52.116184Z","iopub.status.idle":"2024-12-07T14:43:26.970499Z","shell.execute_reply.started":"2024-12-07T14:42:52.116148Z","shell.execute_reply":"2024-12-07T14:43:26.969398Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\nsubmission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:43:36.889630Z","iopub.execute_input":"2024-12-07T14:43:36.890055Z","iopub.status.idle":"2024-12-07T14:43:36.903056Z","shell.execute_reply.started":"2024-12-07T14:43:36.890020Z","shell.execute_reply":"2024-12-07T14:43:36.901912Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission.to_csv('submission.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T14:43:45.918519Z","iopub.execute_input":"2024-12-07T14:43:45.918964Z","iopub.status.idle":"2024-12-07T14:43:47.197706Z","shell.execute_reply.started":"2024-12-07T14:43:45.918926Z","shell.execute_reply":"2024-12-07T14:43:47.196776Z"}},"outputs":[],"execution_count":null}]}