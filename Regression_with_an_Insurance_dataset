{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":84896,"databundleVersionId":10305135,"sourceType":"competition"}],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example,running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:36.237810Z","iopub.execute_input":"2024-12-08T16:13:36.238159Z","iopub.status.idle":"2024-12-08T16:13:36.246597Z","shell.execute_reply.started":"2024-12-08T16:13:36.238127Z","shell.execute_reply":"2024-12-08T16:13:36.245766Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e12/sample_submission.csv\n/kaggle/input/playground-series-s4e12/train.csv\n/kaggle/input/playground-series-s4e12/test.csv\n","output_type":"stream"}],"execution_count":50},{"cell_type":"code","source":"train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e12/train.csv\")\ntrain_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:36.247867Z","iopub.execute_input":"2024-12-08T16:13:36.248122Z","iopub.status.idle":"2024-12-08T16:13:39.466653Z","shell.execute_reply.started":"2024-12-08T16:13:36.248097Z","shell.execute_reply":"2024-12-08T16:13:39.465767Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"   id   Age  Gender  Annual Income Marital Status  Number of Dependents  \\\n0   0  19.0  Female        10049.0        Married                   1.0   \n1   1  39.0  Female        31678.0       Divorced                   3.0   \n2   2  23.0    Male        25602.0       Divorced                   3.0   \n3   3  21.0    Male       141855.0        Married                   2.0   \n4   4  21.0    Male        39651.0         Single                   1.0   \n\n  Education Level     Occupation  Health Score  Location  ... Previous Claims  \\\n0      Bachelor's  Self-Employed     22.598761     Urban  ...             2.0   \n1        Master's            NaN     15.569731     Rural  ...             1.0   \n2     High School  Self-Employed     47.177549  Suburban  ...             1.0   \n3      Bachelor's            NaN     10.938144     Rural  ...             1.0   \n4      Bachelor's  Self-Employed     20.376094     Rural  ...             0.0   \n\n   Vehicle Age  Credit Score  Insurance Duration           Policy Start Date  \\\n0         17.0         372.0                 5.0  2023-12-23 15:21:39.134960   \n1         12.0         694.0                 2.0  2023-06-12 15:21:39.111551   \n2         14.0           NaN                 3.0  2023-09-30 15:21:39.221386   \n3          0.0         367.0                 1.0  2024-06-12 15:21:39.226954   \n4          8.0         598.0                 4.0  2021-12-01 15:21:39.252145   \n\n  Customer Feedback Smoking Status Exercise Frequency Property Type  \\\n0              Poor             No             Weekly         House   \n1           Average            Yes            Monthly         House   \n2              Good            Yes             Weekly         House   \n3              Poor            Yes              Daily     Apartment   \n4              Poor            Yes             Weekly         House   \n\n  Premium Amount  \n0         2869.0  \n1         1483.0  \n2          567.0  \n3          765.0  \n4         2022.0  \n\n[5 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Location</th>\n      <th>...</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Policy Start Date</th>\n      <th>Customer Feedback</th>\n      <th>Smoking Status</th>\n      <th>Exercise Frequency</th>\n      <th>Property Type</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>Female</td>\n      <td>10049.0</td>\n      <td>Married</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>22.598761</td>\n      <td>Urban</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>372.0</td>\n      <td>5.0</td>\n      <td>2023-12-23 15:21:39.134960</td>\n      <td>Poor</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2869.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>Female</td>\n      <td>31678.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>15.569731</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>694.0</td>\n      <td>2.0</td>\n      <td>2023-06-12 15:21:39.111551</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Monthly</td>\n      <td>House</td>\n      <td>1483.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>Male</td>\n      <td>25602.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>High School</td>\n      <td>Self-Employed</td>\n      <td>47.177549</td>\n      <td>Suburban</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>2023-09-30 15:21:39.221386</td>\n      <td>Good</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>567.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>141855.0</td>\n      <td>Married</td>\n      <td>2.0</td>\n      <td>Bachelor's</td>\n      <td>NaN</td>\n      <td>10.938144</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>367.0</td>\n      <td>1.0</td>\n      <td>2024-06-12 15:21:39.226954</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>Apartment</td>\n      <td>765.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>39651.0</td>\n      <td>Single</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>20.376094</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>598.0</td>\n      <td>4.0</td>\n      <td>2021-12-01 15:21:39.252145</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2022.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 21 columns</p>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"print(train_df.describe())\nprint(train_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.467874Z","iopub.execute_input":"2024-12-08T16:13:39.468299Z","iopub.status.idle":"2024-12-08T16:13:39.500933Z","shell.execute_reply.started":"2024-12-08T16:13:39.468232Z","shell.execute_reply":"2024-12-08T16:13:39.500038Z"}},"outputs":[{"name":"stdout","text":"                id         Age  Annual Income  Number of Dependents  \\\ncount  1000.000000  985.000000     967.000000            893.000000   \nmean    499.500000   41.237563   32203.230610              1.988802   \nstd     288.819436   13.600141   32200.646322              1.390183   \nmin       0.000000   18.000000      34.000000              0.000000   \n25%     249.750000   29.000000    7084.000000              1.000000   \n50%     499.500000   41.000000   23222.000000              2.000000   \n75%     749.250000   53.000000   43980.500000              3.000000   \nmax     999.000000   64.000000  149473.000000              4.000000   \n\n       Health Score  Previous Claims  Vehicle Age  Credit Score  \\\ncount    945.000000       697.000000  1000.000000    877.000000   \nmean      26.007123         0.944046     9.430000    594.136830   \nstd       12.656390         0.945967     5.840995    150.793092   \nmin        3.451751         0.000000     0.000000    301.000000   \n25%       16.246836         0.000000     4.000000    467.000000   \n50%       23.908459         1.000000     9.000000    591.000000   \n75%       35.096757         2.000000    15.000000    725.000000   \nmax       55.896322         4.000000    19.000000    848.000000   \n\n       Insurance Duration  Premium Amount  \ncount         1000.000000     1000.000000  \nmean             4.927000     1098.009000  \nstd              2.687172      845.749211  \nmin              1.000000       20.000000  \n25%              2.750000      526.000000  \n50%              5.000000      888.000000  \n75%              7.000000     1489.500000  \nmax              9.000000     4366.000000  \n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1000 entries, 0 to 999\nData columns (total 21 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   id                    1000 non-null   int64  \n 1   Age                   985 non-null    float64\n 2   Gender                1000 non-null   object \n 3   Annual Income         967 non-null    float64\n 4   Marital Status        987 non-null    object \n 5   Number of Dependents  893 non-null    float64\n 6   Education Level       1000 non-null   object \n 7   Occupation            717 non-null    object \n 8   Health Score          945 non-null    float64\n 9   Location              1000 non-null   object \n 10  Policy Type           1000 non-null   object \n 11  Previous Claims       697 non-null    float64\n 12  Vehicle Age           1000 non-null   float64\n 13  Credit Score          877 non-null    float64\n 14  Insurance Duration    1000 non-null   float64\n 15  Policy Start Date     1000 non-null   object \n 16  Customer Feedback     920 non-null    object \n 17  Smoking Status        1000 non-null   object \n 18  Exercise Frequency    1000 non-null   object \n 19  Property Type         1000 non-null   object \n 20  Premium Amount        1000 non-null   float64\ndtypes: float64(9), int64(1), object(11)\nmemory usage: 164.2+ KB\nNone\n","output_type":"stream"}],"execution_count":52},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"null_data = pd.DataFrame()\nnull_data['null_count'] = train_df.isnull().sum()\nnull_data['null_ratio'] = round(null_data['null_count'] / len(train_df), 4)\nnull_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.502525Z","iopub.execute_input":"2024-12-08T16:13:39.502774Z","iopub.status.idle":"2024-12-08T16:13:39.514729Z","shell.execute_reply.started":"2024-12-08T16:13:39.502749Z","shell.execute_reply":"2024-12-08T16:13:39.513742Z"}},"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"                      null_count  null_ratio\nid                             0       0.000\nAge                           15       0.015\nGender                         0       0.000\nAnnual Income                 33       0.033\nMarital Status                13       0.013\nNumber of Dependents         107       0.107\nEducation Level                0       0.000\nOccupation                   283       0.283\nHealth Score                  55       0.055\nLocation                       0       0.000\nPolicy Type                    0       0.000\nPrevious Claims              303       0.303\nVehicle Age                    0       0.000\nCredit Score                 123       0.123\nInsurance Duration             0       0.000\nPolicy Start Date              0       0.000\nCustomer Feedback             80       0.080\nSmoking Status                 0       0.000\nExercise Frequency             0       0.000\nProperty Type                  0       0.000\nPremium Amount                 0       0.000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>15</td>\n      <td>0.015</td>\n    </tr>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Annual Income</th>\n      <td>33</td>\n      <td>0.033</td>\n    </tr>\n    <tr>\n      <th>Marital Status</th>\n      <td>13</td>\n      <td>0.013</td>\n    </tr>\n    <tr>\n      <th>Number of Dependents</th>\n      <td>107</td>\n      <td>0.107</td>\n    </tr>\n    <tr>\n      <th>Education Level</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Occupation</th>\n      <td>283</td>\n      <td>0.283</td>\n    </tr>\n    <tr>\n      <th>Health Score</th>\n      <td>55</td>\n      <td>0.055</td>\n    </tr>\n    <tr>\n      <th>Location</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Policy Type</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Previous Claims</th>\n      <td>303</td>\n      <td>0.303</td>\n    </tr>\n    <tr>\n      <th>Vehicle Age</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Credit Score</th>\n      <td>123</td>\n      <td>0.123</td>\n    </tr>\n    <tr>\n      <th>Insurance Duration</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Policy Start Date</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Customer Feedback</th>\n      <td>80</td>\n      <td>0.080</td>\n    </tr>\n    <tr>\n      <th>Smoking Status</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Exercise Frequency</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Property Type</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Premium Amount</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":53},{"cell_type":"code","source":"train_df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.515682Z","iopub.execute_input":"2024-12-08T16:13:39.515935Z","iopub.status.idle":"2024-12-08T16:13:39.525859Z","shell.execute_reply.started":"2024-12-08T16:13:39.515911Z","shell.execute_reply":"2024-12-08T16:13:39.525062Z"}},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"Index(['id', 'Age', 'Gender', 'Annual Income', 'Marital Status',\n       'Number of Dependents', 'Education Level', 'Occupation', 'Health Score',\n       'Location', 'Policy Type', 'Previous Claims', 'Vehicle Age',\n       'Credit Score', 'Insurance Duration', 'Policy Start Date',\n       'Customer Feedback', 'Smoking Status', 'Exercise Frequency',\n       'Property Type', 'Premium Amount'],\n      dtype='object')"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"# train_df = train_df.dropna()\nprint(train_df[\"Number of Dependents\"].describe().astype(int))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.526745Z","iopub.execute_input":"2024-12-08T16:13:39.527055Z","iopub.status.idle":"2024-12-08T16:13:39.538282Z","shell.execute_reply.started":"2024-12-08T16:13:39.527019Z","shell.execute_reply":"2024-12-08T16:13:39.537414Z"}},"outputs":[{"name":"stdout","text":"count    893\nmean       1\nstd        1\nmin        0\n25%        1\n50%        2\n75%        3\nmax        4\nName: Number of Dependents, dtype: int64\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"train_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.539305Z","iopub.execute_input":"2024-12-08T16:13:39.539571Z","iopub.status.idle":"2024-12-08T16:13:39.554070Z","shell.execute_reply.started":"2024-12-08T16:13:39.539527Z","shell.execute_reply":"2024-12-08T16:13:39.553297Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"(1000, 21)"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"categorical_cols = train_df.select_dtypes(include=['object', 'category']).columns\ncategorical_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.555060Z","iopub.execute_input":"2024-12-08T16:13:39.555384Z","iopub.status.idle":"2024-12-08T16:13:39.567482Z","shell.execute_reply.started":"2024-12-08T16:13:39.555345Z","shell.execute_reply":"2024-12-08T16:13:39.566571Z"}},"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"Index(['Gender', 'Marital Status', 'Education Level', 'Occupation', 'Location',\n       'Policy Type', 'Policy Start Date', 'Customer Feedback',\n       'Smoking Status', 'Exercise Frequency', 'Property Type'],\n      dtype='object')"},"metadata":{}}],"execution_count":57},{"cell_type":"code","source":"categorical_null_data = pd.DataFrame()\ncategorical_null_data['null_count'] = train_df[categorical_cols].isnull().sum()\ncategorical_null_data['null_ratio'] = round(categorical_null_data['null_count'] / len(train_df), 4)\ncategorical_null_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.570325Z","iopub.execute_input":"2024-12-08T16:13:39.570632Z","iopub.status.idle":"2024-12-08T16:13:39.586174Z","shell.execute_reply.started":"2024-12-08T16:13:39.570606Z","shell.execute_reply":"2024-12-08T16:13:39.585404Z"}},"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"                    null_count  null_ratio\nGender                       0       0.000\nMarital Status              13       0.013\nEducation Level              0       0.000\nOccupation                 283       0.283\nLocation                     0       0.000\nPolicy Type                  0       0.000\nPolicy Start Date            0       0.000\nCustomer Feedback           80       0.080\nSmoking Status               0       0.000\nExercise Frequency           0       0.000\nProperty Type                0       0.000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Marital Status</th>\n      <td>13</td>\n      <td>0.013</td>\n    </tr>\n    <tr>\n      <th>Education Level</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Occupation</th>\n      <td>283</td>\n      <td>0.283</td>\n    </tr>\n    <tr>\n      <th>Location</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Policy Type</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Policy Start Date</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Customer Feedback</th>\n      <td>80</td>\n      <td>0.080</td>\n    </tr>\n    <tr>\n      <th>Smoking Status</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Exercise Frequency</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>Property Type</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"# for c in categorical_cols:\n#     print(f'Category: {c}, Count: {len(train_df[c].unique())} Unique values: {train_df[c].unique()}')\n\n# for c in categorical_cols:\n#     print(f'Category: {c}')\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.587389Z","iopub.execute_input":"2024-12-08T16:13:39.587712Z","iopub.status.idle":"2024-12-08T16:13:39.604796Z","shell.execute_reply.started":"2024-12-08T16:13:39.587675Z","shell.execute_reply":"2024-12-08T16:13:39.603905Z"}},"outputs":[{"name":"stdout","text":"Category: Gender, Count: 2 Unique values: ['Female' 'Male']\nCategory: Marital Status, Count: 4 Unique values: ['Married' 'Divorced' 'Single' nan]\nCategory: Education Level, Count: 4 Unique values: [\"Bachelor's\" \"Master's\" 'High School' 'PhD']\nCategory: Occupation, Count: 4 Unique values: ['Self-Employed' nan 'Employed' 'Unemployed']\nCategory: Location, Count: 3 Unique values: ['Urban' 'Rural' 'Suburban']\nCategory: Policy Type, Count: 3 Unique values: ['Premium' 'Comprehensive' 'Basic']\nCategory: Policy Start Date, Count: 987 Unique values: ['2023-12-23 15:21:39.134960' '2023-06-12 15:21:39.111551'\n '2023-09-30 15:21:39.221386' '2024-06-12 15:21:39.226954'\n '2021-12-01 15:21:39.252145' '2022-05-20 15:21:39.207847'\n '2020-02-21 15:21:39.219432' '2022-08-08 15:21:39.181605'\n '2020-12-14 15:21:39.198406' '2020-08-02 15:21:39.144722'\n '2021-05-12 15:21:39.134960' '2020-03-22 15:21:39.155231'\n '2021-10-28 15:21:39.086123' '2023-01-20 15:21:39.132191'\n '2021-08-14 15:21:39.233998' '2020-10-17 15:21:39.209847'\n '2024-04-22 15:21:39.255696' '2020-12-27 15:21:39.090124'\n '2021-10-13 15:21:39.094752' '2020-06-25 15:21:39.152732'\n '2024-06-25 15:21:39.272456' '2023-07-31 15:21:39.237118'\n '2021-10-09 15:21:39.258696' '2020-01-16 15:21:39.096739'\n '2021-08-30 15:21:39.134960' '2021-03-10 15:21:39.097737'\n '2019-10-06 15:21:39.091080' '2023-09-03 15:21:39.237118'\n '2019-09-06 15:21:39.171102' '2020-08-24 15:21:39.155231'\n '2023-12-28 15:21:39.192212' '2022-09-21 15:21:39.102694'\n '2023-07-25 15:21:39.147735' '2020-08-23 15:21:39.228521'\n '2023-04-01 15:21:39.086123' '2024-02-25 15:21:39.133866'\n '2023-03-01 15:21:39.149731' '2022-03-13 15:21:39.198406'\n '2024-02-04 15:21:39.132191' '2021-09-18 15:21:39.176717'\n '2021-04-22 15:21:39.226954' '2021-03-18 15:21:39.152732'\n '2023-06-18 15:21:39.201446' '2023-05-23 15:21:39.086123'\n '2024-03-04 15:21:39.134960' '2020-08-04 15:21:39.269494'\n '2020-04-20 15:21:39.170099' '2023-06-21 15:21:39.272456'\n '2020-03-02 15:21:39.237118' '2020-12-30 15:21:39.287115'\n '2020-04-10 15:21:39.187211' '2021-01-02 15:21:39.248098'\n '2020-01-19 15:21:39.237118' '2020-10-19 15:21:39.280784'\n '2019-11-28 15:21:39.206847' '2019-11-16 15:21:39.194829'\n '2023-11-11 15:21:39.191219' '2020-11-18 15:21:39.155231'\n '2021-12-06 15:21:39.237118' '2021-05-10 15:21:39.155231'\n '2020-02-05 15:21:39.133866' '2021-09-19 15:21:39.236064'\n '2024-07-15 15:21:39.172097' '2020-11-20 15:21:39.237118'\n '2024-05-30 15:21:39.187211' '2022-01-24 15:21:39.088124'\n '2023-06-14 15:21:39.237118' '2022-05-25 15:21:39.237118'\n '2022-12-22 15:21:39.134960' '2023-07-01 15:21:39.134960'\n '2021-12-31 15:21:39.167099' '2022-03-31 15:21:39.168099'\n '2022-01-09 15:21:39.237118' '2021-05-12 15:21:39.181605'\n '2019-11-12 15:21:39.081504' '2024-04-02 15:21:39.267454'\n '2022-09-03 15:21:39.091080' '2022-07-29 15:21:39.155231'\n '2022-01-06 15:21:39.172097' '2020-06-24 15:21:39.216387'\n '2020-11-27 15:21:39.091080' '2024-04-19 15:21:39.118178'\n '2020-11-14 15:21:39.192212' '2022-11-12 15:21:39.123711'\n '2024-06-11 15:21:39.236064' '2023-03-15 15:21:39.117183'\n '2023-02-02 15:21:39.237118' '2021-02-13 15:21:39.172097'\n '2021-11-11 15:21:39.134960' '2022-06-25 15:21:39.089116'\n '2022-10-15 15:21:39.177724' '2022-09-22 15:21:39.134960'\n '2019-08-25 15:21:39.134960' '2022-09-27 15:21:39.109552'\n '2024-07-04 15:21:39.175719' '2022-07-13 15:21:39.229482'\n '2023-01-17 15:21:39.256696' '2024-06-12 15:21:39.196387'\n '2024-07-06 15:21:39.122134' '2023-06-06 15:21:39.149731'\n '2023-03-30 15:21:39.097737' '2024-04-23 15:21:39.155231'\n '2020-11-22 15:21:39.259788' '2020-06-30 15:21:39.222387'\n '2022-04-15 15:21:39.155231' '2023-12-22 15:21:39.151732'\n '2022-07-08 15:21:39.173834' '2020-03-27 15:21:39.170099'\n '2020-04-29 15:21:39.101733' '2020-09-22 15:21:39.130190'\n '2021-05-30 15:21:39.155231' '2023-01-01 15:21:39.179186'\n '2022-03-02 15:21:39.222387' '2019-12-29 15:21:39.088124'\n '2023-12-03 15:21:39.196387' '2021-04-10 15:21:39.148733'\n '2021-09-07 15:21:39.134960' '2021-10-30 15:21:39.134960'\n '2024-06-23 15:21:39.081504' '2023-01-28 15:21:39.155231'\n '2023-04-15 15:21:39.134960' '2020-05-18 15:21:39.223901'\n '2020-09-25 15:21:39.179186' '2021-07-11 15:21:39.170099'\n '2021-08-11 15:21:39.225916' '2022-02-11 15:21:39.248098'\n '2022-06-05 15:21:39.180553' '2023-02-01 15:21:39.194829'\n '2021-03-28 15:21:39.081504' '2023-02-18 15:21:39.220389'\n '2020-02-25 15:21:39.267454' '2023-05-28 15:21:39.181605'\n '2023-05-16 15:21:39.111551' '2023-10-06 15:21:39.282785'\n '2022-12-27 15:21:39.237118' '2023-12-08 15:21:39.263607'\n '2021-07-25 15:21:39.098696' '2023-02-16 15:21:39.237118'\n '2019-12-31 15:21:39.233485' '2022-06-23 15:21:39.148733'\n '2021-06-21 15:21:39.123711' '2022-09-24 15:21:39.082499'\n '2023-08-30 15:21:39.155231' '2020-01-13 15:21:39.237118'\n '2023-06-12 15:21:39.180553' '2022-11-13 15:21:39.155231'\n '2023-11-07 15:21:39.104139' '2022-07-07 15:21:39.226954'\n '2024-04-16 15:21:39.221386' '2021-11-24 15:21:39.252145'\n '2023-01-23 15:21:39.164044' '2020-10-07 15:21:39.261856'\n '2022-01-16 15:21:39.235012' '2021-07-19 15:21:39.155231'\n '2024-06-10 15:21:39.246098' '2022-05-25 15:21:39.102694'\n '2020-04-12 15:21:39.151732' '2023-11-21 15:21:39.185215'\n '2021-09-12 15:21:39.144722' '2023-08-30 15:21:39.283783'\n '2024-02-25 15:21:39.260856' '2021-07-04 15:21:39.144722'\n '2023-05-22 15:21:39.248098' '2021-11-17 15:21:39.289099'\n '2022-12-24 15:21:39.086123' '2021-07-03 15:21:39.134960'\n '2023-10-03 15:21:39.221386' '2022-08-01 15:21:39.187211'\n '2021-09-09 15:21:39.258696' '2023-04-25 15:21:39.155231'\n '2023-10-08 15:21:39.155231' '2021-12-18 15:21:39.269494'\n '2020-05-05 15:21:39.264504' '2022-11-02 15:21:39.123711'\n '2022-11-16 15:21:39.143708' '2021-12-29 15:21:39.237118'\n '2021-03-24 15:21:39.190215' '2020-11-13 15:21:39.155231'\n '2023-03-17 15:21:39.134960' '2023-01-28 15:21:39.189223'\n '2019-08-30 15:21:39.134960' '2020-10-03 15:21:39.179186'\n '2022-03-01 15:21:39.186212' '2022-07-19 15:21:39.226954'\n '2022-08-12 15:21:39.196387' '2022-04-24 15:21:39.147735'\n '2021-10-07 15:21:39.265513' '2021-05-20 15:21:39.245086'\n '2021-12-27 15:21:39.237118' '2019-11-27 15:21:39.231531'\n '2021-04-16 15:21:39.132191' '2023-06-20 15:21:39.148733'\n '2023-10-16 15:21:39.271453' '2021-04-10 15:21:39.267454'\n '2021-11-12 15:21:39.237118' '2021-02-09 15:21:39.282785'\n '2021-01-10 15:21:39.134960' '2021-06-13 15:21:39.155231'\n '2022-09-08 15:21:39.134960' '2024-01-05 15:21:39.273973'\n '2023-10-04 15:21:39.134960' '2024-07-31 15:21:39.211806'\n '2023-01-04 15:21:39.286113' '2022-11-03 15:21:39.233998'\n '2019-09-10 15:21:39.202448' '2022-11-27 15:21:39.146733'\n '2023-02-01 15:21:39.244069' '2022-02-12 15:21:39.149731'\n '2020-01-29 15:21:39.194829' '2023-01-15 15:21:39.155231'\n '2024-03-20 15:21:39.132191' '2022-01-14 15:21:39.131192'\n '2021-04-21 15:21:39.123711' '2021-01-18 15:21:39.155231'\n '2021-06-02 15:21:39.276901' '2020-12-07 15:21:39.180553'\n '2023-01-15 15:21:39.092127' '2024-03-05 15:21:39.232526'\n '2020-03-11 15:21:39.087123' '2020-09-07 15:21:39.171102'\n '2024-05-08 15:21:39.085129' '2021-07-28 15:21:39.283783'\n '2020-06-08 15:21:39.237118' '2021-04-09 15:21:39.088124'\n '2020-08-02 15:21:39.134960' '2023-04-26 15:21:39.172097'\n '2022-01-24 15:21:39.092127' '2022-04-18 15:21:39.134960'\n '2023-04-27 15:21:39.096739' '2023-07-23 15:21:39.274993'\n '2021-02-18 15:21:39.228521' '2022-09-12 15:21:39.106582'\n '2020-08-10 15:21:39.245086' '2021-08-24 15:21:39.188220'\n '2020-02-13 15:21:39.155231' '2022-05-08 15:21:39.176717'\n '2024-03-16 15:21:39.181605' '2019-12-18 15:21:39.152732'\n '2021-07-18 15:21:39.126661' '2020-05-21 15:21:39.222387'\n '2021-05-21 15:21:39.084065' '2021-04-02 15:21:39.255696'\n '2019-11-16 15:21:39.274993' '2020-07-19 15:21:39.134960'\n '2023-03-21 15:21:39.223901' '2022-06-14 15:21:39.288099'\n '2024-03-18 15:21:39.082499' '2023-06-27 15:21:39.197445'\n '2020-07-12 15:21:39.280784' '2023-04-30 15:21:39.172097'\n '2022-05-18 15:21:39.202448' '2024-08-10 15:21:39.236064'\n '2021-12-21 15:21:39.223901' '2021-06-13 15:21:39.282785'\n '2024-01-20 15:21:39.134960' '2023-08-23 15:21:39.101733'\n '2023-06-28 15:21:39.095696' '2022-06-29 15:21:39.210805'\n '2022-12-09 15:21:39.155231' '2019-10-09 15:21:39.085129'\n '2022-03-03 15:21:39.134960' '2021-07-05 15:21:39.290098'\n '2021-06-19 15:21:39.186212' '2020-04-07 15:21:39.100695'\n '2022-03-24 15:21:39.134960' '2021-10-10 15:21:39.133866'\n '2023-08-25 15:21:39.244069' '2019-09-26 15:21:39.198406'\n '2021-12-23 15:21:39.244069' '2023-11-05 15:21:39.155231'\n '2022-06-02 15:21:39.080440' '2023-09-12 15:21:39.263432'\n '2022-06-13 15:21:39.255696' '2020-11-07 15:21:39.190215'\n '2020-10-29 15:21:39.188220' '2024-02-20 15:21:39.289099'\n '2023-12-10 15:21:39.254678' '2020-04-12 15:21:39.282785'\n '2022-04-14 15:21:39.217387' '2023-10-20 15:21:39.165120'\n '2022-11-26 15:21:39.206847' '2020-06-23 15:21:39.223901'\n '2020-12-20 15:21:39.132191' '2021-10-08 15:21:39.186212'\n '2023-04-29 15:21:39.134960' '2020-01-30 15:21:39.274993'\n '2022-03-20 15:21:39.085129' '2023-03-06 15:21:39.144722'\n '2023-08-27 15:21:39.190215' '2023-01-04 15:21:39.155231'\n '2023-02-10 15:21:39.099739' '2023-07-23 15:21:39.111551'\n '2020-02-04 15:21:39.144722' '2022-10-15 15:21:39.154008'\n '2022-06-08 15:21:39.204790' '2024-07-20 15:21:39.206847'\n '2023-11-22 15:21:39.134960' '2022-04-10 15:21:39.134960'\n '2020-11-23 15:21:39.261856' '2024-05-08 15:21:39.230483'\n '2022-05-01 15:21:39.236064' '2022-09-17 15:21:39.187211'\n '2023-11-10 15:21:39.097737' '2024-04-27 15:21:39.255696'\n '2021-02-13 15:21:39.256696' '2024-08-03 15:21:39.110557'\n '2020-07-16 15:21:39.108562' '2022-06-01 15:21:39.187211'\n '2020-08-03 15:21:39.150730' '2023-02-21 15:21:39.090124'\n '2023-12-21 15:21:39.205850' '2022-01-07 15:21:39.206847'\n '2023-03-28 15:21:39.134960' '2019-11-02 15:21:39.107553'\n '2023-08-19 15:21:39.134960' '2020-08-17 15:21:39.237118'\n '2024-05-07 15:21:39.134960' '2023-04-04 15:21:39.220389'\n '2020-07-25 15:21:39.208842' '2020-07-12 15:21:39.134960'\n '2024-07-23 15:21:39.272456' '2023-03-27 15:21:39.098696'\n '2020-06-21 15:21:39.211806' '2023-08-22 15:21:39.223390'\n '2020-12-24 15:21:39.124659' '2023-09-04 15:21:39.126661'\n '2023-07-15 15:21:39.237118' '2021-03-01 15:21:39.094752'\n '2021-09-29 15:21:39.104139' '2022-11-15 15:21:39.211806'\n '2024-01-26 15:21:39.082499' '2024-06-15 15:21:39.252145'\n '2023-03-19 15:21:39.132191' '2019-11-22 15:21:39.172097'\n '2020-07-05 15:21:39.143708' '2021-07-11 15:21:39.086123'\n '2023-03-04 15:21:39.088124' '2020-09-23 15:21:39.155231'\n '2023-07-19 15:21:39.155231' '2023-08-28 15:21:39.155231'\n '2022-06-27 15:21:39.223390' '2022-09-05 15:21:39.224915'\n '2022-07-23 15:21:39.288099' '2022-08-29 15:21:39.290098'\n '2020-08-27 15:21:39.254678' '2023-11-13 15:21:39.245086'\n '2023-07-21 15:21:39.134960' '2024-06-04 15:21:39.147735'\n '2024-08-09 15:21:39.082499' '2021-02-25 15:21:39.134960'\n '2021-12-08 15:21:39.092127' '2021-01-19 15:21:39.168099'\n '2021-04-13 15:21:39.251142' '2022-11-02 15:21:39.155231'\n '2021-02-06 15:21:39.250151' '2022-04-11 15:21:39.152732'\n '2020-02-11 15:21:39.130190' '2019-11-05 15:21:39.155231'\n '2020-12-28 15:21:39.155231' '2023-11-16 15:21:39.170099'\n '2023-09-28 15:21:39.152732' '2022-02-27 15:21:39.251142'\n '2020-06-25 15:21:39.108562' '2023-06-28 15:21:39.134960'\n '2024-05-09 15:21:39.134960' '2020-08-15 15:21:39.086123'\n '2021-10-19 15:21:39.246098' '2022-07-08 15:21:39.182597'\n '2022-01-23 15:21:39.149731' '2020-12-03 15:21:39.184157'\n '2023-01-11 15:21:39.155231' '2019-11-22 15:21:39.111551'\n '2022-11-29 15:21:39.186212' '2021-02-16 15:21:39.251142'\n '2022-12-06 15:21:39.134960' '2021-03-15 15:21:39.194829'\n '2023-03-20 15:21:39.228521' '2020-06-12 15:21:39.179186'\n '2019-11-11 15:21:39.197445' '2019-11-12 15:21:39.155231'\n '2022-05-02 15:21:39.237118' '2020-05-06 15:21:39.223390'\n '2021-09-07 15:21:39.155231' '2021-11-20 15:21:39.276901'\n '2023-03-16 15:21:39.134960' '2021-03-08 15:21:39.143708'\n '2023-07-15 15:21:39.176717' '2022-12-08 15:21:39.237118'\n '2024-07-22 15:21:39.225916' '2019-10-28 15:21:39.134960'\n '2022-10-28 15:21:39.281787' '2023-09-07 15:21:39.167099'\n '2022-05-24 15:21:39.257696' '2020-11-08 15:21:39.263607'\n '2021-08-25 15:21:39.237118' '2023-08-13 15:21:39.134960'\n '2020-10-11 15:21:39.105504' '2023-01-01 15:21:39.176717'\n '2020-03-04 15:21:39.279729' '2023-06-24 15:21:39.236064'\n '2023-07-03 15:21:39.253660' '2024-02-13 15:21:39.235012'\n '2024-03-23 15:21:39.252145' '2019-10-29 15:21:39.128286'\n '2020-07-19 15:21:39.079128' '2022-11-12 15:21:39.151732'\n '2022-07-06 15:21:39.184157' '2022-02-14 15:21:39.132191'\n '2022-08-19 15:21:39.102694' '2022-04-12 15:21:39.201446'\n '2020-02-19 15:21:39.134960' '2023-03-09 15:21:39.182597'\n '2022-03-12 15:21:39.087123' '2021-10-19 15:21:39.225916'\n '2021-04-29 15:21:39.086123' '2022-03-26 15:21:39.096739'\n '2023-08-13 15:21:39.186212' '2023-07-18 15:21:39.174719'\n '2023-11-02 15:21:39.120168' '2019-12-17 15:21:39.134960'\n '2020-11-07 15:21:39.246098' '2023-08-21 15:21:39.265513'\n '2023-03-20 15:21:39.143708' '2024-06-26 15:21:39.273973'\n '2021-06-27 15:21:39.199447' '2022-04-26 15:21:39.204790'\n '2019-11-01 15:21:39.151732' '2023-12-13 15:21:39.122134'\n '2024-06-14 15:21:39.134960' '2019-12-03 15:21:39.179186'\n '2021-03-25 15:21:39.155231' '2021-11-26 15:21:39.171102'\n '2024-04-19 15:21:39.279729' '2024-04-11 15:21:39.237118'\n '2023-11-16 15:21:39.237118' '2024-01-28 15:21:39.223901'\n '2022-11-22 15:21:39.276901' '2023-03-25 15:21:39.194829'\n '2024-03-09 15:21:39.199447' '2020-05-27 15:21:39.185215'\n '2022-02-24 15:21:39.120168' '2021-09-16 15:21:39.260856'\n '2024-06-26 15:21:39.189223' '2023-03-06 15:21:39.116179'\n '2020-08-20 15:21:39.094752' '2022-03-17 15:21:39.171102'\n '2020-04-07 15:21:39.169102' '2021-10-11 15:21:39.081504'\n '2023-08-15 15:21:39.185215' '2020-11-18 15:21:39.105504'\n '2024-07-07 15:21:39.155231' '2022-07-18 15:21:39.101733'\n '2024-07-28 15:21:39.171102' '2024-04-30 15:21:39.145732'\n '2020-05-03 15:21:39.175719' '2021-05-31 15:21:39.082499'\n '2022-09-01 15:21:39.134960' '2023-01-16 15:21:39.237118'\n '2022-09-14 15:21:39.255696' '2023-06-15 15:21:39.289099'\n '2022-02-05 15:21:39.080440' '2021-12-09 15:21:39.147735'\n '2023-01-13 15:21:39.121169' '2021-12-18 15:21:39.102694'\n '2021-11-25 15:21:39.274993' '2020-10-23 15:21:39.226954'\n '2023-08-31 15:21:39.155231' '2022-08-26 15:21:39.105192'\n '2019-12-17 15:21:39.095696' '2022-09-13 15:21:39.281787'\n '2022-08-18 15:21:39.208842' '2020-11-09 15:21:39.134960'\n '2022-02-10 15:21:39.089116' '2022-11-26 15:21:39.134960'\n '2022-12-27 15:21:39.095696' '2021-05-05 15:21:39.257696'\n '2023-07-21 15:21:39.252145' '2020-08-05 15:21:39.134960'\n '2020-12-23 15:21:39.134960' '2020-03-29 15:21:39.126661'\n '2019-10-23 15:21:39.222387' '2021-01-04 15:21:39.172097'\n '2021-11-05 15:21:39.126661' '2023-09-17 15:21:39.086123'\n '2022-01-13 15:21:39.177724' '2023-12-30 15:21:39.134960'\n '2022-01-21 15:21:39.134960' '2022-11-03 15:21:39.155231'\n '2023-02-10 15:21:39.092127' '2021-01-23 15:21:39.203442'\n '2019-09-17 15:21:39.276901' '2021-12-01 15:21:39.155231'\n '2019-09-13 15:21:39.247098' '2022-07-09 15:21:39.218388'\n '2023-08-10 15:21:39.189223' '2022-07-12 15:21:39.274993'\n '2023-08-20 15:21:39.155231' '2022-03-04 15:21:39.134960'\n '2020-01-24 15:21:39.211806' '2023-03-05 15:21:39.122134'\n '2021-05-13 15:21:39.279729' '2023-07-23 15:21:39.285112'\n '2020-01-17 15:21:39.171102' '2022-11-24 15:21:39.133866'\n '2024-01-29 15:21:39.155231' '2022-10-10 15:21:39.147735'\n '2019-10-28 15:21:39.257696' '2024-08-12 15:21:39.148733'\n '2023-02-21 15:21:39.237118' '2021-04-11 15:21:39.246098'\n '2022-09-17 15:21:39.237118' '2021-12-02 15:21:39.134960'\n '2023-12-22 15:21:39.219432' '2023-02-03 15:21:39.257696'\n '2023-07-16 15:21:39.219432' '2022-10-03 15:21:39.082499'\n '2020-09-07 15:21:39.237118' '2020-08-24 15:21:39.194829'\n '2023-10-22 15:21:39.208842' '2022-09-25 15:21:39.134960'\n '2020-03-12 15:21:39.278402' '2023-03-30 15:21:39.231531'\n '2023-08-22 15:21:39.168099' '2021-11-26 15:21:39.155231'\n '2022-09-18 15:21:39.086123' '2024-03-25 15:21:39.197445'\n '2022-07-02 15:21:39.172097' '2019-11-12 15:21:39.194829'\n '2023-02-03 15:21:39.134960' '2024-04-03 15:21:39.134960'\n '2020-01-31 15:21:39.134960' '2024-06-09 15:21:39.134960'\n '2023-01-22 15:21:39.208842' '2024-08-02 15:21:39.181605'\n '2019-11-14 15:21:39.250151' '2021-11-27 15:21:39.237118'\n '2019-09-17 15:21:39.123711' '2023-06-06 15:21:39.261856'\n '2021-06-29 15:21:39.134960' '2022-02-07 15:21:39.185215'\n '2021-07-16 15:21:39.237118' '2021-04-28 15:21:39.172097'\n '2023-11-28 15:21:39.126661' '2022-09-12 15:21:39.209847'\n '2021-06-12 15:21:39.121169' '2020-02-27 15:21:39.111551'\n '2020-03-19 15:21:39.177724' '2022-12-09 15:21:39.087123'\n '2023-11-26 15:21:39.244069' '2023-01-20 15:21:39.229482'\n '2021-11-17 15:21:39.155231' '2023-07-28 15:21:39.134960'\n '2024-04-07 15:21:39.220389' '2023-05-05 15:21:39.274993'\n '2022-07-11 15:21:39.094752' '2023-04-30 15:21:39.134960'\n '2022-08-20 15:21:39.237118' '2020-05-26 15:21:39.094752'\n '2021-10-23 15:21:39.151732' '2024-02-03 15:21:39.261856'\n '2023-12-13 15:21:39.266452' '2023-01-19 15:21:39.220389'\n '2022-02-07 15:21:39.098696' '2023-12-02 15:21:39.091080'\n '2020-04-01 15:21:39.145732' '2023-04-03 15:21:39.126661'\n '2020-11-21 15:21:39.276901' '2022-07-23 15:21:39.105504'\n '2019-09-23 15:21:39.245086' '2020-08-16 15:21:39.114118'\n '2023-08-28 15:21:39.134960' '2023-10-31 15:21:39.128286'\n '2020-05-26 15:21:39.224915' '2023-05-27 15:21:39.155231'\n '2022-07-04 15:21:39.263607' '2023-05-22 15:21:39.087123'\n '2020-05-24 15:21:39.082499' '2021-01-28 15:21:39.208842'\n '2020-06-25 15:21:39.190215' '2022-03-02 15:21:39.148733'\n '2024-07-14 15:21:39.237118' '2021-01-21 15:21:39.285112'\n '2022-07-30 15:21:39.223901' '2023-05-11 15:21:39.223901'\n '2021-06-21 15:21:39.155231' '2024-05-05 15:21:39.134960'\n '2022-06-09 15:21:39.257696' '2021-08-20 15:21:39.237118'\n '2022-01-19 15:21:39.093681' '2021-09-13 15:21:39.155231'\n '2021-01-17 15:21:39.094752' '2021-11-14 15:21:39.155231'\n '2022-01-22 15:21:39.155231' '2023-07-10 15:21:39.237118'\n '2021-03-16 15:21:39.170099' '2021-10-14 15:21:39.093681'\n '2024-05-06 15:21:39.148733' '2023-09-17 15:21:39.237118'\n '2023-11-06 15:21:39.212862' '2021-01-23 15:21:39.080440'\n '2024-01-19 15:21:39.208842' '2023-09-17 15:21:39.186212'\n '2022-04-13 15:21:39.194829' '2021-04-08 15:21:39.144722'\n '2024-03-17 15:21:39.092127' '2020-07-11 15:21:39.085129'\n '2022-06-24 15:21:39.172097' '2020-07-25 15:21:39.134960'\n '2022-11-11 15:21:39.155231' '2021-07-12 15:21:39.246098'\n '2020-07-10 15:21:39.155231' '2023-07-24 15:21:39.255696'\n '2024-02-10 15:21:39.276901' '2020-03-15 15:21:39.155231'\n '2021-06-24 15:21:39.194829' '2021-05-21 15:21:39.134960'\n '2024-02-29 15:21:39.237118' '2021-05-07 15:21:39.155231'\n '2022-09-25 15:21:39.267454' '2022-11-28 15:21:39.128286'\n '2020-01-11 15:21:39.149731' '2024-04-02 15:21:39.144722'\n '2024-01-07 15:21:39.245086' '2024-07-07 15:21:39.134960'\n '2024-04-20 15:21:39.258696' '2022-04-23 15:21:39.134960'\n '2019-10-18 15:21:39.214388' '2024-03-15 15:21:39.175719'\n '2022-10-27 15:21:39.176717' '2022-10-28 15:21:39.282785'\n '2022-08-12 15:21:39.155231' '2019-12-13 15:21:39.226954'\n '2023-01-26 15:21:39.117183' '2021-01-01 15:21:39.134960'\n '2020-12-04 15:21:39.155231' '2023-07-06 15:21:39.122134'\n '2020-02-26 15:21:39.134960' '2023-06-22 15:21:39.134960'\n '2023-05-12 15:21:39.134960' '2021-01-27 15:21:39.208842'\n '2020-06-26 15:21:39.237118' '2020-11-22 15:21:39.171102'\n '2020-01-23 15:21:39.155231' '2024-06-18 15:21:39.236064'\n '2023-04-04 15:21:39.192212' '2023-07-11 15:21:39.237118'\n '2022-04-20 15:21:39.102694' '2020-07-14 15:21:39.096739'\n '2022-05-25 15:21:39.228521' '2022-01-16 15:21:39.201446'\n '2024-07-26 15:21:39.237118' '2021-02-24 15:21:39.187211'\n '2020-10-12 15:21:39.149731' '2023-02-23 15:21:39.259788'\n '2022-02-20 15:21:39.237118' '2020-11-15 15:21:39.143708'\n '2021-04-21 15:21:39.204790' '2022-02-21 15:21:39.155231'\n '2020-04-09 15:21:39.205850' '2021-07-04 15:21:39.097737'\n '2021-10-18 15:21:39.097737' '2024-02-17 15:21:39.279729'\n '2024-05-25 15:21:39.197445' '2022-10-02 15:21:39.134960'\n '2019-10-26 15:21:39.184157' '2021-02-14 15:21:39.235012'\n '2024-01-03 15:21:39.280784' '2021-05-21 15:21:39.155231'\n '2021-07-23 15:21:39.172097' '2024-04-17 15:21:39.222387'\n '2022-01-18 15:21:39.290098' '2024-02-15 15:21:39.251142'\n '2023-01-23 15:21:39.102694' '2024-01-31 15:21:39.091080'\n '2021-02-25 15:21:39.155231' '2022-07-11 15:21:39.257696'\n '2021-11-20 15:21:39.237118' '2020-02-02 15:21:39.237118'\n '2023-02-28 15:21:39.244069' '2020-10-22 15:21:39.106582'\n '2023-01-02 15:21:39.145732' '2021-02-07 15:21:39.165120'\n '2020-12-23 15:21:39.177724' '2022-02-06 15:21:39.202448'\n '2021-10-18 15:21:39.155231' '2022-10-23 15:21:39.143708'\n '2020-09-02 15:21:39.145732' '2024-06-17 15:21:39.095696'\n '2022-11-03 15:21:39.211806' '2020-04-21 15:21:39.237118'\n '2023-01-28 15:21:39.134960' '2023-06-06 15:21:39.206847'\n '2023-05-23 15:21:39.272456' '2021-02-19 15:21:39.244069'\n '2023-02-05 15:21:39.102694' '2023-08-22 15:21:39.192212'\n '2020-11-09 15:21:39.205850' '2021-04-20 15:21:39.165120'\n '2021-08-21 15:21:39.155231' '2021-07-27 15:21:39.093681'\n '2023-07-17 15:21:39.170099' '2023-11-24 15:21:39.155231'\n '2020-02-10 15:21:39.092127' '2023-11-29 15:21:39.123711'\n '2021-03-05 15:21:39.276901' '2021-05-13 15:21:39.252145'\n '2024-03-26 15:21:39.253660' '2023-11-04 15:21:39.155231'\n '2021-01-14 15:21:39.155231' '2022-08-07 15:21:39.094752'\n '2019-08-20 15:21:39.225916' '2021-12-21 15:21:39.098696'\n '2020-03-27 15:21:39.192212' '2022-06-29 15:21:39.281787'\n '2019-09-02 15:21:39.248098' '2019-10-23 15:21:39.279729'\n '2019-12-18 15:21:39.219432' '2020-02-24 15:21:39.134960'\n '2020-10-04 15:21:39.230483' '2022-06-06 15:21:39.132191'\n '2023-12-18 15:21:39.155231' '2019-08-29 15:21:39.260856'\n '2022-01-05 15:21:39.192212' '2022-11-21 15:21:39.175719'\n '2021-05-18 15:21:39.245086' '2021-10-29 15:21:39.237118'\n '2023-06-18 15:21:39.237118' '2022-12-29 15:21:39.168099'\n '2019-12-17 15:21:39.155231' '2021-12-12 15:21:39.134960'\n '2024-06-28 15:21:39.147735' '2022-12-04 15:21:39.278402'\n '2024-05-15 15:21:39.090124' '2023-06-17 15:21:39.213373'\n '2020-09-26 15:21:39.264504' '2024-05-30 15:21:39.252145'\n '2023-07-23 15:21:39.125660' '2022-08-27 15:21:39.237118'\n '2022-10-06 15:21:39.134960' '2021-11-01 15:21:39.087123'\n '2024-02-07 15:21:39.197445' '2024-04-10 15:21:39.250151'\n '2024-05-16 15:21:39.134960' '2023-04-16 15:21:39.276901'\n '2020-04-23 15:21:39.145732' '2022-04-09 15:21:39.191219'\n '2021-05-29 15:21:39.155231' '2024-01-26 15:21:39.134960'\n '2024-02-29 15:21:39.188220' '2020-05-17 15:21:39.085129'\n '2023-08-25 15:21:39.265513' '2020-09-06 15:21:39.172097'\n '2021-11-13 15:21:39.134960' '2022-12-11 15:21:39.237118'\n '2023-06-16 15:21:39.164044' '2023-07-29 15:21:39.104139'\n '2020-05-22 15:21:39.084065' '2020-06-22 15:21:39.226954'\n '2023-07-21 15:21:39.263607' '2024-07-24 15:21:39.092127'\n '2022-09-20 15:21:39.086123' '2023-10-04 15:21:39.221386'\n '2024-01-06 15:21:39.280784' '2022-04-17 15:21:39.131192'\n '2023-06-27 15:21:39.096739' '2021-06-19 15:21:39.126661'\n '2021-09-17 15:21:39.113566' '2022-12-29 15:21:39.152732'\n '2020-03-09 15:21:39.092127' '2020-09-27 15:21:39.095696'\n '2024-06-27 15:21:39.134960' '2024-06-30 15:21:39.134960'\n '2022-06-30 15:21:39.220389' '2021-04-02 15:21:39.177724'\n '2023-10-01 15:21:39.211806' '2020-09-27 15:21:39.126661'\n '2023-12-21 15:21:39.114118' '2022-10-10 15:21:39.134960'\n '2020-04-24 15:21:39.274993' '2021-08-22 15:21:39.228521'\n '2021-05-30 15:21:39.118178' '2022-01-09 15:21:39.132191'\n '2020-04-27 15:21:39.112553' '2023-09-04 15:21:39.103944'\n '2023-12-05 15:21:39.102694' '2024-06-10 15:21:39.083497'\n '2019-08-19 15:21:39.186212' '2023-06-10 15:21:39.102694'\n '2021-11-21 15:21:39.211806' '2022-09-29 15:21:39.134960'\n '2020-06-13 15:21:39.134960' '2022-02-13 15:21:39.237118'\n '2020-07-18 15:21:39.151732' '2024-02-18 15:21:39.172097'\n '2020-08-15 15:21:39.184157' '2019-10-24 15:21:39.286113'\n '2020-03-25 15:21:39.290098' '2020-11-21 15:21:39.180553'\n '2024-01-18 15:21:39.090124' '2019-08-29 15:21:39.179186'\n '2022-11-15 15:21:39.237118' '2020-09-08 15:21:39.172097'\n '2021-04-27 15:21:39.196387' '2024-06-16 15:21:39.259788'\n '2023-04-10 15:21:39.283783' '2023-11-21 15:21:39.092127'\n '2024-06-03 15:21:39.106582' '2021-12-11 15:21:39.254678'\n '2020-10-05 15:21:39.155231' '2021-05-27 15:21:39.261856'\n '2023-02-11 15:21:39.237118' '2019-11-26 15:21:39.237118'\n '2021-01-28 15:21:39.250151' '2021-09-14 15:21:39.134960'\n '2021-06-15 15:21:39.204790' '2022-07-04 15:21:39.182597'\n '2022-04-29 15:21:39.249100' '2022-07-19 15:21:39.155231'\n '2019-10-03 15:21:39.121169' '2021-06-13 15:21:39.237118'\n '2021-07-06 15:21:39.290098' '2021-11-19 15:21:39.121169'\n '2024-04-21 15:21:39.080440' '2020-07-30 15:21:39.112553'\n '2022-07-20 15:21:39.126661' '2022-08-29 15:21:39.155231'\n '2020-03-12 15:21:39.149731' '2020-11-22 15:21:39.233485'\n '2019-08-29 15:21:39.265513' '2020-11-24 15:21:39.223901'\n '2021-02-10 15:21:39.134960' '2024-03-13 15:21:39.134960'\n '2020-01-23 15:21:39.173834' '2021-09-29 15:21:39.180553'\n '2022-09-18 15:21:39.171102' '2021-06-22 15:21:39.134960'\n '2021-03-13 15:21:39.247098' '2022-08-07 15:21:39.122134'\n '2021-04-03 15:21:39.116179' '2020-03-09 15:21:39.134960'\n '2021-08-23 15:21:39.079128' '2019-09-14 15:21:39.265513'\n '2020-01-06 15:21:39.108562' '2023-03-22 15:21:39.155231'\n '2020-09-25 15:21:39.119168' '2023-07-11 15:21:39.107553'\n '2023-10-30 15:21:39.155231' '2021-11-22 15:21:39.106582'\n '2021-07-21 15:21:39.134960' '2022-08-24 15:21:39.155231'\n '2022-03-24 15:21:39.122134' '2021-04-23 15:21:39.245086'\n '2022-11-08 15:21:39.229482' '2024-01-03 15:21:39.194829'\n '2023-01-07 15:21:39.233485' '2023-08-01 15:21:39.188220'\n '2022-09-06 15:21:39.276901' '2021-12-22 15:21:39.151732'\n '2021-10-16 15:21:39.274993' '2021-12-14 15:21:39.131192'\n '2019-12-15 15:21:39.216387' '2021-02-22 15:21:39.231531'\n '2022-07-25 15:21:39.192212' '2021-02-25 15:21:39.097737'\n '2020-07-25 15:21:39.211806' '2020-09-12 15:21:39.237118'\n '2020-04-26 15:21:39.090124' '2024-04-27 15:21:39.182597'\n '2019-08-24 15:21:39.080440' '2020-12-06 15:21:39.126661'\n '2023-09-14 15:21:39.249100' '2023-11-16 15:21:39.090124'\n '2023-05-27 15:21:39.177724' '2020-09-04 15:21:39.155231'\n '2021-06-18 15:21:39.146733' '2023-03-10 15:21:39.164044'\n '2020-10-16 15:21:39.237118' '2022-12-13 15:21:39.229482'\n '2021-12-21 15:21:39.090124' '2020-05-22 15:21:39.145732'\n '2023-09-04 15:21:39.283783' '2024-01-11 15:21:39.094752'\n '2020-06-16 15:21:39.198406' '2022-09-15 15:21:39.134960'\n '2023-11-04 15:21:39.170099' '2023-05-12 15:21:39.096739'\n '2023-01-18 15:21:39.169102' '2020-07-06 15:21:39.166062'\n '2022-03-08 15:21:39.086123' '2022-12-19 15:21:39.174719'\n '2019-11-17 15:21:39.155231' '2021-03-07 15:21:39.092127'\n '2020-02-16 15:21:39.082499' '2022-01-09 15:21:39.097737'\n '2022-02-02 15:21:39.081504' '2020-08-14 15:21:39.287115'\n '2022-07-22 15:21:39.283783' '2020-04-15 15:21:39.086123'\n '2024-05-29 15:21:39.175719' '2024-05-18 15:21:39.134960'\n '2022-06-20 15:21:39.254678' '2024-05-14 15:21:39.155231'\n '2020-01-10 15:21:39.259788' '2019-12-30 15:21:39.173834'\n '2024-03-21 15:21:39.181605' '2024-01-25 15:21:39.101733'\n '2020-08-10 15:21:39.237118' '2021-07-10 15:21:39.186212'\n '2020-05-15 15:21:39.223901' '2023-02-12 15:21:39.134960'\n '2020-05-04 15:21:39.091080' '2023-06-27 15:21:39.233485'\n '2021-07-19 15:21:39.282785' '2022-04-05 15:21:39.128286'\n '2021-08-24 15:21:39.237118' '2023-12-27 15:21:39.276901'\n '2022-10-19 15:21:39.134960' '2019-12-06 15:21:39.237118'\n '2024-01-29 15:21:39.092127' '2022-10-05 15:21:39.198406'\n '2021-03-05 15:21:39.211806' '2021-02-09 15:21:39.085129'\n '2024-05-19 15:21:39.155231' '2023-09-01 15:21:39.096739'\n '2022-09-18 15:21:39.124659' '2022-07-20 15:21:39.226954'\n '2023-04-15 15:21:39.094752' '2023-11-24 15:21:39.286113'\n '2020-12-24 15:21:39.086123' '2021-01-10 15:21:39.152732'\n '2024-03-06 15:21:39.191219' '2024-03-06 15:21:39.088124'\n '2023-09-30 15:21:39.134960' '2022-11-09 15:21:39.267454'\n '2021-07-11 15:21:39.181605' '2023-08-26 15:21:39.177724'\n '2024-02-10 15:21:39.287115' '2020-07-26 15:21:39.134960'\n '2021-04-24 15:21:39.147735' '2021-07-20 15:21:39.155231'\n '2024-07-09 15:21:39.222387' '2023-07-02 15:21:39.155231'\n '2021-08-03 15:21:39.271453' '2021-09-17 15:21:39.134960'\n '2022-10-25 15:21:39.274993' '2024-02-16 15:21:39.177724'\n '2020-04-06 15:21:39.231531' '2022-12-22 15:21:39.198406'\n '2020-03-10 15:21:39.105504' '2020-06-22 15:21:39.237118'\n '2019-09-20 15:21:39.221386' '2021-10-16 15:21:39.192212'\n '2020-01-09 15:21:39.087123' '2022-11-06 15:21:39.095696'\n '2020-02-05 15:21:39.155231' '2021-02-23 15:21:39.126661'\n '2021-03-17 15:21:39.155231' '2022-05-21 15:21:39.115178'\n '2022-10-25 15:21:39.155231' '2022-07-12 15:21:39.155231'\n '2022-12-10 15:21:39.251142' '2022-09-26 15:21:39.237118'\n '2023-07-03 15:21:39.254678' '2023-08-03 15:21:39.204790'\n '2022-01-11 15:21:39.191219' '2024-03-07 15:21:39.155231'\n '2022-01-21 15:21:39.278402' '2024-02-07 15:21:39.186212'\n '2020-08-23 15:21:39.276901' '2020-11-13 15:21:39.211806'\n '2024-03-09 15:21:39.246098' '2021-01-21 15:21:39.218388'\n '2021-09-04 15:21:39.132191' '2020-06-22 15:21:39.172097'\n '2024-07-17 15:21:39.228521' '2022-10-23 15:21:39.219432'\n '2022-01-07 15:21:39.145732' '2024-05-11 15:21:39.177724'\n '2021-07-09 15:21:39.148733' '2020-04-27 15:21:39.237118'\n '2019-12-14 15:21:39.155231' '2023-04-25 15:21:39.237118'\n '2024-06-02 15:21:39.237118' '2019-12-11 15:21:39.085129'\n '2021-10-02 15:21:39.190215' '2021-11-09 15:21:39.174719'\n '2020-05-03 15:21:39.097737']\nCategory: Customer Feedback, Count: 4 Unique values: ['Poor' 'Average' 'Good' nan]\nCategory: Smoking Status, Count: 2 Unique values: ['No' 'Yes']\nCategory: Exercise Frequency, Count: 4 Unique values: ['Weekly' 'Monthly' 'Daily' 'Rarely']\nCategory: Property Type, Count: 3 Unique values: ['House' 'Apartment' 'Condo']\nCategory: Gender\nCategory: Marital Status\nCategory: Education Level\nCategory: Occupation\nCategory: Location\nCategory: Policy Type\nCategory: Policy Start Date\nCategory: Customer Feedback\nCategory: Smoking Status\nCategory: Exercise Frequency\nCategory: Property Type\n","output_type":"stream"}],"execution_count":59},{"cell_type":"code","source":"# Category: Gender ////\n# Category: Marital Status ////\n# Category: Education Level /\n# Category: Occupation ////\n# Category: Location //\n# Category: Policy Type ///\n# Category: Policy Start Date ///\n# Category: Customer Feedback /\n# Category: Smoking Status /\n# Category: Exercise Frequency /\n# Category: Property Type //\n\n# import pandas as pd\n\n# df = train_df.copy()\n\n# binary_mappings = {\n#     'Smoking Status': {'No': 0, 'Yes': 1}\n# }\n# for col, mapping in binary_mappings.items():\n#     if col in df.columns:\n#         df[col] = df[col].map(mapping)\n\n# onehot_encode_cols = ['Gender', 'Location', 'Policy Type', 'Property Type']\n# df = pd.get_dummies(df, columns=onehot_encode_cols, drop_first=False)\n\n# ordinal_mappings = {\n#     'Exercise Frequency': {'Rarely': 0, 'Monthly': 1, 'Weekly': 2, 'Daily': 3},\n#     'Customer Feedback': {'Poor': 0, 'Average': 1, 'Good': 2},\n#     'Education Level': {'High School': 0, \"Bachelor's\": 1, \"Master's\": 2, 'PhD': 3},\n#     'Policy Type': {'Premium': 2, 'Comprehensive': 1, 'Basic': 0}\n# }\n# for col, mapping in ordinal_mappings.items():\n#     if col in df.columns:\n#         df[col] = df[col].map(mapping)\n\n# if 'Policy Start Date' in df.columns:\n#     df['Policy Start Date'] = pd.to_datetime(df['Policy Start Date']).astype(int) / 10**9  \n\n# categorical_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n# for col in categorical_cols:\n#     df[col] = df[col].fillna('Unknown')\n\n# label_encode_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n# for col in label_encode_cols:\n#     df[col] = df[col].astype('category').cat.codes\n\n# print(df.head())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.605729Z","iopub.execute_input":"2024-12-08T16:13:39.605934Z","iopub.status.idle":"2024-12-08T16:13:39.610705Z","shell.execute_reply.started":"2024-12-08T16:13:39.605912Z","shell.execute_reply":"2024-12-08T16:13:39.609941Z"}},"outputs":[],"execution_count":60},{"cell_type":"code","source":"df = pd.DataFrame(df)\ndf.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.611863Z","iopub.execute_input":"2024-12-08T16:13:39.612111Z","iopub.status.idle":"2024-12-08T16:13:39.630081Z","shell.execute_reply.started":"2024-12-08T16:13:39.612087Z","shell.execute_reply":"2024-12-08T16:13:39.629165Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"(1200000, 47)"},"metadata":{}}],"execution_count":61},{"cell_type":"code","source":"categorical_cols = train_df.select_dtypes(include=['object', 'category']).columns\ncategorical_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.631051Z","iopub.execute_input":"2024-12-08T16:13:39.631320Z","iopub.status.idle":"2024-12-08T16:13:39.642544Z","shell.execute_reply.started":"2024-12-08T16:13:39.631295Z","shell.execute_reply":"2024-12-08T16:13:39.641595Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"Index(['Gender', 'Marital Status', 'Education Level', 'Occupation', 'Location',\n       'Policy Type', 'Policy Start Date', 'Customer Feedback',\n       'Smoking Status', 'Exercise Frequency', 'Property Type'],\n      dtype='object')"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"train_df = train_df.drop(columns=categorical_cols)\ntrain_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.643686Z","iopub.execute_input":"2024-12-08T16:13:39.644032Z","iopub.status.idle":"2024-12-08T16:13:39.664555Z","shell.execute_reply.started":"2024-12-08T16:13:39.643994Z","shell.execute_reply":"2024-12-08T16:13:39.663633Z"}},"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"      id   Age  Annual Income  Number of Dependents  Health Score  \\\n0      0  19.0        10049.0                   1.0     22.598761   \n1      1  39.0        31678.0                   3.0     15.569731   \n2      2  23.0        25602.0                   3.0     47.177549   \n3      3  21.0       141855.0                   2.0     10.938144   \n4      4  21.0        39651.0                   1.0     20.376094   \n..   ...   ...            ...                   ...           ...   \n995  995  42.0        45638.0                   2.0     50.865307   \n996  996  64.0        14094.0                   1.0     29.351739   \n997  997   NaN        80198.0                   1.0     29.359427   \n998  998  25.0        16981.0                   1.0     32.896941   \n999  999  55.0        28396.0                   2.0     33.913016   \n\n     Previous Claims  Vehicle Age  Credit Score  Insurance Duration  \\\n0                2.0         17.0         372.0                 5.0   \n1                1.0         12.0         694.0                 2.0   \n2                1.0         14.0           NaN                 3.0   \n3                1.0          0.0         367.0                 1.0   \n4                0.0          8.0         598.0                 4.0   \n..               ...          ...           ...                 ...   \n995              NaN         12.0         776.0                 1.0   \n996              2.0         16.0         818.0                 4.0   \n997              2.0          4.0         775.0                 4.0   \n998              0.0          5.0         673.0                 7.0   \n999              1.0          8.0         767.0                 1.0   \n\n     Premium Amount  \n0            2869.0  \n1            1483.0  \n2             567.0  \n3             765.0  \n4            2022.0  \n..              ...  \n995          1806.0  \n996          1116.0  \n997          3381.0  \n998           718.0  \n999          1012.0  \n\n[1000 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Number of Dependents</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>10049.0</td>\n      <td>1.0</td>\n      <td>22.598761</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>372.0</td>\n      <td>5.0</td>\n      <td>2869.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>31678.0</td>\n      <td>3.0</td>\n      <td>15.569731</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>694.0</td>\n      <td>2.0</td>\n      <td>1483.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>25602.0</td>\n      <td>3.0</td>\n      <td>47.177549</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>567.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>141855.0</td>\n      <td>2.0</td>\n      <td>10.938144</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>367.0</td>\n      <td>1.0</td>\n      <td>765.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>39651.0</td>\n      <td>1.0</td>\n      <td>20.376094</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>598.0</td>\n      <td>4.0</td>\n      <td>2022.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>995</th>\n      <td>995</td>\n      <td>42.0</td>\n      <td>45638.0</td>\n      <td>2.0</td>\n      <td>50.865307</td>\n      <td>NaN</td>\n      <td>12.0</td>\n      <td>776.0</td>\n      <td>1.0</td>\n      <td>1806.0</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>996</td>\n      <td>64.0</td>\n      <td>14094.0</td>\n      <td>1.0</td>\n      <td>29.351739</td>\n      <td>2.0</td>\n      <td>16.0</td>\n      <td>818.0</td>\n      <td>4.0</td>\n      <td>1116.0</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>997</td>\n      <td>NaN</td>\n      <td>80198.0</td>\n      <td>1.0</td>\n      <td>29.359427</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>775.0</td>\n      <td>4.0</td>\n      <td>3381.0</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>998</td>\n      <td>25.0</td>\n      <td>16981.0</td>\n      <td>1.0</td>\n      <td>32.896941</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>673.0</td>\n      <td>7.0</td>\n      <td>718.0</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>999</td>\n      <td>55.0</td>\n      <td>28396.0</td>\n      <td>2.0</td>\n      <td>33.913016</td>\n      <td>1.0</td>\n      <td>8.0</td>\n      <td>767.0</td>\n      <td>1.0</td>\n      <td>1012.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows × 10 columns</p>\n</div>"},"metadata":{}}],"execution_count":63},{"cell_type":"code","source":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# fig, axes = plt.subplots(len(categorical_cols) + 1, 1, figsize=(10, 5 * (len(categorical_cols) + 1)))\n# fig.tight_layout(pad=6.0)\n\n# for i, col in enumerate(categorical_cols):\n#     sns.boxplot(x=train_df[col], y=train_df['Premium Amount'], ax=axes[i])\n#     axes[i].set_title(f'Boxplot of {col} vs Premium Amount')\n#     axes[i].set_xticklabels(axes[i].get_xticklabels(), rotation=45)\n\n# corr_matrix = train_df.select_dtypes(include=['number']).corr()\n# sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', ax=axes[len(categorical_cols)])\n# axes[len(categorical_cols)].set_title('Correlation Matrix Heatmap')\n\n# plt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:39.665582Z","iopub.execute_input":"2024-12-08T16:13:39.665893Z","iopub.status.idle":"2024-12-08T16:13:42.310812Z","shell.execute_reply.started":"2024-12-08T16:13:39.665855Z","shell.execute_reply":"2024-12-08T16:13:42.309617Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/indexes/base.py:3805\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 3805\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3806\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n","File \u001b[0;32mindex.pyx:167\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mindex.pyx:196\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:7081\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:7089\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Gender'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Cell \u001b[0;32mIn[64], line 10\u001b[0m\n\u001b[1;32m      7\u001b[0m fig\u001b[38;5;241m.\u001b[39mtight_layout(pad\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m6.0\u001b[39m)\n\u001b[1;32m      9\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i, col \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(categorical_cols):\n\u001b[0;32m---> 10\u001b[0m     sns\u001b[38;5;241m.\u001b[39mboxplot(x\u001b[38;5;241m=\u001b[39m\u001b[43mtrain_df\u001b[49m\u001b[43m[\u001b[49m\u001b[43mcol\u001b[49m\u001b[43m]\u001b[49m, y\u001b[38;5;241m=\u001b[39mtrain_df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPremium Amount\u001b[39m\u001b[38;5;124m'\u001b[39m], ax\u001b[38;5;241m=\u001b[39maxes[i])\n\u001b[1;32m     11\u001b[0m     axes[i]\u001b[38;5;241m.\u001b[39mset_title(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mBoxplot of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mcol\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m vs Premium Amount\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     12\u001b[0m     axes[i]\u001b[38;5;241m.\u001b[39mset_xticklabels(axes[i]\u001b[38;5;241m.\u001b[39mget_xticklabels(), rotation\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m45\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/frame.py:4102\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   4101\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 4102\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4103\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   4104\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/indexes/base.py:3812\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3807\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(casted_key, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;129;01mor\u001b[39;00m (\n\u001b[1;32m   3808\u001b[0m         \u001b[38;5;28misinstance\u001b[39m(casted_key, abc\u001b[38;5;241m.\u001b[39mIterable)\n\u001b[1;32m   3809\u001b[0m         \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28many\u001b[39m(\u001b[38;5;28misinstance\u001b[39m(x, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;28;01mfor\u001b[39;00m x \u001b[38;5;129;01min\u001b[39;00m casted_key)\n\u001b[1;32m   3810\u001b[0m     ):\n\u001b[1;32m   3811\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m InvalidIndexError(key)\n\u001b[0;32m-> 3812\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   3813\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m   3814\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3815\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3816\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3817\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n","\u001b[0;31mKeyError\u001b[0m: 'Gender'"],"ename":"KeyError","evalue":"'Gender'","output_type":"error"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x6000 with 12 Axes>","image/png":""},"metadata":{}}],"execution_count":64},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# train_df = train_df.drop(columns=categorical_cols)\n# train_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:42.311867Z","iopub.status.idle":"2024-12-08T16:13:42.312308Z","shell.execute_reply.started":"2024-12-08T16:13:42.312079Z","shell.execute_reply":"2024-12-08T16:13:42.312100Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom scipy.stats import skew, kurtosis\n\ndf = train_df.copy()\ndf = df.fillna(df.mean())\n\ndf['Mean_Income_Duration'] = (df['Annual Income'] + df['Insurance Duration']) / 2\ndf['Income_Skewness'] = skew(df['Annual Income'], nan_policy='omit')\ndf['Health_Skewness'] = skew(df['Health Score'], nan_policy='omit')\ndf['Claims_Skewness'] = skew(df['Previous Claims'], nan_policy='omit')\n\ndf['Income_Kurtosis'] = kurtosis(df['Annual Income'], nan_policy='omit')\ndf['Health_Kurtosis'] = kurtosis(df['Health Score'], nan_policy='omit')\ndf['Claims_Kurtosis'] = kurtosis(df['Previous Claims'], nan_policy='omit')\n\ndf['Income_Per_Dependent'] = df['Annual Income'] / (df['Number of Dependents'] + 1)  \ndf['Claims_Per_Year'] = df['Previous Claims'] / df['Insurance Duration']\n\ndf['Age_to_VehicleAge_Diff'] = df['Age'] - df['Vehicle Age']\ndf['Health_to_Credit_Score_Ratio'] = df['Health Score'] / (df['Credit Score'] + 1)\n\ndf['Total_Assets'] = df['Annual Income'] + df['Credit Score']\ndf['Overall_Risk'] = (df['Vehicle Age'] + df['Previous Claims'] + df['Insurance Duration']) / df['Health Score']\n\ndf['Log_Income'] = np.log1p(df['Annual Income'])\ndf['Log_Credit'] = np.log1p(df['Credit Score'])\n\n\ndf['Income_Quartile'] = pd.qcut(df['Annual Income'], 4, labels=[1, 2, 3, 4]).astype(int)\ndf['Credit_Quartile'] = pd.qcut(df['Credit Score'], 4, labels=[1, 2, 3, 4]).astype(int)\n\ndf['High_Income'] = (df['Annual Income'] > df['Annual Income'].median()).astype(int)\ndf['Old_Vehicle'] = (df['Vehicle Age'] > 10).astype(int)\n\n# Display the enriched dataset\ndf.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:14:29.601244Z","iopub.execute_input":"2024-12-08T16:14:29.601600Z","iopub.status.idle":"2024-12-08T16:14:29.650060Z","shell.execute_reply.started":"2024-12-08T16:14:29.601570Z","shell.execute_reply":"2024-12-08T16:14:29.649194Z"}},"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"   id   Age  Annual Income  Number of Dependents  Health Score  \\\n0   0  19.0        10049.0                   1.0     22.598761   \n1   1  39.0        31678.0                   3.0     15.569731   \n2   2  23.0        25602.0                   3.0     47.177549   \n3   3  21.0       141855.0                   2.0     10.938144   \n4   4  21.0        39651.0                   1.0     20.376094   \n\n   Previous Claims  Vehicle Age  Credit Score  Insurance Duration  \\\n0              2.0         17.0     372.00000                 5.0   \n1              1.0         12.0     694.00000                 2.0   \n2              1.0         14.0     594.13683                 3.0   \n3              1.0          0.0     367.00000                 1.0   \n4              0.0          8.0     598.00000                 4.0   \n\n   Premium Amount  ...  Age_to_VehicleAge_Diff  Health_to_Credit_Score_Ratio  \\\n0          2869.0  ...                     2.0                      0.060586   \n1          1483.0  ...                    27.0                      0.022402   \n2           567.0  ...                     9.0                      0.079272   \n3           765.0  ...                    21.0                      0.029723   \n4          2022.0  ...                    13.0                      0.034017   \n\n   Total_Assets  Overall_Risk  Log_Income  Log_Credit  Income_Quartile  \\\n0   10421.00000      1.062005    9.215328    5.921578                2   \n1   32372.00000      0.963408   10.363409    6.543912                3   \n2   26196.13683      0.381537   10.150465    6.388791                3   \n3  142222.00000      0.182846   11.862568    5.908083                4   \n4   40249.00000      0.588925   10.587897    6.395262                3   \n\n   Credit_Quartile  High_Income  Old_Vehicle  \n0                1            0            1  \n1                3            1            1  \n2                2            1            1  \n3                1            1            0  \n4                3            1            0  \n\n[5 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Number of Dependents</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Premium Amount</th>\n      <th>...</th>\n      <th>Age_to_VehicleAge_Diff</th>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <th>Total_Assets</th>\n      <th>Overall_Risk</th>\n      <th>Log_Income</th>\n      <th>Log_Credit</th>\n      <th>Income_Quartile</th>\n      <th>Credit_Quartile</th>\n      <th>High_Income</th>\n      <th>Old_Vehicle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>10049.0</td>\n      <td>1.0</td>\n      <td>22.598761</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>372.00000</td>\n      <td>5.0</td>\n      <td>2869.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>0.060586</td>\n      <td>10421.00000</td>\n      <td>1.062005</td>\n      <td>9.215328</td>\n      <td>5.921578</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>31678.0</td>\n      <td>3.0</td>\n      <td>15.569731</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>694.00000</td>\n      <td>2.0</td>\n      <td>1483.0</td>\n      <td>...</td>\n      <td>27.0</td>\n      <td>0.022402</td>\n      <td>32372.00000</td>\n      <td>0.963408</td>\n      <td>10.363409</td>\n      <td>6.543912</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>25602.0</td>\n      <td>3.0</td>\n      <td>47.177549</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>594.13683</td>\n      <td>3.0</td>\n      <td>567.0</td>\n      <td>...</td>\n      <td>9.0</td>\n      <td>0.079272</td>\n      <td>26196.13683</td>\n      <td>0.381537</td>\n      <td>10.150465</td>\n      <td>6.388791</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>141855.0</td>\n      <td>2.0</td>\n      <td>10.938144</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>367.00000</td>\n      <td>1.0</td>\n      <td>765.0</td>\n      <td>...</td>\n      <td>21.0</td>\n      <td>0.029723</td>\n      <td>142222.00000</td>\n      <td>0.182846</td>\n      <td>11.862568</td>\n      <td>5.908083</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>39651.0</td>\n      <td>1.0</td>\n      <td>20.376094</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>598.00000</td>\n      <td>4.0</td>\n      <td>2022.0</td>\n      <td>...</td>\n      <td>13.0</td>\n      <td>0.034017</td>\n      <td>40249.00000</td>\n      <td>0.588925</td>\n      <td>10.587897</td>\n      <td>6.395262</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 29 columns</p>\n</div>"},"metadata":{}}],"execution_count":65},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:14:38.604553Z","iopub.execute_input":"2024-12-08T16:14:38.604901Z","iopub.status.idle":"2024-12-08T16:14:38.610784Z","shell.execute_reply.started":"2024-12-08T16:14:38.604869Z","shell.execute_reply":"2024-12-08T16:14:38.609704Z"}},"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"(1000, 29)"},"metadata":{}}],"execution_count":66},{"cell_type":"code","source":"null_data = pd.DataFrame()\nnull_data['null_count'] = df.isnull().sum()\nnull_data['null_ratio'] = round(null_data['null_count'] / len(df), 4)\nnull_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:14:43.473057Z","iopub.execute_input":"2024-12-08T16:14:43.473403Z","iopub.status.idle":"2024-12-08T16:14:43.488267Z","shell.execute_reply.started":"2024-12-08T16:14:43.473374Z","shell.execute_reply":"2024-12-08T16:14:43.487411Z"}},"outputs":[{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"                              null_count  null_ratio\nid                                     0         0.0\nAge                                    0         0.0\nAnnual Income                          0         0.0\nNumber of Dependents                   0         0.0\nHealth Score                           0         0.0\nPrevious Claims                        0         0.0\nVehicle Age                            0         0.0\nCredit Score                           0         0.0\nInsurance Duration                     0         0.0\nPremium Amount                         0         0.0\nMean_Income_Duration                   0         0.0\nIncome_Skewness                        0         0.0\nHealth_Skewness                        0         0.0\nClaims_Skewness                        0         0.0\nIncome_Kurtosis                        0         0.0\nHealth_Kurtosis                        0         0.0\nClaims_Kurtosis                        0         0.0\nIncome_Per_Dependent                   0         0.0\nClaims_Per_Year                        0         0.0\nAge_to_VehicleAge_Diff                 0         0.0\nHealth_to_Credit_Score_Ratio           0         0.0\nTotal_Assets                           0         0.0\nOverall_Risk                           0         0.0\nLog_Income                             0         0.0\nLog_Credit                             0         0.0\nIncome_Quartile                        0         0.0\nCredit_Quartile                        0         0.0\nHigh_Income                            0         0.0\nOld_Vehicle                            0         0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Annual Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Number of Dependents</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Previous Claims</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Vehicle Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Insurance Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Premium Amount</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Mean_Income_Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Per_Dependent</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Per_Year</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age_to_VehicleAge_Diff</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Total_Assets</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Overall_Risk</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Credit</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>High_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Old_Vehicle</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":67},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:13:42.321926Z","iopub.status.idle":"2024-12-08T16:13:42.322254Z","shell.execute_reply.started":"2024-12-08T16:13:42.322083Z","shell.execute_reply":"2024-12-08T16:13:42.322098Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Any NaN in y_pred:\", np.any(np.isnan(df)))\nprint(\"Any Inf in y_pred:\", np.any(np.isinf(df)))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:14:55.451659Z","iopub.execute_input":"2024-12-08T16:14:55.452274Z","iopub.status.idle":"2024-12-08T16:14:55.461052Z","shell.execute_reply.started":"2024-12-08T16:14:55.452242Z","shell.execute_reply":"2024-12-08T16:14:55.460112Z"}},"outputs":[{"name":"stdout","text":"Any NaN in y_pred: False\nAny Inf in y_pred: False\n","output_type":"stream"}],"execution_count":68},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_log_error\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.optimizers import Adam\n\n# Separate features and target\nX = df.drop(columns=['Premium Amount'])\ny = df['Premium Amount']\n\n# Train-test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Standardize features (important for NN models)\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# Log-transform the target variable to stabilize variance\ny_train = np.log1p(y_train)\ny_test = np.log1p(y_test)\n\n# Build the Neural Network model\nmodel = Sequential([\n    Dense(64, activation='relu', input_shape=(X_train.shape[1],)),\n    Dropout(0.1),\n    Dense(32, activation='relu'),\n    Dropout(0.05),\n    Dense(16, activation='relu'),\n    Dense(1, activation='linear')\n])\n\n# Compile the model\nmodel.compile(optimizer=Adam(learning_rate=0.001), loss='mse', metrics=['mae'])\n\n# Train the model\nhistory = model.fit(X, y, validation_split=0.2, epochs=25, batch_size=32, verbose=1)\n\n# Predict and Evaluate\ny_pred = model.predict(X_test)\ny_pred = np.expm1(y_pred)  # Reverse the log transformation\ny_test = np.expm1(y_test)  # Reverse the log transformation\n\n# Calculate RMSLE\nrmsle = np.sqrt(mean_squared_log_error(y_test, y_pred))\n\nprint(f\"Root Mean Squared Logarithmic Error (RMSLE): {rmsle}\")\n\n# Predict method\ndef predict_premium(X_input):\n    X_input_scaled = scaler.transform(X_input)\n    predictions = model.predict(X_input_scaled)\n    return np.expm1(predictions)  # Reverse the log transformation\n\n# Example usage of predict\nexample_data = X_test[:5]  # Replace with new input data\npredictions = predict_premium(example_data)\nprint(\"Predicted Premium Amounts:\", predictions)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:15:04.706738Z","iopub.execute_input":"2024-12-08T16:15:04.707404Z","iopub.status.idle":"2024-12-08T16:15:09.491070Z","shell.execute_reply.started":"2024-12-08T16:15:04.707369Z","shell.execute_reply":"2024-12-08T16:15:09.489894Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 14ms/step - loss: 39.1914 - mae: 6.1512 - val_loss: 27.5402 - val_mae: 5.0816\nEpoch 2/5\n\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 20.8993 - mae: 4.3170 - val_loss: 7.6860 - val_mae: 2.4628\nEpoch 3/5\n\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 6.0567 - mae: 2.0214 - val_loss: 3.3490 - val_mae: 1.4686\nEpoch 4/5\n\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 3.7102 - mae: 1.4764 - val_loss: 2.8083 - val_mae: 1.3474\nEpoch 5/5\n\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - loss: 2.8964 - mae: 1.3366 - val_loss: 2.3839 - val_mae: 1.2055\n\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 45ms/step\nRoot Mean Squared Logarithmic Error (RMSLE): 1.455493452141826\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step\nPredicted Premium Amounts: [[           inf]\n [1.42165135e+17]\n [1.34577337e+12]\n [           inf]\n [4.23157616e+32]]\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_23/2323733411.py:56: RuntimeWarning: overflow encountered in expm1\n  return np.expm1(predictions)  # Reverse the log transformation\n","output_type":"stream"}],"execution_count":70},{"cell_type":"code","source":"X.shape","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# add_compound_data(convert_categorical_to_numeric(test_df), scaler = scaler, fit_scaler=False).shape","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_df = pd.read_csv(\"/kaggle/input/playground-series-s4e12/test.csv\")\n\ntest_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:15:54.869771Z","iopub.execute_input":"2024-12-08T16:15:54.870417Z","iopub.status.idle":"2024-12-08T16:15:57.504678Z","shell.execute_reply.started":"2024-12-08T16:15:54.870382Z","shell.execute_reply":"2024-12-08T16:15:57.503816Z"}},"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"             id   Age  Gender  Annual Income Marital Status  \\\n0       1200000  28.0  Female         2310.0            NaN   \n1       1200001  31.0  Female       126031.0        Married   \n2       1200002  47.0  Female        17092.0       Divorced   \n3       1200003  28.0  Female        30424.0       Divorced   \n4       1200004  24.0    Male        10863.0       Divorced   \n...         ...   ...     ...            ...            ...   \n799995  1999995  50.0  Female        38782.0        Married   \n799996  1999996   NaN  Female        73462.0         Single   \n799997  1999997  26.0  Female        35178.0         Single   \n799998  1999998  34.0  Female        45661.0         Single   \n799999  1999999  25.0    Male        24843.0       Divorced   \n\n        Number of Dependents Education Level     Occupation  Health Score  \\\n0                        4.0      Bachelor's  Self-Employed      7.657981   \n1                        2.0        Master's  Self-Employed     13.381379   \n2                        0.0             PhD     Unemployed     24.354527   \n3                        3.0             PhD  Self-Employed      5.136225   \n4                        2.0     High School     Unemployed     11.844155   \n...                      ...             ...            ...           ...   \n799995                   1.0      Bachelor's            NaN     14.498639   \n799996                   0.0        Master's            NaN      8.145748   \n799997                   0.0        Master's       Employed      6.636583   \n799998                   3.0        Master's            NaN     15.937248   \n799999                   3.0     High School            NaN     24.893939   \n\n        Location    Policy Type  Previous Claims  Vehicle Age  Credit Score  \\\n0          Rural          Basic              NaN         19.0           NaN   \n1       Suburban        Premium              NaN         14.0         372.0   \n2          Urban  Comprehensive              NaN         16.0         819.0   \n3       Suburban  Comprehensive              1.0          3.0         770.0   \n4       Suburban        Premium              NaN         14.0         755.0   \n...          ...            ...              ...          ...           ...   \n799995     Rural        Premium              NaN          8.0         309.0   \n799996     Rural          Basic              2.0          0.0           NaN   \n799997     Urban  Comprehensive              NaN         10.0           NaN   \n799998     Urban        Premium              2.0         17.0         467.0   \n799999  Suburban  Comprehensive              NaN         15.0           NaN   \n\n        Insurance Duration           Policy Start Date Customer Feedback  \\\n0                      1.0  2023-06-04 15:21:39.245086              Poor   \n1                      8.0  2024-04-22 15:21:39.224915              Good   \n2                      9.0  2023-04-05 15:21:39.134960           Average   \n3                      5.0  2023-10-25 15:21:39.134960              Poor   \n4                      7.0  2021-11-26 15:21:39.259788           Average   \n...                    ...                         ...               ...   \n799995                 2.0  2021-07-09 15:21:39.184157           Average   \n799996                 2.0  2023-03-28 15:21:39.250151              Good   \n799997                 6.0  2019-09-30 15:21:39.132191              Poor   \n799998                 7.0  2022-05-09 15:21:39.253660           Average   \n799999                 8.0  2021-05-18 15:21:39.108562              Good   \n\n       Smoking Status Exercise Frequency Property Type  \n0                 Yes             Weekly         House  \n1                 Yes             Rarely     Apartment  \n2                 Yes            Monthly         Condo  \n3                 Yes              Daily         House  \n4                  No             Weekly         House  \n...               ...                ...           ...  \n799995            Yes              Daily         Condo  \n799996             No              Daily     Apartment  \n799997             No            Monthly     Apartment  \n799998             No             Weekly         Condo  \n799999             No             Rarely         House  \n\n[800000 rows x 20 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Location</th>\n      <th>Policy Type</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Policy Start Date</th>\n      <th>Customer Feedback</th>\n      <th>Smoking Status</th>\n      <th>Exercise Frequency</th>\n      <th>Property Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1200000</td>\n      <td>28.0</td>\n      <td>Female</td>\n      <td>2310.0</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>7.657981</td>\n      <td>Rural</td>\n      <td>Basic</td>\n      <td>NaN</td>\n      <td>19.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>2023-06-04 15:21:39.245086</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1200001</td>\n      <td>31.0</td>\n      <td>Female</td>\n      <td>126031.0</td>\n      <td>Married</td>\n      <td>2.0</td>\n      <td>Master's</td>\n      <td>Self-Employed</td>\n      <td>13.381379</td>\n      <td>Suburban</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>14.0</td>\n      <td>372.0</td>\n      <td>8.0</td>\n      <td>2024-04-22 15:21:39.224915</td>\n      <td>Good</td>\n      <td>Yes</td>\n      <td>Rarely</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1200002</td>\n      <td>47.0</td>\n      <td>Female</td>\n      <td>17092.0</td>\n      <td>Divorced</td>\n      <td>0.0</td>\n      <td>PhD</td>\n      <td>Unemployed</td>\n      <td>24.354527</td>\n      <td>Urban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>16.0</td>\n      <td>819.0</td>\n      <td>9.0</td>\n      <td>2023-04-05 15:21:39.134960</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Monthly</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200003</td>\n      <td>28.0</td>\n      <td>Female</td>\n      <td>30424.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>PhD</td>\n      <td>Self-Employed</td>\n      <td>5.136225</td>\n      <td>Suburban</td>\n      <td>Comprehensive</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>770.0</td>\n      <td>5.0</td>\n      <td>2023-10-25 15:21:39.134960</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1200004</td>\n      <td>24.0</td>\n      <td>Male</td>\n      <td>10863.0</td>\n      <td>Divorced</td>\n      <td>2.0</td>\n      <td>High School</td>\n      <td>Unemployed</td>\n      <td>11.844155</td>\n      <td>Suburban</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>14.0</td>\n      <td>755.0</td>\n      <td>7.0</td>\n      <td>2021-11-26 15:21:39.259788</td>\n      <td>Average</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>House</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>1999995</td>\n      <td>50.0</td>\n      <td>Female</td>\n      <td>38782.0</td>\n      <td>Married</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>NaN</td>\n      <td>14.498639</td>\n      <td>Rural</td>\n      <td>Premium</td>\n      <td>NaN</td>\n      <td>8.0</td>\n      <td>309.0</td>\n      <td>2.0</td>\n      <td>2021-07-09 15:21:39.184157</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>1999996</td>\n      <td>NaN</td>\n      <td>Female</td>\n      <td>73462.0</td>\n      <td>Single</td>\n      <td>0.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>8.145748</td>\n      <td>Rural</td>\n      <td>Basic</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>2023-03-28 15:21:39.250151</td>\n      <td>Good</td>\n      <td>No</td>\n      <td>Daily</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>1999997</td>\n      <td>26.0</td>\n      <td>Female</td>\n      <td>35178.0</td>\n      <td>Single</td>\n      <td>0.0</td>\n      <td>Master's</td>\n      <td>Employed</td>\n      <td>6.636583</td>\n      <td>Urban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>10.0</td>\n      <td>NaN</td>\n      <td>6.0</td>\n      <td>2019-09-30 15:21:39.132191</td>\n      <td>Poor</td>\n      <td>No</td>\n      <td>Monthly</td>\n      <td>Apartment</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>1999998</td>\n      <td>34.0</td>\n      <td>Female</td>\n      <td>45661.0</td>\n      <td>Single</td>\n      <td>3.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>15.937248</td>\n      <td>Urban</td>\n      <td>Premium</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>467.0</td>\n      <td>7.0</td>\n      <td>2022-05-09 15:21:39.253660</td>\n      <td>Average</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>Condo</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>1999999</td>\n      <td>25.0</td>\n      <td>Male</td>\n      <td>24843.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>High School</td>\n      <td>NaN</td>\n      <td>24.893939</td>\n      <td>Suburban</td>\n      <td>Comprehensive</td>\n      <td>NaN</td>\n      <td>15.0</td>\n      <td>NaN</td>\n      <td>8.0</td>\n      <td>2021-05-18 15:21:39.108562</td>\n      <td>Good</td>\n      <td>No</td>\n      <td>Rarely</td>\n      <td>House</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 20 columns</p>\n</div>"},"metadata":{}}],"execution_count":71},{"cell_type":"code","source":"X.shape","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def convert_categorical_to_numeric(df):\n    binary_mappings = {\n        'Smoking Status': {'No': 0, 'Yes': 1}\n    }\n    for col, mapping in binary_mappings.items():\n        if col in df.columns:\n            df[col] = df[col].map(mapping)\n    \n    onehot_encode_cols = ['Gender', 'Location', 'Policy Type', 'Property Type']\n    df = pd.get_dummies(df, columns=onehot_encode_cols, drop_first=False)\n    \n    ordinal_mappings = {\n        'Exercise Frequency': {'Rarely': 0, 'Monthly': 1, 'Weekly': 2, 'Daily': 3},\n        'Customer Feedback': {'Poor': 0, 'Average': 1, 'Good': 2},\n        'Education Level': {'High School': 0, \"Bachelor's\": 1, \"Master's\": 2, 'PhD': 3},\n        'Policy Type': {'Premium': 2, 'Comprehensive': 1, 'Basic': 0}\n    }\n    for col, mapping in ordinal_mappings.items():\n        if col in df.columns:\n            df[col] = df[col].map(mapping)\n    \n    if 'Policy Start Date' in df.columns:\n        df['Policy Start Date'] = pd.to_datetime(df['Policy Start Date']).astype(int) / 10**9  \n    \n    categorical_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n    for col in categorical_cols:\n        df[col] = df[col].fillna('Unknown')\n    \n    label_encode_cols = ['Customer Feedback', 'Marital Status', 'Occupation']\n    for col in label_encode_cols:\n        df[col] = df[col].astype('category').cat.codes\n    \n    return df\nconvert_categorical_to_numeric(test_df).shape\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:16:01.774573Z","iopub.execute_input":"2024-12-08T16:16:01.775268Z","iopub.status.idle":"2024-12-08T16:16:02.820130Z","shell.execute_reply.started":"2024-12-08T16:16:01.775226Z","shell.execute_reply":"2024-12-08T16:16:02.819296Z"}},"outputs":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"(800000, 27)"},"metadata":{}}],"execution_count":72},{"cell_type":"code","source":"def add_compound_data(df, scaler=None, fit_scaler=False):\n    df = df.drop(columns=categorical_cols, errors='ignore') \n    df = df.fillna(df.mean())\n    # df[\"Smoking Status\"] = 0.5\n\n    # Add new features\n    df['Mean_Income_Duration'] = (df['Annual Income'] + df['Insurance Duration']) / 2\n    df['Income_Skewness'] = skew(df['Annual Income'], nan_policy='omit')\n    df['Health_Skewness'] = skew(df['Health Score'], nan_policy='omit')\n    df['Claims_Skewness'] = skew(df['Previous Claims'], nan_policy='omit')\n\n    df['Income_Kurtosis'] = kurtosis(df['Annual Income'], nan_policy='omit')\n    df['Health_Kurtosis'] = kurtosis(df['Health Score'], nan_policy='omit')\n    df['Claims_Kurtosis'] = kurtosis(df['Previous Claims'], nan_policy='omit')\n\n    df['Income_Per_Dependent'] = df['Annual Income'] / (df['Number of Dependents'] + 1)\n    df['Claims_Per_Year'] = df['Previous Claims'] / df['Insurance Duration']\n    df['Age_to_VehicleAge_Diff'] = df['Age'] - df['Vehicle Age']\n    df['Health_to_Credit_Score_Ratio'] = df['Health Score'] / (df['Credit Score'] + 1)\n\n    df['Total_Assets'] = df['Annual Income'] + df['Credit Score']\n    df['Overall_Risk'] = (df['Vehicle Age'] + df['Previous Claims'] + df['Insurance Duration']) / df['Health Score']\n\n    # Avoid issues with log transformation\n    df['Log_Income'] = np.log1p(df['Annual Income'])\n    df['Log_Credit'] = np.log1p(df['Credit Score'])\n\n    df['Income_Quartile'] = pd.qcut(df['Annual Income'], 4, labels=[1, 2, 3, 4]).astype(int)\n    df['Credit_Quartile'] = pd.qcut(df['Credit Score'], 4, labels=[1, 2, 3, 4]).astype(int)\n\n    df['High_Income'] = (df['Annual Income'] > df['Annual Income'].median()).astype(int)\n    df['Old_Vehicle'] = (df['Vehicle Age'] > 10).astype(int)\n\n    numeric_cols = df.select_dtypes(include=['float64', 'int64']).columns\n    if scaler is not None:\n        if fit_scaler:\n            scaler.fit(df[numeric_cols])\n        df[numeric_cols] = scaler.transform(df[numeric_cols])\n\n    # df = scaler.transform(df)\n\n    return df\n\n\n# transformed_test_df = convert_categorical_to_numeric(test_df)\ntransformed_test_df = add_compound_data(test_df, scaler=scaler, fit_scaler=False)\n# transformed_test_df = transformed_test_df.apply(pd.to_numeric, errors='coerce')\n# transformed_test_df = scaler.transform(transformed_test_df)\n# transformed_test_df = pd.DataFrame(transformed_test_df, columns=X.columns)\ntransformed_test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:22:18.246595Z","iopub.execute_input":"2024-12-08T16:22:18.247015Z","iopub.status.idle":"2024-12-08T16:22:19.515972Z","shell.execute_reply.started":"2024-12-08T16:22:18.246981Z","shell.execute_reply":"2024-12-08T16:22:19.515143Z"}},"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"                 id       Age  Annual Income  Number of Dependents  \\\n0       4145.786223 -0.965892      -0.949223              1.541920   \n1       4145.789680 -0.744047       3.012025              0.019951   \n2       4145.793136  0.439126      -0.475939             -1.502017   \n3       4145.796592 -0.965892      -0.049081              0.780936   \n4       4145.800049 -1.261685      -0.675377              0.019951   \n...             ...       ...            ...                   ...   \n799995  6910.772562  0.660970       0.218522             -0.741033   \n799996  6910.776018  0.005525       1.328892             -1.502017   \n799997  6910.779474 -1.113788       0.103131             -1.502017   \n799998  6910.782931 -0.522202       0.438771              0.780936   \n799999  6910.786387 -1.187736      -0.227771              0.780936   \n\n        Health Score  Previous Claims  Vehicle Age  Credit Score  \\\n0          -1.517103         0.061896     1.639680     -0.018663   \n1          -1.043256         0.061896     0.777258     -1.568090   \n2          -0.134778         0.061896     1.122227      1.567171   \n3          -1.725881         0.055752    -1.120071      1.223485   \n4          -1.170525         0.061896     0.777258      1.118274   \n...              ...              ...          ...           ...   \n799995     -0.950757         0.061896    -0.257649     -2.009972   \n799996     -1.476720         1.316655    -1.637524     -0.018663   \n799997     -1.601665         0.061896     0.087320     -0.018663   \n799998     -0.831653         1.316655     1.294711     -0.901759   \n799999     -0.090120         0.061896     0.949742     -0.018663   \n\n        Insurance Duration  Mean_Income_Duration  ...  Age_to_VehicleAge_Diff  \\\n0                -1.447105             -0.949348  ...               -1.526195   \n1                 1.157777              3.012125  ...               -0.985182   \n2                 1.529903             -0.475807  ...               -0.038410   \n3                 0.041399             -0.049077  ...               -0.444169   \n4                 0.785651             -0.675309  ...               -1.458568   \n...                    ...                   ...  ...                     ...   \n799995           -1.074979              0.218430  ...                0.705483   \n799996           -1.074979              1.328800  ...                0.647083   \n799997            0.413525              0.103167  ...               -1.052809   \n799998            0.785651              0.438839  ...               -0.985182   \n799999            1.157777             -0.227671  ...               -1.458568   \n\n        Health_to_Credit_Score_Ratio  Total_Assets  Overall_Risk  Log_Income  \\\n0                          -1.323277     -0.950078      2.473042   -1.486338   \n1                          -0.415581      3.007304      1.156522    1.484090   \n2                          -0.659457     -0.469165      0.318789    0.000035   \n3                          -1.569450     -0.043531      1.199076    0.428342   \n4                          -1.213765     -0.670816      1.334892   -0.336621   \n...                              ...           ...           ...         ...   \n799995                      0.014744      0.209517     -0.078256    0.608637   \n799996                     -1.290838      1.329885     -0.422881    1.083150   \n799997                     -1.391206      0.103129      2.240809    0.536188   \n799998                     -0.487509      0.435008      1.043644    0.729928   \n799999                     -0.176984     -0.228041      0.185713    0.277811   \n\n        Log_Credit  Income_Quartile  Credit_Quartile  High_Income  Old_Vehicle  \n0         0.103973        -1.330975        -0.398008    -1.002503     1.099975  \n1        -1.718410         1.344352        -1.289902     0.997503     1.099975  \n2         1.367836        -0.439200         1.385780    -1.002503     1.099975  \n3         1.126430         0.452576         1.385780     0.997503    -0.909112  \n4         1.049454        -0.439200         1.385780    -1.002503     1.099975  \n...            ...              ...              ...          ...          ...  \n799995   -2.443249         0.452576        -1.289902     0.997503    -0.909112  \n799996    0.103973         1.344352        -0.398008     0.997503    -0.909112  \n799997    0.103973         0.452576        -0.398008     0.997503    -0.909112  \n799998   -0.829474         1.344352        -1.289902     0.997503     1.099975  \n799999    0.103973        -0.439200        -0.398008    -1.002503     1.099975  \n\n[800000 rows x 28 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Number of Dependents</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Mean_Income_Duration</th>\n      <th>...</th>\n      <th>Age_to_VehicleAge_Diff</th>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <th>Total_Assets</th>\n      <th>Overall_Risk</th>\n      <th>Log_Income</th>\n      <th>Log_Credit</th>\n      <th>Income_Quartile</th>\n      <th>Credit_Quartile</th>\n      <th>High_Income</th>\n      <th>Old_Vehicle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4145.786223</td>\n      <td>-0.965892</td>\n      <td>-0.949223</td>\n      <td>1.541920</td>\n      <td>-1.517103</td>\n      <td>0.061896</td>\n      <td>1.639680</td>\n      <td>-0.018663</td>\n      <td>-1.447105</td>\n      <td>-0.949348</td>\n      <td>...</td>\n      <td>-1.526195</td>\n      <td>-1.323277</td>\n      <td>-0.950078</td>\n      <td>2.473042</td>\n      <td>-1.486338</td>\n      <td>0.103973</td>\n      <td>-1.330975</td>\n      <td>-0.398008</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4145.789680</td>\n      <td>-0.744047</td>\n      <td>3.012025</td>\n      <td>0.019951</td>\n      <td>-1.043256</td>\n      <td>0.061896</td>\n      <td>0.777258</td>\n      <td>-1.568090</td>\n      <td>1.157777</td>\n      <td>3.012125</td>\n      <td>...</td>\n      <td>-0.985182</td>\n      <td>-0.415581</td>\n      <td>3.007304</td>\n      <td>1.156522</td>\n      <td>1.484090</td>\n      <td>-1.718410</td>\n      <td>1.344352</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4145.793136</td>\n      <td>0.439126</td>\n      <td>-0.475939</td>\n      <td>-1.502017</td>\n      <td>-0.134778</td>\n      <td>0.061896</td>\n      <td>1.122227</td>\n      <td>1.567171</td>\n      <td>1.529903</td>\n      <td>-0.475807</td>\n      <td>...</td>\n      <td>-0.038410</td>\n      <td>-0.659457</td>\n      <td>-0.469165</td>\n      <td>0.318789</td>\n      <td>0.000035</td>\n      <td>1.367836</td>\n      <td>-0.439200</td>\n      <td>1.385780</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4145.796592</td>\n      <td>-0.965892</td>\n      <td>-0.049081</td>\n      <td>0.780936</td>\n      <td>-1.725881</td>\n      <td>0.055752</td>\n      <td>-1.120071</td>\n      <td>1.223485</td>\n      <td>0.041399</td>\n      <td>-0.049077</td>\n      <td>...</td>\n      <td>-0.444169</td>\n      <td>-1.569450</td>\n      <td>-0.043531</td>\n      <td>1.199076</td>\n      <td>0.428342</td>\n      <td>1.126430</td>\n      <td>0.452576</td>\n      <td>1.385780</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4145.800049</td>\n      <td>-1.261685</td>\n      <td>-0.675377</td>\n      <td>0.019951</td>\n      <td>-1.170525</td>\n      <td>0.061896</td>\n      <td>0.777258</td>\n      <td>1.118274</td>\n      <td>0.785651</td>\n      <td>-0.675309</td>\n      <td>...</td>\n      <td>-1.458568</td>\n      <td>-1.213765</td>\n      <td>-0.670816</td>\n      <td>1.334892</td>\n      <td>-0.336621</td>\n      <td>1.049454</td>\n      <td>-0.439200</td>\n      <td>1.385780</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>6910.772562</td>\n      <td>0.660970</td>\n      <td>0.218522</td>\n      <td>-0.741033</td>\n      <td>-0.950757</td>\n      <td>0.061896</td>\n      <td>-0.257649</td>\n      <td>-2.009972</td>\n      <td>-1.074979</td>\n      <td>0.218430</td>\n      <td>...</td>\n      <td>0.705483</td>\n      <td>0.014744</td>\n      <td>0.209517</td>\n      <td>-0.078256</td>\n      <td>0.608637</td>\n      <td>-2.443249</td>\n      <td>0.452576</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>6910.776018</td>\n      <td>0.005525</td>\n      <td>1.328892</td>\n      <td>-1.502017</td>\n      <td>-1.476720</td>\n      <td>1.316655</td>\n      <td>-1.637524</td>\n      <td>-0.018663</td>\n      <td>-1.074979</td>\n      <td>1.328800</td>\n      <td>...</td>\n      <td>0.647083</td>\n      <td>-1.290838</td>\n      <td>1.329885</td>\n      <td>-0.422881</td>\n      <td>1.083150</td>\n      <td>0.103973</td>\n      <td>1.344352</td>\n      <td>-0.398008</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>6910.779474</td>\n      <td>-1.113788</td>\n      <td>0.103131</td>\n      <td>-1.502017</td>\n      <td>-1.601665</td>\n      <td>0.061896</td>\n      <td>0.087320</td>\n      <td>-0.018663</td>\n      <td>0.413525</td>\n      <td>0.103167</td>\n      <td>...</td>\n      <td>-1.052809</td>\n      <td>-1.391206</td>\n      <td>0.103129</td>\n      <td>2.240809</td>\n      <td>0.536188</td>\n      <td>0.103973</td>\n      <td>0.452576</td>\n      <td>-0.398008</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>6910.782931</td>\n      <td>-0.522202</td>\n      <td>0.438771</td>\n      <td>0.780936</td>\n      <td>-0.831653</td>\n      <td>1.316655</td>\n      <td>1.294711</td>\n      <td>-0.901759</td>\n      <td>0.785651</td>\n      <td>0.438839</td>\n      <td>...</td>\n      <td>-0.985182</td>\n      <td>-0.487509</td>\n      <td>0.435008</td>\n      <td>1.043644</td>\n      <td>0.729928</td>\n      <td>-0.829474</td>\n      <td>1.344352</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>6910.786387</td>\n      <td>-1.187736</td>\n      <td>-0.227771</td>\n      <td>0.780936</td>\n      <td>-0.090120</td>\n      <td>0.061896</td>\n      <td>0.949742</td>\n      <td>-0.018663</td>\n      <td>1.157777</td>\n      <td>-0.227671</td>\n      <td>...</td>\n      <td>-1.458568</td>\n      <td>-0.176984</td>\n      <td>-0.228041</td>\n      <td>0.185713</td>\n      <td>0.277811</td>\n      <td>0.103973</td>\n      <td>-0.439200</td>\n      <td>-0.398008</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 28 columns</p>\n</div>"},"metadata":{}}],"execution_count":77},{"cell_type":"code","source":"print(\"Any NaN values:\", np.any(np.isnan(transformed_test_df)))\nprint(\"Any Inf values:\", np.any(np.isinf(transformed_test_df)))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:22:22.534516Z","iopub.execute_input":"2024-12-08T16:22:22.535178Z","iopub.status.idle":"2024-12-08T16:22:22.583152Z","shell.execute_reply.started":"2024-12-08T16:22:22.535144Z","shell.execute_reply":"2024-12-08T16:22:22.582122Z"}},"outputs":[{"name":"stdout","text":"Any NaN values: False\nAny Inf values: False\n","output_type":"stream"}],"execution_count":78},{"cell_type":"code","source":"null_data = pd.DataFrame()\nnull_data['null_count'] = transformed_test_df.isnull().sum()\nnull_data['null_ratio'] = round(null_data['null_count'] / len(transformed_test_df), 4)\nnull_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:22:52.143239Z","iopub.execute_input":"2024-12-08T16:22:52.143853Z","iopub.status.idle":"2024-12-08T16:22:52.186984Z","shell.execute_reply.started":"2024-12-08T16:22:52.143819Z","shell.execute_reply":"2024-12-08T16:22:52.186195Z"}},"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"                              null_count  null_ratio\nid                                     0         0.0\nAge                                    0         0.0\nAnnual Income                          0         0.0\nNumber of Dependents                   0         0.0\nHealth Score                           0         0.0\nPrevious Claims                        0         0.0\nVehicle Age                            0         0.0\nCredit Score                           0         0.0\nInsurance Duration                     0         0.0\nMean_Income_Duration                   0         0.0\nIncome_Skewness                        0         0.0\nHealth_Skewness                        0         0.0\nClaims_Skewness                        0         0.0\nIncome_Kurtosis                        0         0.0\nHealth_Kurtosis                        0         0.0\nClaims_Kurtosis                        0         0.0\nIncome_Per_Dependent                   0         0.0\nClaims_Per_Year                        0         0.0\nAge_to_VehicleAge_Diff                 0         0.0\nHealth_to_Credit_Score_Ratio           0         0.0\nTotal_Assets                           0         0.0\nOverall_Risk                           0         0.0\nLog_Income                             0         0.0\nLog_Credit                             0         0.0\nIncome_Quartile                        0         0.0\nCredit_Quartile                        0         0.0\nHigh_Income                            0         0.0\nOld_Vehicle                            0         0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null_count</th>\n      <th>null_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Annual Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Number of Dependents</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Previous Claims</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Vehicle Age</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit Score</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Insurance Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Mean_Income_Duration</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Skewness</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Kurtosis</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Per_Dependent</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Claims_Per_Year</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Age_to_VehicleAge_Diff</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Total_Assets</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Overall_Risk</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Log_Credit</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Income_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Credit_Quartile</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>High_Income</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Old_Vehicle</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":80},{"cell_type":"code","source":"transformed_test_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:22:56.861858Z","iopub.execute_input":"2024-12-08T16:22:56.862200Z","iopub.status.idle":"2024-12-08T16:22:56.867756Z","shell.execute_reply.started":"2024-12-08T16:22:56.862169Z","shell.execute_reply":"2024-12-08T16:22:56.866849Z"}},"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"(800000, 28)"},"metadata":{}}],"execution_count":81},{"cell_type":"code","source":"# print(\"transformed_test_df shape:\", transformed_test_df.shape)\n# print(\"transformed_test_df dtype:\", transformed_test_df.dtype)\n# print(\"example_data shape:\", example_data.shape)\n# print(\"example_data dtype:\", example_data.dtype)\n","metadata":{"trusted":true},"outputs":[{"name":"stdout","text":"transformed_test_df shape: (800000, 28)\n","output_type":"stream"}],"execution_count":83},{"cell_type":"code","source":"\nprint(\"Columns in transformed_test_df:\", transformed_test_df.columns)\nprint(\"Columns in X_train:\", X.columns)\nmissing_columns = set(X.columns) - set(transformed_test_df.columns)\nextra_columns = set(transformed_test_df.columns) - set(X.columns)\nprint(\"Missing columns:\", missing_columns)\nprint(\"Extra columns:\", extra_columns)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:23:09.641252Z","iopub.execute_input":"2024-12-08T16:23:09.641593Z","iopub.status.idle":"2024-12-08T16:23:09.647457Z","shell.execute_reply.started":"2024-12-08T16:23:09.641564Z","shell.execute_reply":"2024-12-08T16:23:09.646610Z"}},"outputs":[{"name":"stdout","text":"Columns in transformed_test_df: Index(['id', 'Age', 'Annual Income', 'Number of Dependents', 'Health Score',\n       'Previous Claims', 'Vehicle Age', 'Credit Score', 'Insurance Duration',\n       'Mean_Income_Duration', 'Income_Skewness', 'Health_Skewness',\n       'Claims_Skewness', 'Income_Kurtosis', 'Health_Kurtosis',\n       'Claims_Kurtosis', 'Income_Per_Dependent', 'Claims_Per_Year',\n       'Age_to_VehicleAge_Diff', 'Health_to_Credit_Score_Ratio',\n       'Total_Assets', 'Overall_Risk', 'Log_Income', 'Log_Credit',\n       'Income_Quartile', 'Credit_Quartile', 'High_Income', 'Old_Vehicle'],\n      dtype='object')\nColumns in X_train: Index(['id', 'Age', 'Annual Income', 'Number of Dependents', 'Health Score',\n       'Previous Claims', 'Vehicle Age', 'Credit Score', 'Insurance Duration',\n       'Mean_Income_Duration', 'Income_Skewness', 'Health_Skewness',\n       'Claims_Skewness', 'Income_Kurtosis', 'Health_Kurtosis',\n       'Claims_Kurtosis', 'Income_Per_Dependent', 'Claims_Per_Year',\n       'Age_to_VehicleAge_Diff', 'Health_to_Credit_Score_Ratio',\n       'Total_Assets', 'Overall_Risk', 'Log_Income', 'Log_Credit',\n       'Income_Quartile', 'Credit_Quartile', 'High_Income', 'Old_Vehicle'],\n      dtype='object')\nMissing columns: set()\nExtra columns: set()\n","output_type":"stream"}],"execution_count":84},{"cell_type":"code","source":"transformed_test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:23:13.942569Z","iopub.execute_input":"2024-12-08T16:23:13.942897Z","iopub.status.idle":"2024-12-08T16:23:14.424974Z","shell.execute_reply.started":"2024-12-08T16:23:13.942867Z","shell.execute_reply":"2024-12-08T16:23:14.424105Z"}},"outputs":[{"execution_count":85,"output_type":"execute_result","data":{"text/plain":"                 id       Age  Annual Income  Number of Dependents  \\\n0       4145.786223 -0.965892      -0.949223              1.541920   \n1       4145.789680 -0.744047       3.012025              0.019951   \n2       4145.793136  0.439126      -0.475939             -1.502017   \n3       4145.796592 -0.965892      -0.049081              0.780936   \n4       4145.800049 -1.261685      -0.675377              0.019951   \n...             ...       ...            ...                   ...   \n799995  6910.772562  0.660970       0.218522             -0.741033   \n799996  6910.776018  0.005525       1.328892             -1.502017   \n799997  6910.779474 -1.113788       0.103131             -1.502017   \n799998  6910.782931 -0.522202       0.438771              0.780936   \n799999  6910.786387 -1.187736      -0.227771              0.780936   \n\n        Health Score  Previous Claims  Vehicle Age  Credit Score  \\\n0          -1.517103         0.061896     1.639680     -0.018663   \n1          -1.043256         0.061896     0.777258     -1.568090   \n2          -0.134778         0.061896     1.122227      1.567171   \n3          -1.725881         0.055752    -1.120071      1.223485   \n4          -1.170525         0.061896     0.777258      1.118274   \n...              ...              ...          ...           ...   \n799995     -0.950757         0.061896    -0.257649     -2.009972   \n799996     -1.476720         1.316655    -1.637524     -0.018663   \n799997     -1.601665         0.061896     0.087320     -0.018663   \n799998     -0.831653         1.316655     1.294711     -0.901759   \n799999     -0.090120         0.061896     0.949742     -0.018663   \n\n        Insurance Duration  Mean_Income_Duration  ...  Age_to_VehicleAge_Diff  \\\n0                -1.447105             -0.949348  ...               -1.526195   \n1                 1.157777              3.012125  ...               -0.985182   \n2                 1.529903             -0.475807  ...               -0.038410   \n3                 0.041399             -0.049077  ...               -0.444169   \n4                 0.785651             -0.675309  ...               -1.458568   \n...                    ...                   ...  ...                     ...   \n799995           -1.074979              0.218430  ...                0.705483   \n799996           -1.074979              1.328800  ...                0.647083   \n799997            0.413525              0.103167  ...               -1.052809   \n799998            0.785651              0.438839  ...               -0.985182   \n799999            1.157777             -0.227671  ...               -1.458568   \n\n        Health_to_Credit_Score_Ratio  Total_Assets  Overall_Risk  Log_Income  \\\n0                          -1.323277     -0.950078      2.473042   -1.486338   \n1                          -0.415581      3.007304      1.156522    1.484090   \n2                          -0.659457     -0.469165      0.318789    0.000035   \n3                          -1.569450     -0.043531      1.199076    0.428342   \n4                          -1.213765     -0.670816      1.334892   -0.336621   \n...                              ...           ...           ...         ...   \n799995                      0.014744      0.209517     -0.078256    0.608637   \n799996                     -1.290838      1.329885     -0.422881    1.083150   \n799997                     -1.391206      0.103129      2.240809    0.536188   \n799998                     -0.487509      0.435008      1.043644    0.729928   \n799999                     -0.176984     -0.228041      0.185713    0.277811   \n\n        Log_Credit  Income_Quartile  Credit_Quartile  High_Income  Old_Vehicle  \n0         0.103973        -1.330975        -0.398008    -1.002503     1.099975  \n1        -1.718410         1.344352        -1.289902     0.997503     1.099975  \n2         1.367836        -0.439200         1.385780    -1.002503     1.099975  \n3         1.126430         0.452576         1.385780     0.997503    -0.909112  \n4         1.049454        -0.439200         1.385780    -1.002503     1.099975  \n...            ...              ...              ...          ...          ...  \n799995   -2.443249         0.452576        -1.289902     0.997503    -0.909112  \n799996    0.103973         1.344352        -0.398008     0.997503    -0.909112  \n799997    0.103973         0.452576        -0.398008     0.997503    -0.909112  \n799998   -0.829474         1.344352        -1.289902     0.997503     1.099975  \n799999    0.103973        -0.439200        -0.398008    -1.002503     1.099975  \n\n[800000 rows x 28 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Number of Dependents</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Mean_Income_Duration</th>\n      <th>...</th>\n      <th>Age_to_VehicleAge_Diff</th>\n      <th>Health_to_Credit_Score_Ratio</th>\n      <th>Total_Assets</th>\n      <th>Overall_Risk</th>\n      <th>Log_Income</th>\n      <th>Log_Credit</th>\n      <th>Income_Quartile</th>\n      <th>Credit_Quartile</th>\n      <th>High_Income</th>\n      <th>Old_Vehicle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4145.786223</td>\n      <td>-0.965892</td>\n      <td>-0.949223</td>\n      <td>1.541920</td>\n      <td>-1.517103</td>\n      <td>0.061896</td>\n      <td>1.639680</td>\n      <td>-0.018663</td>\n      <td>-1.447105</td>\n      <td>-0.949348</td>\n      <td>...</td>\n      <td>-1.526195</td>\n      <td>-1.323277</td>\n      <td>-0.950078</td>\n      <td>2.473042</td>\n      <td>-1.486338</td>\n      <td>0.103973</td>\n      <td>-1.330975</td>\n      <td>-0.398008</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4145.789680</td>\n      <td>-0.744047</td>\n      <td>3.012025</td>\n      <td>0.019951</td>\n      <td>-1.043256</td>\n      <td>0.061896</td>\n      <td>0.777258</td>\n      <td>-1.568090</td>\n      <td>1.157777</td>\n      <td>3.012125</td>\n      <td>...</td>\n      <td>-0.985182</td>\n      <td>-0.415581</td>\n      <td>3.007304</td>\n      <td>1.156522</td>\n      <td>1.484090</td>\n      <td>-1.718410</td>\n      <td>1.344352</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4145.793136</td>\n      <td>0.439126</td>\n      <td>-0.475939</td>\n      <td>-1.502017</td>\n      <td>-0.134778</td>\n      <td>0.061896</td>\n      <td>1.122227</td>\n      <td>1.567171</td>\n      <td>1.529903</td>\n      <td>-0.475807</td>\n      <td>...</td>\n      <td>-0.038410</td>\n      <td>-0.659457</td>\n      <td>-0.469165</td>\n      <td>0.318789</td>\n      <td>0.000035</td>\n      <td>1.367836</td>\n      <td>-0.439200</td>\n      <td>1.385780</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4145.796592</td>\n      <td>-0.965892</td>\n      <td>-0.049081</td>\n      <td>0.780936</td>\n      <td>-1.725881</td>\n      <td>0.055752</td>\n      <td>-1.120071</td>\n      <td>1.223485</td>\n      <td>0.041399</td>\n      <td>-0.049077</td>\n      <td>...</td>\n      <td>-0.444169</td>\n      <td>-1.569450</td>\n      <td>-0.043531</td>\n      <td>1.199076</td>\n      <td>0.428342</td>\n      <td>1.126430</td>\n      <td>0.452576</td>\n      <td>1.385780</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4145.800049</td>\n      <td>-1.261685</td>\n      <td>-0.675377</td>\n      <td>0.019951</td>\n      <td>-1.170525</td>\n      <td>0.061896</td>\n      <td>0.777258</td>\n      <td>1.118274</td>\n      <td>0.785651</td>\n      <td>-0.675309</td>\n      <td>...</td>\n      <td>-1.458568</td>\n      <td>-1.213765</td>\n      <td>-0.670816</td>\n      <td>1.334892</td>\n      <td>-0.336621</td>\n      <td>1.049454</td>\n      <td>-0.439200</td>\n      <td>1.385780</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>6910.772562</td>\n      <td>0.660970</td>\n      <td>0.218522</td>\n      <td>-0.741033</td>\n      <td>-0.950757</td>\n      <td>0.061896</td>\n      <td>-0.257649</td>\n      <td>-2.009972</td>\n      <td>-1.074979</td>\n      <td>0.218430</td>\n      <td>...</td>\n      <td>0.705483</td>\n      <td>0.014744</td>\n      <td>0.209517</td>\n      <td>-0.078256</td>\n      <td>0.608637</td>\n      <td>-2.443249</td>\n      <td>0.452576</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>6910.776018</td>\n      <td>0.005525</td>\n      <td>1.328892</td>\n      <td>-1.502017</td>\n      <td>-1.476720</td>\n      <td>1.316655</td>\n      <td>-1.637524</td>\n      <td>-0.018663</td>\n      <td>-1.074979</td>\n      <td>1.328800</td>\n      <td>...</td>\n      <td>0.647083</td>\n      <td>-1.290838</td>\n      <td>1.329885</td>\n      <td>-0.422881</td>\n      <td>1.083150</td>\n      <td>0.103973</td>\n      <td>1.344352</td>\n      <td>-0.398008</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>6910.779474</td>\n      <td>-1.113788</td>\n      <td>0.103131</td>\n      <td>-1.502017</td>\n      <td>-1.601665</td>\n      <td>0.061896</td>\n      <td>0.087320</td>\n      <td>-0.018663</td>\n      <td>0.413525</td>\n      <td>0.103167</td>\n      <td>...</td>\n      <td>-1.052809</td>\n      <td>-1.391206</td>\n      <td>0.103129</td>\n      <td>2.240809</td>\n      <td>0.536188</td>\n      <td>0.103973</td>\n      <td>0.452576</td>\n      <td>-0.398008</td>\n      <td>0.997503</td>\n      <td>-0.909112</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>6910.782931</td>\n      <td>-0.522202</td>\n      <td>0.438771</td>\n      <td>0.780936</td>\n      <td>-0.831653</td>\n      <td>1.316655</td>\n      <td>1.294711</td>\n      <td>-0.901759</td>\n      <td>0.785651</td>\n      <td>0.438839</td>\n      <td>...</td>\n      <td>-0.985182</td>\n      <td>-0.487509</td>\n      <td>0.435008</td>\n      <td>1.043644</td>\n      <td>0.729928</td>\n      <td>-0.829474</td>\n      <td>1.344352</td>\n      <td>-1.289902</td>\n      <td>0.997503</td>\n      <td>1.099975</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>6910.786387</td>\n      <td>-1.187736</td>\n      <td>-0.227771</td>\n      <td>0.780936</td>\n      <td>-0.090120</td>\n      <td>0.061896</td>\n      <td>0.949742</td>\n      <td>-0.018663</td>\n      <td>1.157777</td>\n      <td>-0.227671</td>\n      <td>...</td>\n      <td>-1.458568</td>\n      <td>-0.176984</td>\n      <td>-0.228041</td>\n      <td>0.185713</td>\n      <td>0.277811</td>\n      <td>0.103973</td>\n      <td>-0.439200</td>\n      <td>-0.398008</td>\n      <td>-1.002503</td>\n      <td>1.099975</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 28 columns</p>\n</div>"},"metadata":{}}],"execution_count":85},{"cell_type":"code","source":"print(\"Min value in transformed_test_df:\", transformed_test_df.min())\nprint(\"Max value in transformed_test_df:\", transformed_test_df.max())\nprint(\"Mean value in transformed_test_df:\", transformed_test_df.mean())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:23:19.653121Z","iopub.execute_input":"2024-12-08T16:23:19.653528Z","iopub.status.idle":"2024-12-08T16:23:19.806966Z","shell.execute_reply.started":"2024-12-08T16:23:19.653488Z","shell.execute_reply":"2024-12-08T16:23:19.806023Z"}},"outputs":[{"name":"stdout","text":"Min value in transformed_test_df: id                              4145.786223\nAge                               -1.705374\nAnnual Income                     -1.023120\nNumber of Dependents              -1.502017\nHealth Score                      -2.014794\nPrevious Claims                   -1.205150\nVehicle Age                       -1.637524\nCredit Score                      -2.073098\nInsurance Duration                -1.447105\nMean_Income_Duration              -1.023212\nIncome_Skewness                   -0.023944\nHealth_Skewness                   -0.072167\nClaims_Skewness                    0.085212\nIncome_Kurtosis                   -0.052282\nHealth_Kurtosis                    0.047820\nClaims_Kurtosis                    0.859939\nIncome_Per_Dependent              -0.747679\nClaims_Per_Year                   -0.661667\nAge_to_VehicleAge_Diff            -2.202461\nHealth_to_Credit_Score_Ratio      -1.728543\nTotal_Assets                      -1.032908\nOverall_Risk                      -1.030055\nLog_Income                        -6.423730\nLog_Credit                        -2.558679\nIncome_Quartile                   -1.330975\nCredit_Quartile                   -1.289902\nHigh_Income                       -1.002503\nOld_Vehicle                       -0.909112\ndtype: float64\nMax value in transformed_test_df: id                              6910.786387\nAge                                1.696246\nAnnual Income                      3.779359\nNumber of Dependents               1.541920\nHealth Score                       2.647235\nPrevious Claims                   10.142972\nVehicle Age                        1.639680\nCredit Score                       1.777591\nInsurance Duration                 1.529903\nMean_Income_Duration               3.779458\nIncome_Skewness                   -0.023944\nHealth_Skewness                   -0.072167\nClaims_Skewness                    0.085212\nIncome_Kurtosis                   -0.052282\nHealth_Kurtosis                    0.047820\nClaims_Kurtosis                    0.859939\nIncome_Per_Dependent               7.358681\nClaims_Per_Year                   17.514182\nAge_to_VehicleAge_Diff             2.193267\nHealth_to_Credit_Score_Ratio       5.253943\nTotal_Assets                       3.790320\nOverall_Risk                      17.080299\nLog_Income                         1.613405\nLog_Credit                         1.508615\nIncome_Quartile                    1.344352\nCredit_Quartile                    1.385780\nHigh_Income                        0.997503\nOld_Vehicle                        1.099975\ndtype: float64\nMean value in transformed_test_df: id                              5528.286305\nAge                                0.005525\nAnnual Income                      0.027117\nNumber of Dependents               0.027057\nHealth Score                      -0.030585\nPrevious Claims                    0.061896\nVehicle Age                        0.013478\nCredit Score                      -0.018663\nInsurance Duration                 0.048450\nMean_Income_Duration               0.027121\nIncome_Skewness                   -0.023944\nHealth_Skewness                   -0.072167\nClaims_Skewness                    0.085212\nIncome_Kurtosis                   -0.052282\nHealth_Kurtosis                    0.047820\nClaims_Kurtosis                    0.859939\nIncome_Per_Dependent               0.038596\nClaims_Per_Year                   -0.024965\nAge_to_VehicleAge_Diff            -0.000231\nHealth_to_Credit_Score_Ratio      -0.017709\nTotal_Assets                       0.027054\nOverall_Risk                       0.015771\nLog_Income                         0.034465\nLog_Credit                        -0.017054\nIncome_Quartile                    0.006649\nCredit_Quartile                   -0.000487\nHigh_Income                       -0.002578\nOld_Vehicle                        0.008210\ndtype: float64\n","output_type":"stream"}],"execution_count":86},{"cell_type":"code","source":"# transformed_test_df = np.clip(transformed_test_df, -10, 10)\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"np.zeros((20, 46), dtype='float32')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:23:34.099776Z","iopub.execute_input":"2024-12-08T16:23:34.100545Z","iopub.status.idle":"2024-12-08T16:23:34.111084Z","shell.execute_reply.started":"2024-12-08T16:23:34.100510Z","shell.execute_reply":"2024-12-08T16:23:34.110241Z"}},"outputs":[{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],\n      dtype=float32)"},"metadata":{}}],"execution_count":87},{"cell_type":"code","source":"# batch_size = 16\n# predictions = []\n\n# for i in range(0, transformed_test_df.shape[0], batch_size):\n#     batch = transformed_test_df[i:i + batch_size]\n#     batch_predictions = model.predict(batch)\n#     predictions.append(batch_predictions)\n\n# # Concatenate predictions\n# predictions = np.concatenate(predictions, axis=0)\n# print(\"Final predictions shape:\", predictions.shape)\npredictions = predict_premium(transformed_test_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:24:36.013491Z","iopub.execute_input":"2024-12-08T16:24:36.013829Z","iopub.status.idle":"2024-12-08T16:25:15.414186Z","shell.execute_reply.started":"2024-12-08T16:24:36.013801Z","shell.execute_reply":"2024-12-08T16:25:15.413254Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m25000/25000\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 1ms/step\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_23/2323733411.py:56: RuntimeWarning: overflow encountered in expm1\n  return np.expm1(predictions)  # Reverse the log transformation\n","output_type":"stream"}],"execution_count":89},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Any NaN in transformed_test_df:\", np.any(np.isnan(transformed_test_df)))\nprint(\"Any Inf in transformed_test_df:\", np.any(np.isinf(transformed_test_df)))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:25:27.354991Z","iopub.execute_input":"2024-12-08T16:25:27.355320Z","iopub.status.idle":"2024-12-08T16:25:27.401188Z","shell.execute_reply.started":"2024-12-08T16:25:27.355290Z","shell.execute_reply":"2024-12-08T16:25:27.400298Z"}},"outputs":[{"name":"stdout","text":"Any NaN in transformed_test_df: False\nAny Inf in transformed_test_df: False\n","output_type":"stream"}],"execution_count":92},{"cell_type":"code","source":"]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"len(example_data[0])\n# predict_premium(example_data)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# batch_size = 32\n# predictions = []\n\n# for i in range(0, transformed_test_df.shape[0], batch_size):\n#     # Extract batch\n#     batch = transformed_test_df[i:i + batch_size]\n    \n#     # Ensure batch is a 2D array of dtype float32\n#     batch = batch.astype('float32')\n    \n#     # Check batch shape and dtype\n#     print(f\"Processing batch {i // batch_size + 1}, shape: {batch.shape}, dtype: {batch.dtype}\")\n    \n#     # Predict on the batch\n#     batch_predictions = model.predict(batch)\n#     predictions.append(batch_predictions)\n\n# # Concatenate all batch predictions\n# predictions = np.concatenate(predictions, axis=0)\n# print(\"Final predictions shape:\", predictions.shape)\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_df.shape","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# predict_premium(transformed_test_df)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission = test_df[['id']]\nsubmission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:25:48.536462Z","iopub.execute_input":"2024-12-08T16:25:48.537297Z","iopub.status.idle":"2024-12-08T16:25:48.548133Z","shell.execute_reply.started":"2024-12-08T16:25:48.537251Z","shell.execute_reply":"2024-12-08T16:25:48.547287Z"}},"outputs":[{"execution_count":93,"output_type":"execute_result","data":{"text/plain":"             id\n0       1200000\n1       1200001\n2       1200002\n3       1200003\n4       1200004\n...         ...\n799995  1999995\n799996  1999996\n799997  1999997\n799998  1999998\n799999  1999999\n\n[800000 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1200000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1200001</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1200002</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200003</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1200004</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>1999995</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>1999996</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>1999997</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>1999998</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>1999999</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 1 columns</p>\n</div>"},"metadata":{}}],"execution_count":93},{"cell_type":"code","source":"# transformed_test_df = transformed_test_df[X.columns]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission[\"Premium Amount\"] = predictions","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:26:01.714526Z","iopub.execute_input":"2024-12-08T16:26:01.714835Z","iopub.status.idle":"2024-12-08T16:26:01.720512Z","shell.execute_reply.started":"2024-12-08T16:26:01.714807Z","shell.execute_reply":"2024-12-08T16:26:01.719646Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_23/922273392.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  submission[\"Premium Amount\"] = predictions\n","output_type":"stream"}],"execution_count":94},{"cell_type":"code","source":"print(\"Shape of training data:\", X.shape)\nprint(\"Shape of test data:\", transformed_test_df.shape)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:26:06.204873Z","iopub.execute_input":"2024-12-08T16:26:06.205732Z","iopub.status.idle":"2024-12-08T16:26:06.210527Z","shell.execute_reply.started":"2024-12-08T16:26:06.205693Z","shell.execute_reply":"2024-12-08T16:26:06.209630Z"}},"outputs":[{"name":"stdout","text":"Shape of training data: (1000, 28)\nShape of test data: (800000, 28)\n","output_type":"stream"}],"execution_count":95},{"cell_type":"code","source":"\nsubmission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-08T16:26:13.043289Z","iopub.execute_input":"2024-12-08T16:26:13.043978Z","iopub.status.idle":"2024-12-08T16:26:13.054175Z","shell.execute_reply.started":"2024-12-08T16:26:13.043947Z","shell.execute_reply":"2024-12-08T16:26:13.053281Z"}},"outputs":[{"execution_count":96,"output_type":"execute_result","data":{"text/plain":"             id  Premium Amount\n0       1200000    1.557504e+22\n1       1200001    1.133957e+15\n2       1200002    4.924703e+13\n3       1200003    3.174750e+25\n4       1200004    2.103024e+20\n...         ...             ...\n799995  1999995    5.866525e+19\n799996  1999996    9.940215e+22\n799997  1999997    1.548210e+23\n799998  1999998    1.234803e+17\n799999  1999999    4.563395e+16\n\n[800000 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1200000</td>\n      <td>1.557504e+22</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1200001</td>\n      <td>1.133957e+15</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1200002</td>\n      <td>4.924703e+13</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200003</td>\n      <td>3.174750e+25</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1200004</td>\n      <td>2.103024e+20</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>799995</th>\n      <td>1999995</td>\n      <td>5.866525e+19</td>\n    </tr>\n    <tr>\n      <th>799996</th>\n      <td>1999996</td>\n      <td>9.940215e+22</td>\n    </tr>\n    <tr>\n      <th>799997</th>\n      <td>1999997</td>\n      <td>1.548210e+23</td>\n    </tr>\n    <tr>\n      <th>799998</th>\n      <td>1999998</td>\n      <td>1.234803e+17</td>\n    </tr>\n    <tr>\n      <th>799999</th>\n      <td>1999999</td>\n      <td>4.563395e+16</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows × 2 columns</p>\n</div>"},"metadata":{}}],"execution_count":96},{"cell_type":"code","source":"submission.to_csv('submission.csv', index=False)","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}