{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":84896,"databundleVersionId":10305135,"sourceType":"competition"}],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-12-07T10:22:45.144334Z","iopub.execute_input":"2024-12-07T10:22:45.144703Z","iopub.status.idle":"2024-12-07T10:22:45.152190Z","shell.execute_reply.started":"2024-12-07T10:22:45.144671Z","shell.execute_reply":"2024-12-07T10:22:45.150885Z"},"trusted":true},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e12/sample_submission.csv\n/kaggle/input/playground-series-s4e12/train.csv\n/kaggle/input/playground-series-s4e12/test.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e12/train.csv\")\ntrain_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T10:24:25.642325Z","iopub.execute_input":"2024-12-07T10:24:25.642729Z","iopub.status.idle":"2024-12-07T10:24:30.358999Z","shell.execute_reply.started":"2024-12-07T10:24:25.642686Z","shell.execute_reply":"2024-12-07T10:24:30.357909Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   id   Age  Gender  Annual Income Marital Status  Number of Dependents  \\\n0   0  19.0  Female        10049.0        Married                   1.0   \n1   1  39.0  Female        31678.0       Divorced                   3.0   \n2   2  23.0    Male        25602.0       Divorced                   3.0   \n3   3  21.0    Male       141855.0        Married                   2.0   \n4   4  21.0    Male        39651.0         Single                   1.0   \n\n  Education Level     Occupation  Health Score  Location  ... Previous Claims  \\\n0      Bachelor's  Self-Employed     22.598761     Urban  ...             2.0   \n1        Master's            NaN     15.569731     Rural  ...             1.0   \n2     High School  Self-Employed     47.177549  Suburban  ...             1.0   \n3      Bachelor's            NaN     10.938144     Rural  ...             1.0   \n4      Bachelor's  Self-Employed     20.376094     Rural  ...             0.0   \n\n   Vehicle Age  Credit Score  Insurance Duration           Policy Start Date  \\\n0         17.0         372.0                 5.0  2023-12-23 15:21:39.134960   \n1         12.0         694.0                 2.0  2023-06-12 15:21:39.111551   \n2         14.0           NaN                 3.0  2023-09-30 15:21:39.221386   \n3          0.0         367.0                 1.0  2024-06-12 15:21:39.226954   \n4          8.0         598.0                 4.0  2021-12-01 15:21:39.252145   \n\n  Customer Feedback Smoking Status Exercise Frequency Property Type  \\\n0              Poor             No             Weekly         House   \n1           Average            Yes            Monthly         House   \n2              Good            Yes             Weekly         House   \n3              Poor            Yes              Daily     Apartment   \n4              Poor            Yes             Weekly         House   \n\n  Premium Amount  \n0         2869.0  \n1         1483.0  \n2          567.0  \n3          765.0  \n4         2022.0  \n\n[5 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Annual Income</th>\n      <th>Marital Status</th>\n      <th>Number of Dependents</th>\n      <th>Education Level</th>\n      <th>Occupation</th>\n      <th>Health Score</th>\n      <th>Location</th>\n      <th>...</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Policy Start Date</th>\n      <th>Customer Feedback</th>\n      <th>Smoking Status</th>\n      <th>Exercise Frequency</th>\n      <th>Property Type</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>19.0</td>\n      <td>Female</td>\n      <td>10049.0</td>\n      <td>Married</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>22.598761</td>\n      <td>Urban</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>17.0</td>\n      <td>372.0</td>\n      <td>5.0</td>\n      <td>2023-12-23 15:21:39.134960</td>\n      <td>Poor</td>\n      <td>No</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2869.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>39.0</td>\n      <td>Female</td>\n      <td>31678.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>Master's</td>\n      <td>NaN</td>\n      <td>15.569731</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>694.0</td>\n      <td>2.0</td>\n      <td>2023-06-12 15:21:39.111551</td>\n      <td>Average</td>\n      <td>Yes</td>\n      <td>Monthly</td>\n      <td>House</td>\n      <td>1483.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>23.0</td>\n      <td>Male</td>\n      <td>25602.0</td>\n      <td>Divorced</td>\n      <td>3.0</td>\n      <td>High School</td>\n      <td>Self-Employed</td>\n      <td>47.177549</td>\n      <td>Suburban</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>2023-09-30 15:21:39.221386</td>\n      <td>Good</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>567.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>141855.0</td>\n      <td>Married</td>\n      <td>2.0</td>\n      <td>Bachelor's</td>\n      <td>NaN</td>\n      <td>10.938144</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>367.0</td>\n      <td>1.0</td>\n      <td>2024-06-12 15:21:39.226954</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Daily</td>\n      <td>Apartment</td>\n      <td>765.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>21.0</td>\n      <td>Male</td>\n      <td>39651.0</td>\n      <td>Single</td>\n      <td>1.0</td>\n      <td>Bachelor's</td>\n      <td>Self-Employed</td>\n      <td>20.376094</td>\n      <td>Rural</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>598.0</td>\n      <td>4.0</td>\n      <td>2021-12-01 15:21:39.252145</td>\n      <td>Poor</td>\n      <td>Yes</td>\n      <td>Weekly</td>\n      <td>House</td>\n      <td>2022.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"train_df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T10:25:07.760781Z","iopub.execute_input":"2024-12-07T10:25:07.761207Z","iopub.status.idle":"2024-12-07T10:25:08.466403Z","shell.execute_reply.started":"2024-12-07T10:25:07.761170Z","shell.execute_reply":"2024-12-07T10:25:08.465373Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"                 id           Age  Annual Income  Number of Dependents  \\\ncount  1.200000e+06  1.181295e+06   1.155051e+06          1.090328e+06   \nmean   5.999995e+05  4.114556e+01   3.274522e+04          2.009934e+00   \nstd    3.464103e+05  1.353995e+01   3.217951e+04          1.417338e+00   \nmin    0.000000e+00  1.800000e+01   1.000000e+00          0.000000e+00   \n25%    2.999998e+05  3.000000e+01   8.001000e+03          1.000000e+00   \n50%    5.999995e+05  4.100000e+01   2.391100e+04          2.000000e+00   \n75%    8.999992e+05  5.300000e+01   4.463400e+04          3.000000e+00   \nmax    1.199999e+06  6.400000e+01   1.499970e+05          4.000000e+00   \n\n       Health Score  Previous Claims   Vehicle Age  Credit Score  \\\ncount  1.125924e+06    835971.000000  1.199994e+06  1.062118e+06   \nmean   2.561391e+01         1.002689  9.569889e+00  5.929244e+02   \nstd    1.220346e+01         0.982840  5.776189e+00  1.499819e+02   \nmin    2.012237e+00         0.000000  0.000000e+00  3.000000e+02   \n25%    1.591896e+01         0.000000  5.000000e+00  4.680000e+02   \n50%    2.457865e+01         1.000000  1.000000e+01  5.950000e+02   \n75%    3.452721e+01         2.000000  1.500000e+01  7.210000e+02   \nmax    5.897591e+01         9.000000  1.900000e+01  8.490000e+02   \n\n       Insurance Duration  Premium Amount  \ncount        1.199999e+06    1.200000e+06  \nmean         5.018219e+00    1.102545e+03  \nstd          2.594331e+00    8.649989e+02  \nmin          1.000000e+00    2.000000e+01  \n25%          3.000000e+00    5.140000e+02  \n50%          5.000000e+00    8.720000e+02  \n75%          7.000000e+00    1.509000e+03  \nmax          9.000000e+00    4.999000e+03  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Age</th>\n      <th>Annual Income</th>\n      <th>Number of Dependents</th>\n      <th>Health Score</th>\n      <th>Previous Claims</th>\n      <th>Vehicle Age</th>\n      <th>Credit Score</th>\n      <th>Insurance Duration</th>\n      <th>Premium Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.200000e+06</td>\n      <td>1.181295e+06</td>\n      <td>1.155051e+06</td>\n      <td>1.090328e+06</td>\n      <td>1.125924e+06</td>\n      <td>835971.000000</td>\n      <td>1.199994e+06</td>\n      <td>1.062118e+06</td>\n      <td>1.199999e+06</td>\n      <td>1.200000e+06</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.999995e+05</td>\n      <td>4.114556e+01</td>\n      <td>3.274522e+04</td>\n      <td>2.009934e+00</td>\n      <td>2.561391e+01</td>\n      <td>1.002689</td>\n      <td>9.569889e+00</td>\n      <td>5.929244e+02</td>\n      <td>5.018219e+00</td>\n      <td>1.102545e+03</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.464103e+05</td>\n      <td>1.353995e+01</td>\n      <td>3.217951e+04</td>\n      <td>1.417338e+00</td>\n      <td>1.220346e+01</td>\n      <td>0.982840</td>\n      <td>5.776189e+00</td>\n      <td>1.499819e+02</td>\n      <td>2.594331e+00</td>\n      <td>8.649989e+02</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000e+00</td>\n      <td>1.800000e+01</td>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>2.012237e+00</td>\n      <td>0.000000</td>\n      <td>0.000000e+00</td>\n      <td>3.000000e+02</td>\n      <td>1.000000e+00</td>\n      <td>2.000000e+01</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.999998e+05</td>\n      <td>3.000000e+01</td>\n      <td>8.001000e+03</td>\n      <td>1.000000e+00</td>\n      <td>1.591896e+01</td>\n      <td>0.000000</td>\n      <td>5.000000e+00</td>\n      <td>4.680000e+02</td>\n      <td>3.000000e+00</td>\n      <td>5.140000e+02</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.999995e+05</td>\n      <td>4.100000e+01</td>\n      <td>2.391100e+04</td>\n      <td>2.000000e+00</td>\n      <td>2.457865e+01</td>\n      <td>1.000000</td>\n      <td>1.000000e+01</td>\n      <td>5.950000e+02</td>\n      <td>5.000000e+00</td>\n      <td>8.720000e+02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>8.999992e+05</td>\n      <td>5.300000e+01</td>\n      <td>4.463400e+04</td>\n      <td>3.000000e+00</td>\n      <td>3.452721e+01</td>\n      <td>2.000000</td>\n      <td>1.500000e+01</td>\n      <td>7.210000e+02</td>\n      <td>7.000000e+00</td>\n      <td>1.509000e+03</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.199999e+06</td>\n      <td>6.400000e+01</td>\n      <td>1.499970e+05</td>\n      <td>4.000000e+00</td>\n      <td>5.897591e+01</td>\n      <td>9.000000</td>\n      <td>1.900000e+01</td>\n      <td>8.490000e+02</td>\n      <td>9.000000e+00</td>\n      <td>4.999000e+03</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"train_df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-07T10:25:19.217296Z","iopub.execute_input":"2024-12-07T10:25:19.217696Z","iopub.status.idle":"2024-12-07T10:25:19.910291Z","shell.execute_reply.started":"2024-12-07T10:25:19.217660Z","shell.execute_reply":"2024-12-07T10:25:19.909057Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1200000 entries, 0 to 1199999\nData columns (total 21 columns):\n #   Column                Non-Null Count    Dtype  \n---  ------                --------------    -----  \n 0   id                    1200000 non-null  int64  \n 1   Age                   1181295 non-null  float64\n 2   Gender                1200000 non-null  object \n 3   Annual Income         1155051 non-null  float64\n 4   Marital Status        1181471 non-null  object \n 5   Number of Dependents  1090328 non-null  float64\n 6   Education Level       1200000 non-null  object \n 7   Occupation            841925 non-null   object \n 8   Health Score          1125924 non-null  float64\n 9   Location              1200000 non-null  object \n 10  Policy Type           1200000 non-null  object \n 11  Previous Claims       835971 non-null   float64\n 12  Vehicle Age           1199994 non-null  float64\n 13  Credit Score          1062118 non-null  float64\n 14  Insurance Duration    1199999 non-null  float64\n 15  Policy Start Date     1200000 non-null  object \n 16  Customer Feedback     1122176 non-null  object \n 17  Smoking Status        1200000 non-null  object \n 18  Exercise Frequency    1200000 non-null  object \n 19  Property Type         1200000 non-null  object \n 20  Premium Amount        1200000 non-null  float64\ndtypes: float64(9), int64(1), object(11)\nmemory usage: 192.3+ MB\n","output_type":"stream"}],"execution_count":7}]}